#ifndef O2_MCH_MAPPING_GENSEGMENTATIONIMPL0_H
#define O2_MCH_MAPPING_GENSEGMENTATIONIMPL0_H


#include <array>
#include "genMotifType.h"
#include <tuple>
#include "genSegmentationInterface.h"
#include <sstream>
#include <algorithm>
#include <stdexcept>
#include <ostream>
#include "contourCreator.h"
#include "motifPosition.h"
#include "motifPositionTwoPadSizes.h"
#include "pad.h"

namespace o2
{
namespace mch
{
namespace mapping
{

template<int SEGID, bool BENDINGPLANE, int NFEC, int (*berg2channel)(int), typename MOTIFPOSITION>
class SegmentationImpl0 : public SegmentationInterface
{
  public:
    SegmentationImpl0(const MotifTypeArray& motifTypes)
    { throw std::out_of_range("Invalid segmentation initialization. Only specific specializations are allowed."); }

    int getId() const override
    { return mId; }

    bool isBendingPlane() const override
    { return mIsBendingPlane; }

    int nofDualSampas() const override
    { return NFEC; }

    int nofPads() const override
    {
      return mNofPads;
    }

    bool hasPadByFEE(int dualSampaId, int dualSampaChannel) const override
    {
      if (dualSampaChannel < 0 || dualSampaChannel > 63) {
        throw std::out_of_range("dualSampaChannel should be between 0 and 63");
      }
      auto it = std::find_if(begin(mMotifPositions), end(mMotifPositions), [&](const MOTIFPOSITION& mp) { return mp.FECId()==dualSampaId; });
      if (it == mMotifPositions.end()) {
        throw std::out_of_range("dualSampaId is not there");
      }
      int index = std::distance(mMotifPositions.begin(), it);
      int padIndex = index * 64 + dualSampaChannel;
      return mPads[padIndex].isValid();
    }

    bool hasPadByPosition(double x, double y) const override {
      for ( auto i = 0; i < mFEContours.size(); ++i ){
        if (mFEContours[i].contains(x,y)) {
          return true;
        }
      }
       return false;
    }

    o2::mch::contour::Contour<double> getEnvelop() const override
    {
      std::vector<o2::mch::contour::Polygon<double>> polygons;
      for (auto i = 0; i < mFEContours.size(); ++i) {
        auto c = mFEContours[i];
        for (auto j = 0; j < c.size(); ++j) {
          polygons.push_back(c[j]);
        }
      }
      return o2::mch::contour::createContour(polygons);
    }

    o2::mch::contour::Contour<double> getSampaPads(int dualSampaIndex) const override
    {
      return mPadContours[dualSampaIndex];
    }

    std::vector<o2::mch::contour::Contour<double>> getSampaContours() const override {
      std::vector<o2::mch::contour::Contour<double>> contours;
      contours.insert(contours.end(),mFEContours.begin(),mFEContours.end());
      return contours;
    }

  private:

    std::vector<Pad> getPads(const MOTIFPOSITION& mp, const MotifTypeArray& motifTypes) {
      std::vector<Pad> motifPads{mp.getPads(motifTypes[mp.motifTypeId()])};
      std::vector<Pad> pads;
      for (auto p: motifPads) {
        pads.push_back(p.translate(mp.positionX(),mp.positionY()));
      }
      return pads;
    }

    void populatePadsForOneMotifPosition(int index, const MOTIFPOSITION& mp, const MotifTypeArray& motifTypes) {
      const MotifType& mt = motifTypes[mp.motifTypeId()];
      auto pads = getPads(mp,motifTypes);
      for (auto i = 0; i < pads.size(); ++i) {
         int fecChannel = berg2channel(mt.getBerg(i));
         int padIndex = index*64 + fecChannel;
         mPads[padIndex] = pads[i];
      }
    }

    void populatePads(const MotifTypeArray& motifTypes) {
      for ( int index = 0; index < mMotifPositions.size(); ++index ) {
        const MOTIFPOSITION& mp = mMotifPositions[index];
        const MotifType& mt = motifTypes[mp.motifTypeId()];
        populatePadsForOneMotifPosition(index,mp,motifTypes);
        mNofPads += mt.getNofPads();
      }
    }

    std::vector<o2::mch::contour::Polygon<double>> padAsPolygons(const std::vector<Pad>& pads)
    {
      std::vector<o2::mch::contour::Polygon<double>> cpads;
      for (auto&& p: pads) {
        cpads.push_back({
                         { p.xBottomLeft, p.yBottomLeft},
                         { p.xTopRight, p.yBottomLeft},
                         { p.xTopRight, p.yTopRight},
                         { p.xBottomLeft, p.yTopRight},
                         { p.xBottomLeft, p.yBottomLeft}
                       });
      }
      return cpads;
    }

    void createContours(const MotifTypeArray& motifTypes)
    {
      for (int index = 0; index < mMotifPositions.size(); ++index) {
        auto pads = padAsPolygons(getPads(mMotifPositions[index], motifTypes));
        o2::mch::contour::Contour<double> contour;
        for (auto& p: pads) {
          contour.addPolygon(p);
        }
        mPadContours[index] = contour;
        mFEContours[index] = o2::mch::contour::createContour(pads);
      }
    }

    int mId;
    bool mIsBendingPlane;
    int mNofPads;
    std::array<Pad,NFEC*64> mPads;
    std::array<MOTIFPOSITION,NFEC> mMotifPositions;
    std::array<o2::mch::contour::Contour<double>,NFEC> mPadContours;
    std::array<o2::mch::contour::Contour<double>,NFEC> mFEContours;
};

int berg80ToManu(int berg) {
  if (berg==2) return 15;
  if (berg==3) return 14;
  if (berg==4) return 13;
  if (berg==5) return 12;
  if (berg==6) return 11;
  if (berg==7) return 10;
  if (berg==8) return 9;
  if (berg==9) return 8;
  if (berg==10) return 7;
  if (berg==11) return 6;
  if (berg==12) return 5;
  if (berg==13) return 4;
  if (berg==14) return 3;
  if (berg==15) return 2;
  if (berg==16) return 1;
  if (berg==17) return 0;
  if (berg==21) return 31;
  if (berg==22) return 30;
  if (berg==23) return 29;
  if (berg==24) return 28;
  if (berg==25) return 27;
  if (berg==26) return 26;
  if (berg==27) return 25;
  if (berg==28) return 24;
  if (berg==29) return 23;
  if (berg==30) return 22;
  if (berg==31) return 21;
  if (berg==32) return 20;
  if (berg==33) return 19;
  if (berg==34) return 18;
  if (berg==35) return 17;
  if (berg==36) return 16;
  if (berg==42) return 32;
  if (berg==43) return 33;
  if (berg==44) return 34;
  if (berg==45) return 35;
  if (berg==46) return 36;
  if (berg==47) return 37;
  if (berg==48) return 38;
  if (berg==49) return 39;
  if (berg==50) return 40;
  if (berg==51) return 41;
  if (berg==52) return 42;
  if (berg==53) return 43;
  if (berg==54) return 44;
  if (berg==55) return 45;
  if (berg==56) return 46;
  if (berg==57) return 47;
  if (berg==61) return 48;
  if (berg==62) return 49;
  if (berg==63) return 50;
  if (berg==64) return 51;
  if (berg==65) return 52;
  if (berg==66) return 53;
  if (berg==67) return 54;
  if (berg==68) return 55;
  if (berg==69) return 56;
  if (berg==70) return 57;
  if (berg==71) return 58;
  if (berg==72) return 59;
  if (berg==73) return 60;
  if (berg==74) return 61;
  if (berg==75) return 62;
  if (berg==76) return 63;

  std::ostringstream msg;
  msg << "berg number " << berg << " is invalid";
  throw std::out_of_range(msg.str());
}
  int berg100ToManu(int berg) {
  if (berg==2) return 31;
  if (berg==3) return 30;
  if (berg==4) return 29;
  if (berg==5) return 28;
  if (berg==6) return 27;
  if (berg==7) return 26;
  if (berg==8) return 25;
  if (berg==9) return 24;
  if (berg==10) return 23;
  if (berg==11) return 22;
  if (berg==12) return 21;
  if (berg==13) return 20;
  if (berg==14) return 19;
  if (berg==15) return 18;
  if (berg==16) return 17;
  if (berg==17) return 16;
  if (berg==18) return 15;
  if (berg==19) return 14;
  if (berg==20) return 13;
  if (berg==21) return 12;
  if (berg==22) return 11;
  if (berg==23) return 10;
  if (berg==24) return 9;
  if (berg==25) return 8;
  if (berg==26) return 7;
  if (berg==27) return 6;
  if (berg==28) return 5;
  if (berg==29) return 4;
  if (berg==30) return 3;
  if (berg==31) return 2;
  if (berg==32) return 1;
  if (berg==33) return 0;
  if (berg==52) return 48;
  if (berg==53) return 49;
  if (berg==54) return 50;
  if (berg==55) return 51;
  if (berg==56) return 52;
  if (berg==57) return 53;
  if (berg==58) return 54;
  if (berg==59) return 55;
  if (berg==60) return 56;
  if (berg==61) return 57;
  if (berg==62) return 58;
  if (berg==63) return 59;
  if (berg==64) return 60;
  if (berg==65) return 61;
  if (berg==66) return 62;
  if (berg==67) return 63;
  if (berg==68) return 32;
  if (berg==69) return 33;
  if (berg==70) return 34;
  if (berg==71) return 35;
  if (berg==72) return 36;
  if (berg==73) return 37;
  if (berg==74) return 38;
  if (berg==75) return 39;
  if (berg==76) return 40;
  if (berg==77) return 41;
  if (berg==78) return 42;
  if (berg==79) return 43;
  if (berg==80) return 44;
  if (berg==81) return 45;
  if (berg==82) return 46;
  if (berg==83) return 47;

  std::ostringstream msg;
  msg << "berg number " << berg << " is invalid";
  throw std::out_of_range(msg.str());
}
  
template<>
SegmentationImpl0<0,true,226,berg80ToManu,MotifPositionTwoPadSizes>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(0),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,6,14,80.64,0,10, {32,71,29,68,26,64,24,62,56,15,53,12,11,47,6,3}},
  {2,3,14,70.56,0},
  {3,3,11,65.52,0},
  {4,3,11,60.48,0},
  {5,3,11,55.44,0},
  {6,3,0,52.92,0},
  {7,3,0,50.4,0},
  {8,3,0,47.88,0},
  {9,3,0,45.36,0},
  {10,3,0,42.84,0},
  {11,3,0,40.32,0},
  {12,3,0,37.8,0},
  {13,3,0,35.28,0},
  {14,3,0,32.76,0},
  {15,3,0,30.24,0},
  {16,3,0,27.72,0},
  {17,3,0,25.2,0},
  {18,3,0,22.68,0},
  {19,3,0,20.16,0},
  {20,3,0,17.64,0},
  {27,6,14,80.64,6.72,10, {32,71,29,68,26,64,24,62,56,15,53,12,11,47,6,3}},
  {28,3,14,70.56,6.72},
  {29,3,11,65.52,6.72},
  {30,3,11,60.48,6.72},
  {31,3,11,55.44,6.72},
  {32,3,0,52.92,6.72},
  {33,3,0,50.4,6.72},
  {34,3,0,47.88,6.72},
  {35,3,0,45.36,6.72},
  {36,3,0,42.84,6.72},
  {37,3,0,40.32,6.72},
  {38,3,0,37.8,6.72},
  {39,3,0,35.28,6.72},
  {40,3,0,32.76,6.72},
  {41,3,0,30.24,6.72},
  {42,3,0,27.72,6.72},
  {43,3,0,25.2,6.72},
  {44,3,0,22.68,6.72},
  {45,3,0,20.16,6.72},
  {46,3,0,17.64,6.72},
  {47,2,0,13.86,6.72},
  {53,6,14,80.64,13.44,10, {32,71,29,68,26,64,24,62,56,15,53,12,11,47,6,3}},
  {54,3,14,70.56,13.44},
  {55,3,11,65.52,13.44},
  {56,3,11,60.48,13.44},
  {57,3,11,55.44,13.44},
  {58,3,0,52.92,13.44},
  {59,3,0,50.4,13.44},
  {60,3,0,47.88,13.44},
  {61,3,0,45.36,13.44},
  {62,3,0,42.84,13.44},
  {63,3,0,40.32,13.44},
  {64,3,0,37.8,13.44},
  {65,3,0,35.28,13.44},
  {66,3,0,32.76,13.44},
  {67,3,0,30.24,13.44},
  {68,3,0,27.72,13.44},
  {69,3,0,25.2,13.44},
  {70,3,0,22.68,13.44},
  {71,3,0,20.16,13.44},
  {72,3,0,17.64,13.44},
  {73,3,0,15.12,13.44},
  {74,3,0,12.6,13.44},
  {75,1,0,9.45,13.44},
  {76,0,0,0,17.22},
  {79,6,14,80.64,20.16,10, {32,71,29,68,26,64,24,62,56,15,53,12,11,47,6,3}},
  {80,3,14,70.56,20.16},
  {81,3,11,65.52,20.16},
  {82,3,11,60.48,20.16},
  {83,3,11,55.44,20.16},
  {84,3,11,50.4,20.16},
  {85,3,0,47.88,20.16},
  {86,3,0,45.36,20.16},
  {87,3,0,42.84,20.16},
  {88,3,0,40.32,20.16},
  {89,3,0,37.8,20.16},
  {90,3,0,35.28,20.16},
  {91,3,0,32.76,20.16},
  {92,3,0,30.24,20.16},
  {93,3,0,27.72,20.16},
  {94,3,0,25.2,20.16},
  {95,3,0,22.68,20.16},
  {96,3,0,20.16,20.16},
  {97,3,0,17.64,20.16},
  {98,3,0,15.12,20.16},
  {99,3,0,12.6,20.16},
  {100,3,0,10.08,20.16},
  {101,3,0,7.56,20.16},
  {102,3,0,5.04,20.16},
  {103,3,0,2.52,20.16},
  {104,3,0,0,20.16},
  {105,6,14,80.64,26.88,10, {32,71,29,68,26,64,24,62,56,15,53,12,11,47,6,3}},
  {106,3,14,70.56,26.88},
  {107,3,11,65.52,26.88},
  {108,3,11,60.48,26.88},
  {109,3,11,55.44,26.88},
  {110,3,11,50.4,26.88},
  {111,3,0,47.88,26.88},
  {112,3,0,45.36,26.88},
  {113,3,0,42.84,26.88},
  {114,3,0,40.32,26.88},
  {115,3,0,37.8,26.88},
  {116,3,0,35.28,26.88},
  {117,3,0,32.76,26.88},
  {118,3,0,30.24,26.88},
  {119,3,0,27.72,26.88},
  {120,3,0,25.2,26.88},
  {121,3,0,22.68,26.88},
  {122,3,0,20.16,26.88},
  {123,3,0,17.64,26.88},
  {124,3,0,15.12,26.88},
  {125,3,0,12.6,26.88},
  {126,3,0,10.08,26.88},
  {127,3,0,7.56,26.88},
  {128,3,0,5.04,26.88},
  {129,3,0,2.52,26.88},
  {130,3,0,0,26.88},
  {131,6,14,80.64,33.6,10, {32,71,29,68,26,64,24,62,56,15,53,12,11,47,6,3}},
  {132,3,14,70.56,33.6},
  {133,3,14,60.48,33.6},
  {134,3,11,55.44,33.6},
  {135,3,11,50.4,33.6},
  {136,3,11,45.36,33.6},
  {137,3,0,42.84,33.6},
  {138,3,0,40.32,33.6},
  {139,3,0,37.8,33.6},
  {140,3,0,35.28,33.6},
  {141,3,0,32.76,33.6},
  {142,3,0,30.24,33.6},
  {143,3,0,27.72,33.6},
  {144,3,0,25.2,33.6},
  {145,3,0,22.68,33.6},
  {146,3,0,20.16,33.6},
  {147,3,0,17.64,33.6},
  {148,3,0,15.12,33.6},
  {149,3,0,12.6,33.6},
  {150,3,0,10.08,33.6},
  {151,3,0,7.56,33.6},
  {152,3,0,5.04,33.6},
  {153,3,0,2.52,33.6},
  {154,3,0,0,33.6},
  {157,6,14,80.64,40.32,10, {32,71,29,68,26,64,24,62,56,15,53,12,11,47,6,3}},
  {158,3,14,70.56,40.32},
  {159,3,14,60.48,40.32},
  {160,3,11,55.44,40.32},
  {161,3,11,50.4,40.32},
  {162,3,11,45.36,40.32},
  {163,3,0,42.84,40.32},
  {164,3,0,40.32,40.32},
  {165,3,0,37.8,40.32},
  {166,3,0,35.28,40.32},
  {167,3,0,32.76,40.32},
  {168,3,0,30.24,40.32},
  {169,3,0,27.72,40.32},
  {170,3,0,25.2,40.32},
  {171,3,0,22.68,40.32},
  {172,3,0,20.16,40.32},
  {173,3,0,17.64,40.32},
  {174,3,0,15.12,40.32},
  {175,3,0,12.6,40.32},
  {176,3,0,10.08,40.32},
  {177,3,0,7.56,40.32},
  {178,3,0,5.04,40.32},
  {179,3,0,2.52,40.32},
  {180,3,0,0,40.32},
  {183,3,14,70.56,47.04},
  {184,3,14,60.48,47.04},
  {185,3,14,50.4,47.04},
  {186,3,11,45.36,47.04},
  {187,3,11,40.32,47.04},
  {188,3,11,35.28,47.04},
  {189,3,11,30.24,47.04},
  {190,3,11,25.2,47.04},
  {191,3,0,22.68,47.04},
  {192,3,0,20.16,47.04},
  {193,3,0,17.64,47.04},
  {194,3,0,15.12,47.04},
  {195,3,0,12.6,47.04},
  {196,3,0,10.08,47.04},
  {197,3,0,7.56,47.04},
  {198,3,0,5.04,47.04},
  {199,3,0,2.52,47.04},
  {200,3,0,0,47.04},
  {201,8,14,70.56,53.76},
  {202,3,14,60.48,53.76},
  {203,3,14,50.4,53.76},
  {204,3,11,45.36,53.76},
  {205,3,11,40.32,53.76},
  {206,3,11,35.28,53.76},
  {207,3,11,30.24,53.76},
  {208,3,11,25.2,53.76},
  {209,3,11,20.16,53.76},
  {210,3,11,15.12,53.76},
  {211,3,11,10.08,53.76},
  {212,3,11,5.04,53.76},
  {213,3,11,0,53.76},
  {214,4,14,60.48,60.48},
  {215,3,14,50.4,60.48},
  {216,3,14,40.32,60.48},
  {217,3,14,30.24,60.48},
  {218,3,11,25.2,60.48},
  {219,3,11,20.16,60.48},
  {220,3,11,15.12,60.48},
  {221,3,11,10.08,60.48},
  {222,3,11,5.04,60.48},
  {223,3,11,0,60.48},
  {224,3,14,50.4,67.2},
  {225,3,14,40.32,67.2},
  {226,3,14,30.24,67.2},
  {227,3,14,20.16,67.2},
  {228,3,11,15.12,67.2},
  {229,3,11,10.08,67.2},
  {230,3,11,5.04,67.2},
  {231,3,11,0,67.2},
  {232,7,14,50.4,73.92},
  {233,3,14,40.32,73.92},
  {234,3,14,30.24,73.92},
  {235,3,14,20.16,73.92},
  {236,3,14,10.08,73.92},
  {237,3,14,0,73.92},
  {238,5,14,37.8,80.64},
  {239,5,14,30.24,80.64},
  {240,5,14,22.68,80.64},
  {241,5,14,15.12,80.64},
  {242,5,14,7.56,80.64},
  {243,5,14,0,80.64}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<0,false,225,berg80ToManu,MotifPositionTwoPadSizes>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(0),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1025,17,2,80.325,0.21},
  {1026,14,2,70.245,0.21},
  {1027,13,1,65.205,0.21},
  {1028,13,1,60.165,0.21},
  {1029,13,1,55.125,0.21},
  {1030,9,0,52.605,0.21},
  {1031,9,0,50.085,0.21},
  {1032,9,0,47.565,0.21},
  {1033,9,0,45.045,0.21},
  {1034,9,0,42.525,0.21},
  {1035,9,0,40.005,0.21},
  {1036,9,0,37.485,0.21},
  {1037,9,0,34.965,0.21},
  {1038,9,0,32.445,0.21},
  {1039,9,0,29.925,0.21},
  {1040,9,0,27.405,0.21},
  {1041,9,0,24.885,0.21},
  {1042,9,0,22.365,0.21},
  {1043,9,0,19.845,0.21},
  {1044,20,0,16.695,0.21},
  {1051,17,2,80.325,6.93},
  {1052,14,2,70.245,6.93},
  {1053,13,1,65.205,6.93},
  {1054,13,1,60.165,6.93},
  {1055,13,1,55.125,6.93},
  {1056,9,0,52.605,6.93},
  {1057,9,0,50.085,6.93},
  {1058,9,0,47.565,6.93},
  {1059,9,0,45.045,6.93},
  {1060,9,0,42.525,6.93},
  {1061,9,0,40.005,6.93},
  {1062,9,0,37.485,6.93},
  {1063,9,0,34.965,6.93},
  {1064,9,0,32.445,6.93},
  {1065,9,0,29.925,6.93},
  {1066,9,0,27.405,6.93},
  {1067,9,0,24.885,6.93},
  {1068,9,0,22.365,6.93},
  {1069,9,0,19.845,6.93},
  {1070,21,0,16.695,7.35},
  {1071,12,0,11.655,7.35},
  {1077,17,2,80.325,13.65},
  {1078,14,2,70.245,13.65},
  {1079,13,1,65.205,13.65},
  {1080,13,1,60.165,13.65},
  {1081,13,1,55.125,13.65},
  {1082,9,0,52.605,13.65},
  {1083,9,0,50.085,13.65},
  {1084,9,0,47.565,13.65},
  {1085,9,0,45.045,13.65},
  {1086,9,0,42.525,13.65},
  {1087,9,0,40.005,13.65},
  {1088,9,0,37.485,13.65},
  {1089,9,0,34.965,13.65},
  {1090,9,0,32.445,13.65},
  {1091,9,0,29.925,13.65},
  {1092,9,0,27.405,13.65},
  {1093,9,0,24.885,13.65},
  {1094,9,0,22.365,13.65},
  {1095,9,0,19.845,13.65},
  {1096,9,0,17.325,13.65},
  {1097,9,0,14.805,13.65},
  {1098,22,0,11.655,14.49},
  {1099,11,0,5.985,14.49},
  {1100,10,0,1.575,17.85},
  {1103,17,2,80.325,20.37},
  {1104,14,2,70.245,20.37},
  {1105,13,1,65.205,20.37},
  {1106,13,1,60.165,20.37},
  {1107,13,1,55.125,20.37},
  {1108,13,1,50.085,20.37},
  {1109,9,0,47.565,20.37},
  {1110,9,0,45.045,20.37},
  {1111,9,0,42.525,20.37},
  {1112,9,0,40.005,20.37},
  {1113,9,0,37.485,20.37},
  {1114,9,0,34.965,20.37},
  {1115,9,0,32.445,20.37},
  {1116,9,0,29.925,20.37},
  {1117,9,0,27.405,20.37},
  {1118,9,0,24.885,20.37},
  {1119,9,0,22.365,20.37},
  {1120,9,0,19.845,20.37},
  {1121,9,0,17.325,20.37},
  {1122,9,0,14.805,20.37},
  {1123,9,0,12.285,20.37},
  {1124,9,0,9.765,20.37},
  {1125,9,0,7.245,20.37},
  {1126,9,0,4.725,20.37},
  {1127,9,0,2.205,20.37},
  {1128,9,0,-0.315,20.37},
  {1129,17,2,80.325,27.09},
  {1130,14,2,70.245,27.09},
  {1131,13,1,65.205,27.09},
  {1132,13,1,60.165,27.09},
  {1133,13,1,55.125,27.09},
  {1134,13,1,50.085,27.09},
  {1135,13,1,45.045,27.09},
  {1136,9,0,42.525,27.09},
  {1137,9,0,40.005,27.09},
  {1138,9,0,37.485,27.09},
  {1139,9,0,34.965,27.09},
  {1140,9,0,32.445,27.09},
  {1141,9,0,29.925,27.09},
  {1142,9,0,27.405,27.09},
  {1143,9,0,24.885,27.09},
  {1144,9,0,22.365,27.09},
  {1145,9,0,19.845,27.09},
  {1146,9,0,17.325,27.09},
  {1147,9,0,14.805,27.09},
  {1148,9,0,12.285,27.09},
  {1149,9,0,9.765,27.09},
  {1150,9,0,7.245,27.09},
  {1151,9,0,4.725,27.09},
  {1152,9,0,2.205,27.09},
  {1153,9,0,-0.315,27.09},
  {1155,17,2,80.325,33.81},
  {1156,14,2,70.245,33.81},
  {1157,14,2,60.165,33.81},
  {1158,13,1,55.125,33.81},
  {1159,13,1,50.085,33.81},
  {1160,13,1,45.045,33.81},
  {1161,9,0,42.525,33.81},
  {1162,9,0,40.005,33.81},
  {1163,9,0,37.485,33.81},
  {1164,9,0,34.965,33.81},
  {1165,9,0,32.445,33.81},
  {1166,9,0,29.925,33.81},
  {1167,9,0,27.405,33.81},
  {1168,9,0,24.885,33.81},
  {1169,9,0,22.365,33.81},
  {1170,9,0,19.845,33.81},
  {1171,9,0,17.325,33.81},
  {1172,9,0,14.805,33.81},
  {1173,9,0,12.285,33.81},
  {1174,9,0,9.765,33.81},
  {1175,9,0,7.245,33.81},
  {1176,9,0,4.725,33.81},
  {1177,9,0,2.205,33.81},
  {1178,9,0,-0.315,33.81},
  {1181,17,2,80.325,40.53},
  {1182,14,2,70.245,40.53},
  {1183,14,2,60.165,40.53},
  {1184,13,1,55.125,40.53},
  {1185,13,1,50.085,40.53},
  {1186,13,1,45.045,40.53},
  {1187,9,0,42.525,40.53},
  {1188,9,0,40.005,40.53},
  {1189,9,0,37.485,40.53},
  {1190,9,0,34.965,40.53},
  {1191,9,0,32.445,40.53},
  {1192,9,0,29.925,40.53},
  {1193,9,0,27.405,40.53},
  {1194,9,0,24.885,40.53},
  {1195,9,0,22.365,40.53},
  {1196,9,0,19.845,40.53},
  {1197,9,0,17.325,40.53},
  {1198,9,0,14.805,40.53},
  {1199,9,0,12.285,40.53},
  {1200,9,0,9.765,40.53},
  {1201,9,0,7.245,40.53},
  {1202,9,0,4.725,40.53},
  {1203,9,0,2.205,40.53},
  {1204,9,0,-0.315,40.53},
  {1207,14,2,70.245,47.25},
  {1208,14,2,60.165,47.25},
  {1209,14,2,50.085,47.25},
  {1210,13,1,45.045,47.25},
  {1211,13,1,40.005,47.25},
  {1212,13,1,34.965,47.25},
  {1213,13,1,29.925,47.25},
  {1214,13,1,24.885,47.25},
  {1215,9,0,22.365,47.25},
  {1216,9,0,19.845,47.25},
  {1217,9,0,17.325,47.25},
  {1218,9,0,14.805,47.25},
  {1219,9,0,12.285,47.25},
  {1220,9,0,9.765,47.25},
  {1221,9,0,7.245,47.25},
  {1222,9,0,4.725,47.25},
  {1223,9,0,2.205,47.25},
  {1224,9,0,-0.315,47.25},
  {1225,19,2,70.245,53.97},
  {1226,14,2,60.165,53.97},
  {1227,14,2,50.085,53.97},
  {1228,13,1,45.045,53.97},
  {1229,13,1,40.005,53.97},
  {1230,13,1,34.965,53.97},
  {1231,13,1,29.925,53.97},
  {1232,13,1,24.885,53.97},
  {1233,13,1,19.845,53.97},
  {1234,13,1,14.805,53.97},
  {1235,13,1,9.765,53.97},
  {1236,13,1,4.725,53.97},
  {1237,13,1,-0.315,53.97},
  {1238,14,2,60.165,60.69},
  {1239,14,2,50.085,60.69},
  {1240,14,2,40.005,60.69},
  {1241,13,1,34.965,60.69},
  {1242,13,1,29.925,60.69},
  {1243,13,1,24.885,60.69},
  {1244,13,1,19.845,60.69},
  {1245,13,1,14.805,60.69},
  {1246,13,1,9.765,60.69},
  {1247,13,1,4.725,60.69},
  {1248,13,1,-0.315,60.69},
  {1249,14,2,50.085,67.41},
  {1250,14,2,40.005,67.41},
  {1251,14,2,29.925,67.41},
  {1252,14,2,19.845,67.41},
  {1253,13,1,14.805,67.41},
  {1254,13,1,9.765,67.41},
  {1255,13,1,4.725,67.41},
  {1256,13,1,-0.315,67.41},
  {1257,18,2,50.085,74.13},
  {1258,14,2,40.005,74.13},
  {1259,14,2,29.925,74.13},
  {1260,14,2,19.845,74.13},
  {1261,14,2,9.765,74.13},
  {1262,14,2,-0.315,74.13},
  {1263,16,2,40.005,80.85,3, {4,6,11,47,9,8,44,43,5,46,10,45}},
  {1264,15,2,29.925,80.85,3, {4,6,11,47,9,8,44,43,5,46,10,45,7,42,3,2}},
  {1265,15,2,19.845,80.85,3, {4,6,11,47,9,8,44,43,5,46,10,45,7,42,3,2}},
  {1266,15,2,9.765,80.85,3, {4,6,11,47,9,8,44,43,5,46,10,45,7,42,3,2}},
  {1267,15,2,-0.315,80.85,3, {4,6,11,47,9,8,44,43,5,46,10,45,7,42,3,2}}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<1,true,221,berg80ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(1),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,31,15,107,-0.75},
  {2,29,15,95,-0.75},
  {3,27,12,89,-0.75},
  {4,27,12,83,-0.75},
  {5,27,12,77,-0.75},
  {6,27,12,71,-0.75},
  {7,27,12,65,-0.75},
  {8,27,12,59,-0.75},
  {9,27,12,53,-0.75},
  {10,23,7,50,-0.75},
  {11,23,7,47,-0.75},
  {12,23,7,44,-0.75},
  {13,23,7,41,-0.75},
  {14,23,7,38,-0.75},
  {15,23,7,35,-0.75},
  {16,23,7,32,-0.75},
  {17,23,7,29,-0.75},
  {18,23,7,26,-0.75},
  {19,59,7,22.25,-0.75},
  {27,32,15,107,7.25},
  {28,30,15,95,7.25},
  {29,28,12,89,7.25},
  {30,28,12,83,7.25},
  {31,28,12,77,7.25},
  {32,28,12,71,7.25},
  {33,28,12,65,7.25},
  {34,28,12,59,7.25},
  {35,28,12,53,7.25},
  {36,24,7,50,7.25},
  {37,24,7,47,7.25},
  {38,24,7,44,7.25},
  {39,24,7,41,7.25},
  {40,24,7,38,7.25},
  {41,24,7,35,7.25},
  {42,24,7,32,7.25},
  {43,24,7,29,7.25},
  {44,24,7,26,7.25},
  {45,24,7,23,7.25},
  {46,57,7,17.75,7.25},
  {53,32,15,107,15.25},
  {54,30,15,95,15.25},
  {55,28,12,89,15.25},
  {56,28,12,83,15.25},
  {57,28,12,77,15.25},
  {58,28,12,71,15.25},
  {59,28,12,65,15.25},
  {60,28,12,59,15.25},
  {61,28,12,53,15.25},
  {62,24,7,50,15.25},
  {63,24,7,47,15.25},
  {64,24,7,44,15.25},
  {65,24,7,41,15.25},
  {66,24,7,38,15.25},
  {67,24,7,35,15.25},
  {68,24,7,32,15.25},
  {69,24,7,29,15.25},
  {70,24,7,26,15.25},
  {71,24,7,23,15.25},
  {72,24,7,20,15.25},
  {73,24,7,17,15.25},
  {74,58,7,13.25,15.25},
  {75,60,7,1.25,19.25},
  {79,48,15,107,23.25},
  {80,30,15,95,23.25},
  {81,26,15,83,23.25},
  {82,28,12,77,23.25},
  {83,28,12,71,23.25},
  {84,28,12,65,23.25},
  {85,28,12,59,23.25},
  {86,28,12,53,23.25},
  {87,28,12,47,23.25},
  {88,24,7,44,23.25},
  {89,24,7,41,23.25},
  {90,24,7,38,23.25},
  {91,24,7,35,23.25},
  {92,24,7,32,23.25},
  {93,24,7,29,23.25},
  {94,24,7,26,23.25},
  {95,24,7,23,23.25},
  {96,24,7,20,23.25},
  {97,24,7,17,23.25},
  {98,61,7,14,23.75},
  {99,62,7,11,23.25},
  {100,63,7,8,23.25},
  {101,64,7,5,23.25},
  {102,65,7,2,23.25},
  {103,66,7,-1,23.25},
  {105,30,15,95,31.25},
  {106,26,15,83,31.25},
  {107,28,12,77,31.25},
  {108,28,12,71,31.25},
  {109,28,12,65,31.25},
  {110,28,12,59,31.25},
  {111,28,12,53,31.25},
  {112,28,12,47,31.25},
  {113,28,12,41,31.25},
  {114,24,7,38,31.25},
  {115,24,7,35,31.25},
  {116,24,7,32,31.25},
  {117,24,7,29,31.25},
  {118,24,7,26,31.25},
  {119,24,7,23,31.25},
  {120,24,7,20,31.25},
  {121,24,7,17,31.25},
  {122,24,7,14,31.25},
  {123,24,7,11,31.25},
  {124,24,7,8,31.25},
  {125,24,7,5,31.25},
  {126,24,7,2,31.25},
  {127,24,7,-1,31.25},
  {131,30,15,95,39.25},
  {132,26,15,83,39.25},
  {133,28,12,77,39.25},
  {134,28,12,71,39.25},
  {135,28,12,65,39.25},
  {136,28,12,59,39.25},
  {137,28,12,53,39.25},
  {138,28,12,47,39.25},
  {139,28,12,41,39.25},
  {140,28,12,35,39.25},
  {141,24,7,32,39.25},
  {142,24,7,29,39.25},
  {143,24,7,26,39.25},
  {144,24,7,23,39.25},
  {145,24,7,20,39.25},
  {146,24,7,17,39.25},
  {147,24,7,14,39.25},
  {148,24,7,11,39.25},
  {149,24,7,8,39.25},
  {150,24,7,5,39.25},
  {151,24,7,2,39.25},
  {152,24,7,-1,39.25},
  {157,49,15,95,47.25},
  {158,26,15,83,47.25},
  {159,28,12,77,47.25},
  {160,28,12,71,47.25},
  {161,28,12,65,47.25},
  {162,28,12,59,47.25},
  {163,28,12,53,47.25},
  {164,28,12,47,47.25},
  {165,28,12,41,47.25},
  {166,28,12,35,47.25},
  {167,28,12,29,47.25},
  {168,28,12,23,47.25},
  {169,24,7,20,47.25},
  {170,24,7,17,47.25},
  {171,24,7,14,47.25},
  {172,24,7,11,47.25},
  {173,24,7,8,47.25},
  {174,24,7,5,47.25},
  {175,24,7,2,47.25},
  {176,24,7,-1,47.25},
  {183,50,15,95,55.25},
  {184,33,15,83,55.25},
  {185,26,15,71,55.25},
  {186,28,12,65,55.25},
  {187,28,12,59,55.25},
  {188,28,12,53,55.25},
  {189,28,12,47,55.25},
  {190,28,12,41,55.25},
  {191,28,12,35,55.25},
  {192,28,12,29,55.25},
  {193,28,12,23,55.25},
  {194,28,12,17,55.25},
  {195,28,12,11,55.25},
  {196,28,12,5,55.25},
  {197,35,12,-1,55.25},
  {201,33,15,83,63.25},
  {202,26,15,71,63.25},
  {203,26,15,59,63.25},
  {204,28,12,53,63.25},
  {205,28,12,47,63.25},
  {206,28,12,41,63.25},
  {207,28,12,35,63.25},
  {208,28,12,29,63.25},
  {209,28,12,23,63.25},
  {210,28,12,17,63.25},
  {211,28,12,11,63.25},
  {212,28,12,5,63.25},
  {213,35,12,-1,63.25},
  {214,51,15,83,71.25},
  {215,26,15,71,71.25},
  {216,26,15,59,71.25},
  {217,26,15,47,71.25},
  {218,28,12,41,71.25},
  {219,28,12,35,71.25},
  {220,28,12,29,71.25},
  {221,28,12,23,71.25},
  {222,28,12,17,71.25},
  {223,28,12,11,71.25},
  {224,28,12,5,71.25},
  {225,35,12,-1,71.25},
  {226,53,15,71,79.25},
  {227,47,15,65,79.25},
  {228,46,15,59,79.25},
  {229,56,15,50,95.25},
  {230,45,15,53,79.25},
  {231,44,15,47,79.25},
  {232,55,15,41,95.25},
  {233,43,15,41,79.25},
  {234,34,15,35,79.25},
  {235,34,15,29,79.25},
  {236,25,12,26,79.25},
  {237,25,12,23,79.25},
  {238,25,12,20,79.25},
  {239,25,12,17,79.25},
  {240,25,12,14,79.25},
  {241,25,12,11,79.25},
  {242,25,12,8,79.25},
  {243,25,12,5,79.25},
  {244,25,12,2,79.25},
  {245,25,12,-1,79.25},
  {246,54,15,35,95.25},
  {247,41,15,29,95.25},
  {248,40,15,23,95.25},
  {249,39,15,17,95.25},
  {250,52,15,11,111.25},
  {251,38,15,11,95.25},
  {252,37,15,5,95.25},
  {253,42,15,-1,111.25},
  {254,36,15,-1,95.25}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<1,false,222,berg80ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(1),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1025,77,9,105.125,-0.5},
  {1026,76,9,95.375,-0.5},
  {1027,70,8,89.375,-0.5},
  {1028,70,8,83.375,-0.5},
  {1029,70,8,77.375,-0.5},
  {1030,70,8,71.375,-0.5},
  {1031,70,8,65.375,-0.5},
  {1032,70,8,59.375,-0.5},
  {1033,70,8,53.375,-0.5},
  {1034,67,7,50.375,-0.5},
  {1035,67,7,47.375,-0.5},
  {1036,67,7,44.375,-0.5},
  {1037,67,7,41.375,-0.5},
  {1038,67,7,38.375,-0.5},
  {1039,67,7,35.375,-0.5},
  {1040,67,7,32.375,-0.5},
  {1041,67,7,29.375,-0.5},
  {1042,67,7,26.375,-0.5},
  {1043,94,7,22.625,-0.5},
  {1051,77,9,105.125,7.5},
  {1052,76,9,95.375,7.5},
  {1053,71,8,89.375,7.5},
  {1054,71,8,83.375,7.5},
  {1055,71,8,77.375,7.5},
  {1056,71,8,71.375,7.5},
  {1057,71,8,65.375,7.5},
  {1058,71,8,59.375,7.5},
  {1059,71,8,53.375,7.5},
  {1060,68,7,50.375,7.5},
  {1061,68,7,47.375,7.5},
  {1062,68,7,44.375,7.5},
  {1063,68,7,41.375,7.5},
  {1064,68,7,38.375,7.5},
  {1065,68,7,35.375,7.5},
  {1066,68,7,32.375,7.5},
  {1067,68,7,29.375,7.5},
  {1068,68,7,26.375,7.5},
  {1069,68,7,23.375,7.5},
  {1070,91,7,18.125,7.5},
  {1077,77,9,105.125,15.5},
  {1078,76,9,95.375,15.5},
  {1079,71,8,89.375,15.5},
  {1080,71,8,83.375,15.5},
  {1081,71,8,77.375,15.5},
  {1082,71,8,71.375,15.5},
  {1083,71,8,65.375,15.5},
  {1084,71,8,59.375,15.5},
  {1085,71,8,53.375,15.5},
  {1086,68,7,50.375,15.5},
  {1087,68,7,47.375,15.5},
  {1088,68,7,44.375,15.5},
  {1089,68,7,41.375,15.5},
  {1090,68,7,38.375,15.5},
  {1091,68,7,35.375,15.5},
  {1092,68,7,32.375,15.5},
  {1093,68,7,29.375,15.5},
  {1094,68,7,26.375,15.5},
  {1095,68,7,23.375,15.5},
  {1096,68,7,20.375,15.5},
  {1097,68,7,17.375,15.5},
  {1098,92,7,13.625,15.5},
  {1099,98,7,1.625,19.5},
  {1103,80,9,107.375,23.5},
  {1104,75,9,95.375,23.5},
  {1105,73,9,83.375,23.5},
  {1106,71,8,77.375,23.5},
  {1107,71,8,71.375,23.5},
  {1108,71,8,65.375,23.5},
  {1109,71,8,59.375,23.5},
  {1110,71,8,53.375,23.5},
  {1111,71,8,47.375,23.5},
  {1112,68,7,44.375,23.5},
  {1113,68,7,41.375,23.5},
  {1114,68,7,38.375,23.5},
  {1115,68,7,35.375,23.5},
  {1116,68,7,32.375,23.5},
  {1117,68,7,29.375,23.5},
  {1118,68,7,26.375,23.5},
  {1119,68,7,23.375,23.5},
  {1120,68,7,20.375,23.5},
  {1121,68,7,17.375,23.5},
  {1122,99,7,14.375,24},
  {1123,100,7,11.375,23.5},
  {1124,101,7,8.375,23.5},
  {1125,102,7,5.375,23.5},
  {1126,103,7,2.375,23.5},
  {1127,104,7,-0.625,23.5},
  {1129,75,9,95.375,31.5},
  {1130,73,9,83.375,31.5},
  {1131,71,8,77.375,31.5},
  {1132,71,8,71.375,31.5},
  {1133,71,8,65.375,31.5},
  {1134,71,8,59.375,31.5},
  {1135,71,8,53.375,31.5},
  {1136,71,8,47.375,31.5},
  {1137,71,8,41.375,31.5},
  {1138,68,7,38.375,31.5},
  {1139,68,7,35.375,31.5},
  {1140,68,7,32.375,31.5},
  {1141,68,7,29.375,31.5},
  {1142,68,7,26.375,31.5},
  {1143,68,7,23.375,31.5},
  {1144,68,7,20.375,31.5},
  {1145,68,7,17.375,31.5},
  {1146,68,7,14.375,31.5},
  {1147,68,7,11.375,31.5},
  {1148,68,7,8.375,31.5},
  {1149,68,7,5.375,31.5},
  {1150,68,7,2.375,31.5},
  {1151,68,7,-0.625,31.5},
  {1155,81,9,95.375,39.5},
  {1156,73,9,83.375,39.5},
  {1157,71,8,77.375,39.5},
  {1158,71,8,71.375,39.5},
  {1159,71,8,65.375,39.5},
  {1160,71,8,59.375,39.5},
  {1161,71,8,53.375,39.5},
  {1162,71,8,47.375,39.5},
  {1163,71,8,41.375,39.5},
  {1164,71,8,35.375,39.5},
  {1165,68,7,32.375,39.5},
  {1166,68,7,29.375,39.5},
  {1167,68,7,26.375,39.5},
  {1168,68,7,23.375,39.5},
  {1169,68,7,20.375,39.5},
  {1170,68,7,17.375,39.5},
  {1171,68,7,14.375,39.5},
  {1172,68,7,11.375,39.5},
  {1173,68,7,8.375,39.5},
  {1174,68,7,5.375,39.5},
  {1175,68,7,2.375,39.5},
  {1176,68,7,-0.625,39.5},
  {1181,82,9,95.375,43.5},
  {1182,73,9,83.375,47.5},
  {1183,71,8,77.375,47.5},
  {1184,71,8,71.375,47.5},
  {1185,71,8,65.375,47.5},
  {1186,71,8,59.375,47.5},
  {1187,71,8,53.375,47.5},
  {1188,71,8,47.375,47.5},
  {1189,71,8,41.375,47.5},
  {1190,71,8,35.375,47.5},
  {1191,71,8,29.375,47.5},
  {1192,71,8,23.375,47.5},
  {1193,68,7,20.375,47.5},
  {1194,68,7,17.375,47.5},
  {1195,68,7,14.375,47.5},
  {1196,68,7,11.375,47.5},
  {1197,68,7,8.375,47.5},
  {1198,68,7,5.375,47.5},
  {1199,68,7,2.375,47.5},
  {1200,68,7,-0.625,47.5},
  {1207,83,9,94.625,55.5},
  {1208,79,9,83.375,55.5},
  {1209,74,9,71.375,55.5},
  {1210,71,8,65.375,55.5},
  {1211,71,8,59.375,55.5},
  {1212,71,8,53.375,55.5},
  {1213,71,8,47.375,55.5},
  {1214,71,8,41.375,55.5},
  {1215,71,8,35.375,55.5},
  {1216,71,8,29.375,55.5},
  {1217,71,8,23.375,55.5},
  {1218,71,8,17.375,55.5},
  {1219,71,8,11.375,55.5},
  {1220,71,8,5.375,55.5},
  {1221,71,8,-0.625,55.5},
  {1225,84,9,83.375,63.5},
  {1226,74,9,71.375,63.5},
  {1227,74,9,59.375,63.5},
  {1228,71,8,53.375,63.5},
  {1229,71,8,47.375,63.5},
  {1230,71,8,41.375,63.5},
  {1231,71,8,35.375,63.5},
  {1232,71,8,29.375,63.5},
  {1233,71,8,23.375,63.5},
  {1234,71,8,17.375,63.5},
  {1235,71,8,11.375,63.5},
  {1236,71,8,5.375,63.5},
  {1237,71,8,-0.625,63.5},
  {1238,85,9,83.375,71.5},
  {1239,74,9,71.375,71.5},
  {1240,74,9,59.375,71.5},
  {1241,71,8,53.375,71.5},
  {1242,71,8,47.375,71.5},
  {1243,71,8,41.375,71.5},
  {1244,71,8,35.375,71.5},
  {1245,71,8,29.375,71.5},
  {1246,71,8,23.375,71.5},
  {1247,71,8,17.375,71.5},
  {1248,71,8,11.375,71.5},
  {1249,71,8,5.375,71.5},
  {1250,71,8,-0.625,71.5},
  {1251,86,9,71.375,79.5},
  {1252,105,9,65.375,79.5},
  {1253,72,9,59.375,79.5},
  {1254,72,9,53.375,79.5},
  {1255,72,9,47.375,79.5},
  {1256,72,9,41.375,79.5},
  {1257,72,9,35.375,79.5},
  {1258,72,9,29.375,79.5},
  {1259,69,8,26.375,79.5},
  {1260,69,8,23.375,79.5},
  {1261,69,8,20.375,79.5},
  {1262,69,8,17.375,79.5},
  {1263,69,8,14.375,79.5},
  {1264,69,8,11.375,79.5},
  {1265,69,8,8.375,79.5},
  {1266,69,8,5.375,79.5},
  {1267,69,8,2.375,79.5},
  {1268,69,8,-0.625,79.5},
  {1269,87,9,47.375,95.5},
  {1270,88,9,35.375,95.5},
  {1271,93,9,32.375,95.5},
  {1272,95,9,27.875,95.5},
  {1273,96,9,23.375,95.5},
  {1274,97,9,18.875,95.5},
  {1275,78,9,15.125,95.5},
  {1276,78,9,11.375,95.5},
  {1277,78,9,7.625,95.5},
  {1278,89,9,3.125,95.5},
  {1279,90,9,-0.625,95.5}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<2,true,46,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(2),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,127,13,50,2},
  {2,178,13,45,4},
  {3,178,13,40,4},
  {6,165,13,35,0},
  {7,206,13,30,0},
  {8,187,13,27.5,4},
  {9,205,13,22.5,0},
  {10,164,13,20,0},
  {11,165,13,15,0},
  {12,206,13,10,0},
  {13,187,13,7.5,4},
  {14,205,13,2.5,0},
  {15,164,13,0,0},
  {104,165,16,-50,0},
  {105,206,16,-60,0},
  {106,187,16,-65,4},
  {107,209,16,-75,0},
  {111,165,16,-10,0},
  {112,206,16,-20,0},
  {113,187,16,-25,4},
  {114,205,16,-35,0},
  {115,164,16,-40,0},
  {201,155,16,-75,-20},
  {202,158,16,-70,-20},
  {203,170,16,-65,-20},
  {204,208,16,-60,-20},
  {205,167,16,-50,-20},
  {209,166,16,-40,-20},
  {210,207,16,-35,-20},
  {211,170,16,-25,-20},
  {212,208,16,-20,-20},
  {213,167,16,-10,-20},
  {304,132,13,40,-20},
  {305,133,13,42.5,-20},
  {306,134,13,45,-20},
  {307,135,13,50,-20},
  {315,166,13,0,-20},
  {316,207,13,2.5,-20},
  {317,170,13,7.5,-20},
  {318,208,13,10,-20},
  {319,167,13,15,-20},
  {320,166,13,20,-20},
  {321,207,13,22.5,-20},
  {322,170,13,27.5,-20},
  {323,208,13,30,-20},
  {324,167,13,35,-20}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<2,false,32,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(2),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1028,131,4,40,2.5},
  {1029,130,4,47.14285714,5},
  {1040,169,4,-3.996802889e-15,0},
  {1041,169,4,5.714285712,0},
  {1042,169,4,11.42857142,0},
  {1043,169,4,17.14285714,0},
  {1044,169,4,22.85714285,0},
  {1045,169,4,28.57142856,0},
  {1046,169,4,34.28571427,0},
  {1125,182,5,-74.28571429,0},
  {1126,182,5,-62.85714286,0},
  {1127,182,5,-51.42857144,0},
  {1132,162,5,-40,0},
  {1133,182,5,-25.71428572,0},
  {1134,163,5,-14.2857143,0},
  {1230,181,5,-51.42857144,-20},
  {1231,181,5,-62.85714286,-20},
  {1232,181,5,-74.28571429,-20},
  {1238,191,5,-10.00000001,-20},
  {1239,195,5,-20.00000001,-20},
  {1240,194,5,-31.42857143,-20},
  {1241,190,5,-40,-20},
  {1325,129,4,49.28571428,-20},
  {1326,128,4,44.28571428,-20},
  {1327,126,4,40,-20},
  {1332,173,4,34.28571427,-20},
  {1333,173,4,28.57142856,-20},
  {1334,173,4,22.85714285,-20},
  {1335,173,4,17.14285714,-20},
  {1336,173,4,11.42857142,-20},
  {1337,173,4,5.714285712,-20},
  {1338,173,4,-3.996802889e-15,-20}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<3,true,56,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(3),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {4,176,13,40,-20},
  {5,177,13,45,-20},
  {6,177,13,50,-20},
  {7,124,13,55,-17.5},
  {101,155,16,-75,-20},
  {102,158,16,-70,-20},
  {103,170,16,-65,-20},
  {104,208,16,-60,-20},
  {105,167,16,-50,-20},
  {109,166,16,-40,-20},
  {110,207,16,-35,-20},
  {111,170,16,-25,-20},
  {112,208,16,-20,-20},
  {113,167,16,-10,-20},
  {118,166,13,0,-20},
  {119,207,13,2.5,-20},
  {120,170,13,7.5,-20},
  {121,208,13,10,-20},
  {122,167,13,15,-20},
  {123,166,13,20,-20},
  {124,207,13,22.5,-20},
  {125,170,13,27.5,-20},
  {126,208,13,30,-20},
  {127,167,13,35,-20},
  {204,165,16,-50,0},
  {205,206,16,-60,0},
  {206,187,16,-65,4},
  {207,209,16,-75,0},
  {211,165,16,-10,0},
  {212,206,16,-20,0},
  {213,187,16,-25,4},
  {214,205,16,-35,0},
  {215,164,16,-40,0},
  {223,165,13,35,0},
  {224,206,13,30,0},
  {225,187,13,27.5,4},
  {226,205,13,22.5,0},
  {227,164,13,20,0},
  {228,165,13,15,0},
  {229,206,13,10,0},
  {230,187,13,7.5,4},
  {231,205,13,2.5,0},
  {232,164,13,0,0},
  {401,125,13,75,-7},
  {402,107,13,72.5,-7.5},
  {403,108,13,70,-8},
  {404,109,13,67.5,1},
  {405,110,13,65,-8.5},
  {406,111,13,62.5,-10},
  {407,112,13,60,-11},
  {408,113,13,55,-4},
  {409,114,13,52.5,-4},
  {410,115,13,50,-4},
  {411,118,13,45,-4},
  {412,114,13,42.5,-4},
  {413,116,13,40,-4}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<3,false,39,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(3),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1025,106,4,51.42857142,-20},
  {1026,174,4,45.71428571,-20},
  {1027,174,4,40,-20},
  {1130,181,5,-51.42857144,-20},
  {1131,181,5,-62.85714286,-20},
  {1132,181,5,-74.28571429,-20},
  {1138,191,5,-10.00000001,-20},
  {1139,195,5,-20.00000001,-20},
  {1140,194,5,-31.42857143,-20},
  {1141,190,5,-40,-20},
  {1152,173,4,34.28571427,-20},
  {1153,173,4,28.57142856,-20},
  {1154,173,4,22.85714285,-20},
  {1155,173,4,17.14285714,-20},
  {1156,173,4,11.42857142,-20},
  {1157,173,4,5.714285712,-20},
  {1158,173,4,-3.996802889e-15,-20},
  {1225,182,5,-74.28571429,0},
  {1226,182,5,-62.85714286,0},
  {1227,182,5,-51.42857144,0},
  {1232,162,5,-40,0},
  {1233,182,5,-25.71428572,0},
  {1234,163,5,-14.2857143,0},
  {1240,169,4,-3.996802889e-15,0},
  {1241,169,4,5.714285712,0},
  {1242,169,4,11.42857142,0},
  {1243,169,4,17.14285714,0},
  {1244,169,4,22.85714285,0},
  {1245,169,4,28.57142856,0},
  {1246,169,4,34.28571427,0},
  {1325,175,4,40,0},
  {1326,175,4,45.71428571,0},
  {1327,175,4,51.42857142,0},
  {1328,117,4,57.14285714,-15},
  {1329,119,4,59.99999999,-12.5},
  {1330,120,4,63.57142856,-10},
  {1331,121,4,67.14285713,-10},
  {1332,122,4,71.42857142,-7.5},
  {1333,123,4,75.7142857,-7.5}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<4,true,49,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(4),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,166,13,-80,-20},
  {2,207,13,-77.5,-20},
  {3,170,13,-72.5,-20},
  {4,208,13,-70,-20},
  {5,167,13,-65,-20},
  {6,166,13,-60,-20},
  {7,207,13,-57.5,-20},
  {8,170,13,-52.5,-20},
  {9,208,13,-50,-20},
  {10,167,13,-45,-20},
  {104,196,16,40,-20},
  {105,197,16,45,-20},
  {106,198,16,55,-20},
  {107,199,16,60,-20},
  {111,166,16,0,-20},
  {112,207,16,5,-20},
  {113,170,16,15,-20},
  {114,208,16,20,-20},
  {115,167,16,30,-20},
  {119,166,16,-40,-20},
  {120,207,16,-35,-20},
  {121,170,16,-25,-20},
  {122,208,16,-20,-20},
  {123,167,16,-10,-20},
  {201,200,16,70,-12},
  {202,201,16,60,0},
  {203,202,16,55,4},
  {204,203,16,45,0},
  {205,204,16,40,0},
  {209,165,16,30,0},
  {210,206,16,20,0},
  {211,187,16,15,4},
  {212,205,16,5,0},
  {213,164,16,0,0},
  {218,165,16,-10,0},
  {219,206,16,-20,0},
  {220,187,16,-25,4},
  {221,205,16,-35,0},
  {222,164,16,-40,0},
  {308,165,13,-45,0},
  {309,206,13,-50,0},
  {310,187,13,-52.5,4},
  {311,205,13,-57.5,0},
  {312,164,13,-60,0},
  {313,165,13,-65,0},
  {314,206,13,-70,0},
  {315,187,13,-72.5,4},
  {316,205,13,-77.5,0},
  {317,164,13,-80,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<4,false,34,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(4),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1035,173,4,-45.71428573,-20},
  {1036,173,4,-51.42857144,-20},
  {1037,173,4,-57.14285715,-20},
  {1038,173,4,-62.85714286,-20},
  {1039,173,4,-68.57142858,-20},
  {1040,173,4,-74.28571429,-20},
  {1041,173,4,-80,-20},
  {1125,181,5,62.85714285,-20},
  {1126,181,5,51.42857142,-20},
  {1127,181,5,40,-20},
  {1132,160,5,25.7142857,-20},
  {1133,181,5,14.28571428,-20},
  {1134,156,5,4.440892099e-15,-20},
  {1140,160,5,-14.2857143,-20},
  {1141,181,5,-25.71428572,-20},
  {1142,156,5,-40,-20},
  {1230,182,5,40,0},
  {1231,182,5,51.42857142,0},
  {1232,182,5,62.85714285,0},
  {1238,192,5,-7.105427358e-15,-5},
  {1239,188,5,8.571428568,-5},
  {1240,189,5,19.99999999,-5},
  {1241,193,5,29.99999999,-5},
  {1247,192,5,-40,-5},
  {1248,188,5,-31.42857143,-5},
  {1249,189,5,-20.00000001,-5},
  {1250,193,5,-10.00000001,-5},
  {1325,169,4,-80,0},
  {1326,169,4,-74.28571429,0},
  {1327,169,4,-68.57142858,0},
  {1328,169,4,-62.85714286,0},
  {1329,169,4,-57.14285715,0},
  {1330,169,4,-51.42857144,0},
  {1331,169,4,-45.71428573,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<5,true,30,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(5),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {4,166,16,20,-20},
  {5,207,16,25,-20},
  {6,170,16,35,-20},
  {7,208,16,40,-20},
  {8,167,16,50,-20},
  {12,166,16,-20,-20},
  {13,207,16,-15,-20},
  {14,170,16,-5,-20},
  {15,208,16,0,-20},
  {16,167,16,10,-20},
  {20,166,16,-60,-20},
  {21,207,16,-55,-20},
  {22,170,16,-45,-20},
  {23,208,16,-40,-20},
  {24,167,16,-30,-20},
  {101,165,16,50,0},
  {102,206,16,40,0},
  {103,187,16,35,4},
  {104,205,16,25,0},
  {105,164,16,20,0},
  {110,165,16,10,0},
  {111,206,16,0,0},
  {112,187,16,-5,4},
  {113,205,16,-15,0},
  {114,164,16,-20,0},
  {119,165,16,-30,0},
  {120,206,16,-40,0},
  {121,187,16,-45,4},
  {122,205,16,-55,0},
  {123,164,16,-60,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<5,false,21,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(5),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1025,160,5,45.7142857,-20},
  {1026,181,5,34.28571428,-20},
  {1027,156,5,20,-20},
  {1033,160,5,5.714285704,-20},
  {1034,181,5,-5.71428572,-20},
  {1035,156,5,-20,-20},
  {1041,160,5,-34.2857143,-20},
  {1042,181,5,-45.71428572,-20},
  {1043,156,5,-60,-20},
  {1130,192,5,20,-5},
  {1131,188,5,28.57142857,-5},
  {1132,189,5,39.99999999,-5},
  {1133,193,5,49.99999999,-5},
  {1139,192,5,-20,-5},
  {1140,188,5,-11.42857143,-5},
  {1141,189,5,-8.000008656e-09,-5},
  {1142,193,5,9.999999988,-5},
  {1148,192,5,-60,-5},
  {1149,188,5,-51.42857143,-5},
  {1150,189,5,-40.00000001,-5},
  {1151,193,5,-30.00000001,-5}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<6,true,20,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(6),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {4,166,16,0,-20},
  {5,207,16,5,-20},
  {6,170,16,15,-20},
  {7,208,16,20,-20},
  {8,167,16,30,-20},
  {12,166,16,-40,-20},
  {13,207,16,-35,-20},
  {14,170,16,-25,-20},
  {15,208,16,-20,-20},
  {16,167,16,-10,-20},
  {101,165,16,30,0},
  {102,206,16,20,0},
  {103,187,16,15,4},
  {104,205,16,5,0},
  {105,164,16,0,0},
  {110,165,16,-10,0},
  {111,206,16,-20,0},
  {112,187,16,-25,4},
  {113,205,16,-35,0},
  {114,164,16,-40,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<6,false,14,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(6),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1025,160,5,25.7142857,-20},
  {1026,181,5,14.28571428,-20},
  {1027,156,5,-2.664535259e-15,-20},
  {1033,160,5,-14.2857143,-20},
  {1034,181,5,-25.71428572,-20},
  {1035,156,5,-40,-20},
  {1130,192,5,0,-5},
  {1131,188,5,8.571428568,-5},
  {1132,189,5,19.99999999,-5},
  {1133,193,5,29.99999999,-5},
  {1139,192,5,-40,-5},
  {1140,188,5,-31.42857143,-5},
  {1141,189,5,-20.00000001,-5},
  {1142,193,5,-10.00000001,-5}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<7,true,47,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(7),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,127,13,50,2},
  {2,178,13,45,4},
  {3,178,13,40,4},
  {6,165,13,35,0},
  {7,206,13,30,0},
  {8,187,13,27.5,4},
  {9,205,13,22.5,0},
  {10,164,13,20,0},
  {11,165,13,15,0},
  {12,206,13,10,0},
  {13,187,13,7.5,4},
  {14,205,13,2.5,0},
  {15,164,13,0,0},
  {104,165,16,-50,0},
  {105,206,16,-60,0},
  {106,187,16,-65,4},
  {107,205,16,-75,0},
  {108,164,16,-80,0},
  {112,165,16,-10,0},
  {113,206,16,-20,0},
  {114,187,16,-25,4},
  {115,205,16,-35,0},
  {116,164,16,-40,0},
  {201,166,16,-80,-20},
  {202,207,16,-75,-20},
  {203,170,16,-65,-20},
  {204,208,16,-60,-20},
  {205,167,16,-50,-20},
  {210,166,16,-40,-20},
  {211,207,16,-35,-20},
  {212,170,16,-25,-20},
  {213,208,16,-20,-20},
  {214,167,16,-10,-20},
  {304,132,13,40,-20},
  {305,133,13,42.5,-20},
  {306,134,13,45,-20},
  {307,135,13,50,-20},
  {315,166,13,0,-20},
  {316,207,13,2.5,-20},
  {317,170,13,7.5,-20},
  {318,208,13,10,-20},
  {319,167,13,15,-20},
  {320,166,13,20,-20},
  {321,207,13,22.5,-20},
  {322,170,13,27.5,-20},
  {323,208,13,30,-20},
  {324,167,13,35,-20}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<7,false,33,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(7),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1028,131,4,40,2.5},
  {1029,130,4,47.14285714,5},
  {1040,169,4,-3.996802889e-15,0},
  {1041,169,4,5.714285712,0},
  {1042,169,4,11.42857142,0},
  {1043,169,4,17.14285714,0},
  {1044,169,4,22.85714285,0},
  {1045,169,4,28.57142856,0},
  {1046,169,4,34.28571427,0},
  {1125,162,5,-80,0},
  {1126,182,5,-65.71428572,0},
  {1127,163,5,-54.2857143,0},
  {1133,162,5,-40,0},
  {1134,182,5,-25.71428572,0},
  {1135,163,5,-14.2857143,0},
  {1230,191,5,-50.00000001,-20},
  {1231,195,5,-60.00000001,-20},
  {1232,194,5,-71.42857143,-20},
  {1233,190,5,-80,-20},
  {1239,191,5,-10.00000001,-20},
  {1240,195,5,-20.00000001,-20},
  {1241,194,5,-31.42857143,-20},
  {1242,190,5,-40,-20},
  {1325,129,4,49.28571428,-20},
  {1326,128,4,44.28571428,-20},
  {1327,126,4,40,-20},
  {1332,173,4,34.28571427,-20},
  {1333,173,4,28.57142856,-20},
  {1334,173,4,22.85714285,-20},
  {1335,173,4,17.14285714,-20},
  {1336,173,4,11.42857142,-20},
  {1337,173,4,5.714285712,-20},
  {1338,173,4,-3.996802889e-15,-20}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<8,true,57,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(8),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {4,176,13,40,-20},
  {5,177,13,45,-20},
  {6,177,13,50,-20},
  {7,124,13,55,-17.5},
  {101,166,16,-80,-20},
  {102,207,16,-75,-20},
  {103,170,16,-65,-20},
  {104,208,16,-60,-20},
  {105,167,16,-50,-20},
  {110,166,16,-40,-20},
  {111,207,16,-35,-20},
  {112,170,16,-25,-20},
  {113,208,16,-20,-20},
  {114,167,16,-10,-20},
  {119,166,13,0,-20},
  {120,207,13,2.5,-20},
  {121,170,13,7.5,-20},
  {122,208,13,10,-20},
  {123,167,13,15,-20},
  {124,166,13,20,-20},
  {125,207,13,22.5,-20},
  {126,170,13,27.5,-20},
  {127,208,13,30,-20},
  {128,167,13,35,-20},
  {204,165,16,-50,0},
  {205,206,16,-60,0},
  {206,187,16,-65,4},
  {207,205,16,-75,0},
  {208,164,16,-80,0},
  {212,165,16,-10,0},
  {213,206,16,-20,0},
  {214,187,16,-25,4},
  {215,205,16,-35,0},
  {216,164,16,-40,0},
  {224,165,13,35,0},
  {225,206,13,30,0},
  {226,187,13,27.5,4},
  {227,205,13,22.5,0},
  {228,164,13,20,0},
  {229,165,13,15,0},
  {230,206,13,10,0},
  {231,187,13,7.5,4},
  {232,205,13,2.5,0},
  {233,164,13,0,0},
  {401,125,13,75,-7},
  {402,107,13,72.5,-7.5},
  {403,108,13,70,-8},
  {404,109,13,67.5,1},
  {405,110,13,65,-8.5},
  {406,111,13,62.5,-10},
  {407,112,13,60,-11},
  {408,113,13,55,-4},
  {409,114,13,52.5,-4},
  {410,115,13,50,-4},
  {411,118,13,45,-4},
  {412,114,13,42.5,-4},
  {413,116,13,40,-4}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<8,false,40,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(8),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1025,106,4,51.42857142,-20},
  {1026,174,4,45.71428571,-20},
  {1027,174,4,40,-20},
  {1130,191,5,-50.00000001,-20},
  {1131,195,5,-60.00000001,-20},
  {1132,194,5,-71.42857143,-20},
  {1133,190,5,-80,-20},
  {1139,191,5,-10.00000001,-20},
  {1140,195,5,-20.00000001,-20},
  {1141,194,5,-31.42857143,-20},
  {1142,190,5,-40,-20},
  {1153,173,4,34.28571427,-20},
  {1154,173,4,28.57142856,-20},
  {1155,173,4,22.85714285,-20},
  {1156,173,4,17.14285714,-20},
  {1157,173,4,11.42857142,-20},
  {1158,173,4,5.714285712,-20},
  {1159,173,4,-3.996802889e-15,-20},
  {1225,162,5,-80,0},
  {1226,182,5,-65.71428572,0},
  {1227,163,5,-54.2857143,0},
  {1233,162,5,-40,0},
  {1234,182,5,-25.71428572,0},
  {1235,163,5,-14.2857143,0},
  {1241,169,4,-3.996802889e-15,0},
  {1242,169,4,5.714285712,0},
  {1243,169,4,11.42857142,0},
  {1244,169,4,17.14285714,0},
  {1245,169,4,22.85714285,0},
  {1246,169,4,28.57142856,0},
  {1247,169,4,34.28571427,0},
  {1325,175,4,40,0},
  {1326,175,4,45.71428571,0},
  {1327,175,4,51.42857142,0},
  {1328,117,4,57.14285714,-15},
  {1329,119,4,59.99999999,-12.5},
  {1330,120,4,63.57142856,-10},
  {1331,121,4,67.14285713,-10},
  {1332,122,4,71.42857142,-7.5},
  {1333,123,4,75.7142857,-7.5}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<9,true,50,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(9),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,166,13,-80,-20},
  {2,207,13,-77.5,-20},
  {3,170,13,-72.5,-20},
  {4,208,13,-70,-20},
  {5,167,13,-65,-20},
  {6,166,13,-60,-20},
  {7,207,13,-57.5,-20},
  {8,170,13,-52.5,-20},
  {9,208,13,-50,-20},
  {10,167,13,-45,-20},
  {104,166,16,40,-20},
  {105,207,16,45,-20},
  {106,170,16,55,-20},
  {107,208,16,60,-20},
  {108,167,16,70,-20},
  {112,166,16,0,-20},
  {113,207,16,5,-20},
  {114,170,16,15,-20},
  {115,208,16,20,-20},
  {116,167,16,30,-20},
  {120,166,16,-40,-20},
  {121,207,16,-35,-20},
  {122,170,16,-25,-20},
  {123,208,16,-20,-20},
  {124,167,16,-10,-20},
  {201,165,16,70,0},
  {202,206,16,60,0},
  {203,187,16,55,4},
  {204,205,16,45,0},
  {205,164,16,40,0},
  {210,165,16,30,0},
  {211,206,16,20,0},
  {212,187,16,15,4},
  {213,205,16,5,0},
  {214,164,16,0,0},
  {219,165,16,-10,0},
  {220,206,16,-20,0},
  {221,187,16,-25,4},
  {222,205,16,-35,0},
  {223,164,16,-40,0},
  {308,165,13,-45,0},
  {309,206,13,-50,0},
  {310,187,13,-52.5,4},
  {311,205,13,-57.5,0},
  {312,164,13,-60,0},
  {313,165,13,-65,0},
  {314,206,13,-70,0},
  {315,187,13,-72.5,4},
  {316,205,13,-77.5,0},
  {317,164,13,-80,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<9,false,35,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(9),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1035,173,4,-45.71428573,-20},
  {1036,173,4,-51.42857144,-20},
  {1037,173,4,-57.14285715,-20},
  {1038,173,4,-62.85714286,-20},
  {1039,173,4,-68.57142858,-20},
  {1040,173,4,-74.28571429,-20},
  {1041,173,4,-80,-20},
  {1125,160,5,65.7142857,-20},
  {1126,181,5,54.28571428,-20},
  {1127,156,5,40,-20},
  {1133,160,5,25.7142857,-20},
  {1134,181,5,14.28571428,-20},
  {1135,156,5,4.440892099e-15,-20},
  {1141,160,5,-14.2857143,-20},
  {1142,181,5,-25.71428572,-20},
  {1143,156,5,-40,-20},
  {1230,192,5,40,-5},
  {1231,188,5,48.57142857,-5},
  {1232,189,5,59.99999999,-5},
  {1233,193,5,69.99999999,-5},
  {1239,192,5,-7.105427358e-15,-5},
  {1240,188,5,8.571428568,-5},
  {1241,189,5,19.99999999,-5},
  {1242,193,5,29.99999999,-5},
  {1248,192,5,-40,-5},
  {1249,188,5,-31.42857143,-5},
  {1250,189,5,-20.00000001,-5},
  {1251,193,5,-10.00000001,-5},
  {1325,169,4,-80,0},
  {1326,169,4,-74.28571429,0},
  {1327,169,4,-68.57142858,0},
  {1328,169,4,-62.85714286,0},
  {1329,169,4,-57.14285715,0},
  {1330,169,4,-51.42857144,0},
  {1331,169,4,-45.71428573,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<10,true,50,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(10),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,166,13,-100,-20},
  {2,207,13,-97.5,-20},
  {3,170,13,-92.5,-20},
  {4,208,13,-90,-20},
  {5,167,13,-85,-20},
  {6,166,13,-80,-20},
  {7,207,13,-77.5,-20},
  {8,170,13,-72.5,-20},
  {9,208,13,-70,-20},
  {10,167,13,-65,-20},
  {18,166,16,-60,-20},
  {19,207,16,-55,-20},
  {20,170,16,-45,-20},
  {21,208,16,-40,-20},
  {22,167,16,-30,-20},
  {103,172,17,60,-20},
  {104,172,17,80,-20},
  {107,172,17,20,-20},
  {108,172,17,40,-20},
  {112,166,16,-20,-20},
  {113,207,16,-15,-20},
  {114,170,16,-5,-20},
  {115,208,16,0,-20},
  {116,167,16,10,-20},
  {201,157,17,80,-4},
  {202,171,17,70,4},
  {203,168,17,60,-4},
  {206,157,17,40,-4},
  {207,171,17,30,4},
  {208,168,17,20,-4},
  {211,165,16,10,0},
  {212,206,16,0,0},
  {213,187,16,-5,4},
  {214,205,16,-15,0},
  {215,164,16,-20,0},
  {308,165,13,-65,0},
  {309,206,13,-70,0},
  {310,187,13,-72.5,4},
  {311,205,13,-77.5,0},
  {312,164,13,-80,0},
  {313,165,13,-85,0},
  {314,206,13,-90,0},
  {315,187,13,-92.5,4},
  {316,205,13,-97.5,0},
  {317,164,13,-100,0},
  {321,165,16,-30,0},
  {322,206,16,-40,0},
  {323,187,16,-45,4},
  {324,205,16,-55,0},
  {325,164,16,-60,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<10,false,36,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(10),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1035,173,4,-65.71428573,-20},
  {1036,173,4,-71.42857144,-20},
  {1037,173,4,-77.14285715,-20},
  {1038,173,4,-82.85714286,-20},
  {1039,173,4,-88.57142858,-20},
  {1040,173,4,-94.28571429,-20},
  {1041,173,4,-100,-20},
  {1047,191,5,-30.00000001,-20},
  {1048,195,5,-40.00000001,-20},
  {1049,194,5,-51.42857143,-20},
  {1050,190,5,-60,-20},
  {1125,186,6,79.99999999,-20},
  {1126,185,6,60,-20},
  {1129,186,6,39.99999999,-20},
  {1130,185,6,20,-20},
  {1133,160,5,5.714285704,-20},
  {1134,181,5,-5.71428572,-20},
  {1135,156,5,-20,-20},
  {1228,183,6,60,0},
  {1229,184,6,79.99999999,0},
  {1233,183,6,20,0},
  {1234,184,6,39.99999999,0},
  {1240,192,5,-20,-5},
  {1241,188,5,-11.42857143,-5},
  {1242,189,5,-8.000008656e-09,-5},
  {1243,193,5,9.999999988,-5},
  {1325,169,4,-100,0},
  {1326,169,4,-94.28571429,0},
  {1327,169,4,-88.57142858,0},
  {1328,169,4,-82.85714286,0},
  {1329,169,4,-77.14285715,0},
  {1330,169,4,-71.42857144,0},
  {1331,169,4,-65.71428573,0},
  {1342,162,5,-60,0},
  {1343,182,5,-45.71428572,0},
  {1344,163,5,-34.2857143,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<11,true,64,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(11),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,152,13,80,-20},
  {9,166,13,40,-20},
  {10,207,13,42.5,-20},
  {11,170,13,47.5,-20},
  {12,208,13,50,-20},
  {13,167,13,55,-20},
  {14,166,13,60,-20},
  {15,207,13,62.5,-20},
  {16,170,13,67.5,-20},
  {17,208,13,70,-20},
  {18,167,13,75,-20},
  {22,166,16,0,-20},
  {23,207,16,5,-20},
  {24,170,16,15,-20},
  {25,208,16,20,-20},
  {26,167,16,30,-20},
  {101,159,17,-120,-20},
  {102,172,17,-110,-20},
  {103,161,17,-100,-20},
  {106,159,17,-80,-20},
  {107,172,17,-70,-20},
  {108,161,17,-60,-20},
  {111,166,16,-40,-20},
  {112,207,16,-35,-20},
  {113,170,16,-25,-20},
  {114,208,16,-20,-20},
  {115,167,16,-10,-20},
  {203,171,17,-100,4},
  {204,171,17,-120,4},
  {207,171,17,-60,4},
  {208,171,17,-80,4},
  {212,165,16,-10,0},
  {213,206,16,-20,0},
  {214,187,16,-25,4},
  {215,205,16,-35,0},
  {216,164,16,-40,0},
  {311,165,13,75,0},
  {312,206,13,70,0},
  {313,187,13,67.5,4},
  {314,205,13,62.5,0},
  {315,164,13,60,0},
  {316,165,13,55,0},
  {317,206,13,50,0},
  {318,187,13,47.5,4},
  {319,205,13,42.5,0},
  {320,164,13,40,0},
  {328,165,16,30,0},
  {329,206,16,20,0},
  {330,187,16,15,4},
  {331,205,16,5,0},
  {332,164,16,0,0},
  {401,153,13,112.5,0.5},
  {402,154,13,110,0},
  {403,137,13,105,-1.5},
  {404,138,13,102.5,-2.5},
  {405,139,13,100,-3.5},
  {406,140,13,95,-6.5},
  {407,141,13,92.5,-9.5},
  {408,142,13,90,-11},
  {409,143,13,90,-10},
  {410,144,13,87.5,-12},
  {411,144,13,85,-12},
  {412,145,13,82.5,-11.5},
  {413,146,13,80,-11.5}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<11,false,46,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(11),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1026,173,4,74.28571427,-20},
  {1027,173,4,68.57142856,-20},
  {1028,173,4,62.85714285,-20},
  {1029,173,4,57.14285714,-20},
  {1030,173,4,51.42857142,-20},
  {1031,173,4,45.71428571,-20},
  {1032,173,4,40,-20},
  {1043,160,5,25.7142857,-20},
  {1044,181,5,14.28571428,-20},
  {1045,156,5,4.440892099e-15,-20},
  {1128,186,6,-100,-20},
  {1129,185,6,-120,-20},
  {1133,186,6,-60.00000001,-20},
  {1134,185,6,-80,-20},
  {1140,191,5,-10.00000001,-20},
  {1141,195,5,-20.00000001,-20},
  {1142,194,5,-31.42857143,-20},
  {1143,190,5,-40,-20},
  {1225,183,6,-120,0},
  {1226,184,6,-100,0},
  {1229,183,6,-80,0},
  {1230,184,6,-60.00000001,0},
  {1233,162,5,-40,0},
  {1234,182,5,-25.71428572,0},
  {1235,163,5,-14.2857143,0},
  {1325,179,4,80,-20},
  {1326,179,4,82.85714286,-20},
  {1327,179,4,85.71428571,-20},
  {1328,136,4,88.57142857,-17.5},
  {1329,147,4,91.42857142,-15},
  {1330,148,4,94.99999999,-10},
  {1331,149,4,98.57142856,-7.5},
  {1332,150,4,103.5714286,-5},
  {1333,151,4,108.5714286,-2.5},
  {1334,180,4,114.2857143,0},
  {1345,169,4,40,0},
  {1346,169,4,45.71428571,0},
  {1347,169,4,51.42857142,0},
  {1348,169,4,57.14285714,0},
  {1349,169,4,62.85714285,0},
  {1350,169,4,68.57142856,0},
  {1351,169,4,74.28571427,0},
  {1357,192,5,-7.105427358e-15,-5},
  {1358,188,5,8.571428568,-5},
  {1359,189,5,19.99999999,-5},
  {1360,193,5,29.99999999,-5}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<12,true,65,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(12),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,166,13,-100,-20},
  {2,207,13,-97.5,-20},
  {3,170,13,-92.5,-20},
  {4,208,13,-90,-20},
  {5,167,13,-85,-20},
  {6,166,13,-80,-20},
  {7,207,13,-77.5,-20},
  {8,170,13,-72.5,-20},
  {9,208,13,-70,-20},
  {10,167,13,-65,-20},
  {18,166,13,-60,-20},
  {19,207,13,-57.5,-20},
  {20,170,13,-52.5,-20},
  {21,208,13,-50,-20},
  {22,167,13,-45,-20},
  {23,166,13,-40,-20},
  {24,207,13,-37.5,-20},
  {25,170,13,-32.5,-20},
  {26,208,13,-30,-20},
  {27,167,13,-25,-20},
  {103,172,17,60,-20},
  {104,172,17,80,-20},
  {108,166,16,20,-20},
  {109,207,16,25,-20},
  {110,170,16,35,-20},
  {111,208,16,40,-20},
  {112,167,16,50,-20},
  {116,166,16,-20,-20},
  {117,207,16,-15,-20},
  {118,170,16,-5,-20},
  {119,208,16,0,-20},
  {120,167,16,10,-20},
  {201,157,17,80,-4},
  {202,171,17,70,4},
  {203,168,17,60,-4},
  {206,165,16,50,0},
  {207,206,16,40,0},
  {208,187,16,35,4},
  {209,205,16,25,0},
  {210,164,16,20,0},
  {215,165,16,10,0},
  {216,206,16,0,0},
  {217,187,16,-5,4},
  {218,205,16,-15,0},
  {219,164,16,-20,0},
  {308,165,13,-65,0},
  {309,206,13,-70,0},
  {310,187,13,-72.5,4},
  {311,205,13,-77.5,0},
  {312,164,13,-80,0},
  {313,165,13,-85,0},
  {314,206,13,-90,0},
  {315,187,13,-92.5,4},
  {316,205,13,-97.5,0},
  {317,164,13,-100,0},
  {325,165,13,-25,0},
  {326,206,13,-30,0},
  {327,187,13,-32.5,4},
  {328,205,13,-37.5,0},
  {329,164,13,-40,0},
  {330,165,13,-45,0},
  {331,206,13,-50,0},
  {332,187,13,-52.5,4},
  {333,205,13,-57.5,0},
  {334,164,13,-60,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<12,false,46,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(12),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1035,173,4,-65.71428573,-20},
  {1036,173,4,-71.42857144,-20},
  {1037,173,4,-77.14285715,-20},
  {1038,173,4,-82.85714286,-20},
  {1039,173,4,-88.57142858,-20},
  {1040,173,4,-94.28571429,-20},
  {1041,173,4,-100,-20},
  {1052,173,4,-25.71428573,-20},
  {1053,173,4,-31.42857144,-20},
  {1054,173,4,-37.14285715,-20},
  {1055,173,4,-42.85714286,-20},
  {1056,173,4,-48.57142858,-20},
  {1057,173,4,-54.28571429,-20},
  {1058,173,4,-60,-20},
  {1125,186,6,79.99999999,-20},
  {1126,185,6,60,-20},
  {1129,160,5,45.7142857,-20},
  {1130,181,5,34.28571428,-20},
  {1131,156,5,20,-20},
  {1137,160,5,5.714285704,-20},
  {1138,181,5,-5.71428572,-20},
  {1139,156,5,-20,-20},
  {1228,183,6,60,0},
  {1229,184,6,79.99999999,0},
  {1235,192,5,20,-5},
  {1236,188,5,28.57142857,-5},
  {1237,189,5,39.99999999,-5},
  {1238,193,5,49.99999999,-5},
  {1244,192,5,-20,-5},
  {1245,188,5,-11.42857143,-5},
  {1246,189,5,-8.000008656e-09,-5},
  {1247,193,5,9.999999988,-5},
  {1325,169,4,-100,0},
  {1326,169,4,-94.28571429,0},
  {1327,169,4,-88.57142858,0},
  {1328,169,4,-82.85714286,0},
  {1329,169,4,-77.14285715,0},
  {1330,169,4,-71.42857144,0},
  {1331,169,4,-65.71428573,0},
  {1342,169,4,-60,0},
  {1343,169,4,-54.28571429,0},
  {1344,169,4,-48.57142858,0},
  {1345,169,4,-42.85714286,0},
  {1346,169,4,-37.14285715,0},
  {1347,169,4,-31.42857144,0},
  {1348,169,4,-25.71428573,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<13,true,40,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(13),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,166,16,-100,-20},
  {2,207,16,-95,-20},
  {3,170,16,-85,-20},
  {4,208,16,-80,-20},
  {5,167,16,-70,-20},
  {10,166,16,-60,-20},
  {11,207,16,-55,-20},
  {12,170,16,-45,-20},
  {13,208,16,-40,-20},
  {14,167,16,-30,-20},
  {103,172,17,60,-20},
  {104,172,17,80,-20},
  {107,172,17,20,-20},
  {108,172,17,40,-20},
  {112,166,16,-20,-20},
  {113,207,16,-15,-20},
  {114,170,16,-5,-20},
  {115,208,16,0,-20},
  {116,167,16,10,-20},
  {201,157,17,80,-4},
  {202,171,17,70,4},
  {203,168,17,60,-4},
  {206,157,17,40,-4},
  {207,171,17,30,4},
  {208,168,17,20,-4},
  {211,165,16,10,0},
  {212,206,16,0,0},
  {213,187,16,-5,4},
  {214,205,16,-15,0},
  {215,164,16,-20,0},
  {304,165,16,-70,0},
  {305,206,16,-80,0},
  {306,187,16,-85,4},
  {307,205,16,-95,0},
  {308,164,16,-100,0},
  {312,165,16,-30,0},
  {313,206,16,-40,0},
  {314,187,16,-45,4},
  {315,205,16,-55,0},
  {316,164,16,-60,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<13,false,29,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(13),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1030,191,5,-70.00000001,-20},
  {1031,195,5,-80.00000001,-20},
  {1032,194,5,-91.42857143,-20},
  {1033,190,5,-100,-20},
  {1039,191,5,-30.00000001,-20},
  {1040,195,5,-40.00000001,-20},
  {1041,194,5,-51.42857143,-20},
  {1042,190,5,-60,-20},
  {1125,186,6,79.99999999,-20},
  {1126,185,6,60,-20},
  {1129,186,6,39.99999999,-20},
  {1130,185,6,20,-20},
  {1133,160,5,5.714285704,-20},
  {1134,181,5,-5.71428572,-20},
  {1135,156,5,-20,-20},
  {1228,183,6,60,0},
  {1229,184,6,79.99999999,0},
  {1233,183,6,20,0},
  {1234,184,6,39.99999999,0},
  {1240,192,5,-20,-5},
  {1241,188,5,-11.42857143,-5},
  {1242,189,5,-8.000008656e-09,-5},
  {1243,193,5,9.999999988,-5},
  {1325,162,5,-100,0},
  {1326,182,5,-85.71428572,0},
  {1327,163,5,-74.2857143,0},
  {1333,162,5,-60,0},
  {1334,182,5,-45.71428572,0},
  {1335,163,5,-34.2857143,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<14,true,30,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(14),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,166,16,-80,-20},
  {2,207,16,-75,-20},
  {3,170,16,-65,-20},
  {4,208,16,-60,-20},
  {5,167,16,-50,-20},
  {103,172,17,40,-20},
  {104,172,17,60,-20},
  {107,172,17,0,-20},
  {108,172,17,20,-20},
  {112,166,16,-40,-20},
  {113,207,16,-35,-20},
  {114,170,16,-25,-20},
  {115,208,16,-20,-20},
  {116,167,16,-10,-20},
  {201,157,17,60,-4},
  {202,171,17,50,4},
  {203,168,17,40,-4},
  {206,157,17,20,-4},
  {207,171,17,10,4},
  {208,168,17,0,-4},
  {211,165,16,-10,0},
  {212,206,16,-20,0},
  {213,187,16,-25,4},
  {214,205,16,-35,0},
  {215,164,16,-40,0},
  {304,165,16,-50,0},
  {305,206,16,-60,0},
  {306,187,16,-65,4},
  {307,205,16,-75,0},
  {308,164,16,-80,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<14,false,22,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(14),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1030,191,5,-50.00000001,-20},
  {1031,195,5,-60.00000001,-20},
  {1032,194,5,-71.42857143,-20},
  {1033,190,5,-80,-20},
  {1125,186,6,59.99999999,-20},
  {1126,185,6,40,-20},
  {1129,186,6,19.99999999,-20},
  {1130,185,6,0,-20},
  {1133,160,5,-14.2857143,-20},
  {1134,181,5,-25.71428572,-20},
  {1135,156,5,-40,-20},
  {1228,183,6,40,0},
  {1229,184,6,59.99999999,0},
  {1233,183,6,0,0},
  {1234,184,6,19.99999999,0},
  {1240,192,5,-40,-5},
  {1241,188,5,-31.42857143,-5},
  {1242,189,5,-20.00000001,-5},
  {1243,193,5,-10.00000001,-5},
  {1325,162,5,-80,0},
  {1326,182,5,-65.71428572,0},
  {1327,163,5,-54.2857143,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<15,true,15,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(15),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {3,172,17,20,-20},
  {4,172,17,40,-20},
  {7,172,17,-20,-20},
  {8,172,17,0,-20},
  {11,172,17,-60,-20},
  {12,172,17,-40,-20},
  {101,157,17,40,-4},
  {102,171,17,30,4},
  {103,168,17,20,-4},
  {106,157,17,0,-4},
  {107,171,17,-10,4},
  {108,168,17,-20,-4},
  {111,157,17,-40,-4},
  {112,171,17,-50,4},
  {113,168,17,-60,-4}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<15,false,12,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(15),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1025,186,6,39.99999999,-20},
  {1026,185,6,20,-20},
  {1029,186,6,-8.000000662e-09,-20},
  {1030,185,6,-20,-20},
  {1033,186,6,-40.00000001,-20},
  {1034,185,6,-60,-20},
  {1128,183,6,20,0},
  {1129,184,6,39.99999999,0},
  {1133,183,6,-20,0},
  {1134,184,6,-8.000000662e-09,0},
  {1138,183,6,-60,0},
  {1139,184,6,-40.00000001,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<16,true,10,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(16),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {3,172,17,0,-20},
  {4,172,17,20,-20},
  {7,172,17,-40,-20},
  {8,172,17,-20,-20},
  {101,157,17,20,-4},
  {102,171,17,10,4},
  {103,168,17,0,-4},
  {106,157,17,-20,-4},
  {107,171,17,-30,4},
  {108,168,17,-40,-4}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<16,false,8,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(16),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1025,186,6,19.99999999,-20},
  {1026,185,6,0,-20},
  {1029,186,6,-20.00000001,-20},
  {1030,185,6,-40,-20},
  {1128,183,6,0,0},
  {1129,184,6,19.99999999,0},
  {1133,183,6,-40,0},
  {1134,184,6,-20.00000001,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<17,true,70,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(17),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,166,13,-120,-20},
  {2,207,13,-117.5,-20},
  {3,170,13,-112.5,-20},
  {4,208,13,-110,-20},
  {5,167,13,-105,-20},
  {6,166,13,-100,-20},
  {7,207,13,-97.5,-20},
  {8,170,13,-92.5,-20},
  {9,208,13,-90,-20},
  {10,167,13,-85,-20},
  {18,166,13,-80,-20},
  {19,207,13,-77.5,-20},
  {20,170,13,-72.5,-20},
  {21,208,13,-70,-20},
  {22,167,13,-65,-20},
  {23,166,13,-60,-20},
  {24,207,13,-57.5,-20},
  {25,170,13,-52.5,-20},
  {26,208,13,-50,-20},
  {27,167,13,-45,-20},
  {35,166,16,-40,-20},
  {36,207,16,-35,-20},
  {37,170,16,-25,-20},
  {38,208,16,-20,-20},
  {39,167,16,-10,-20},
  {103,172,17,80,-20},
  {104,172,17,100,-20},
  {107,172,17,40,-20},
  {108,172,17,60,-20},
  {112,166,16,0,-20},
  {113,207,16,5,-20},
  {114,170,16,15,-20},
  {115,208,16,20,-20},
  {116,167,16,30,-20},
  {201,157,17,100,-4},
  {202,171,17,90,4},
  {203,168,17,80,-4},
  {206,157,17,60,-4},
  {207,171,17,50,4},
  {208,168,17,40,-4},
  {211,165,16,30,0},
  {212,206,16,20,0},
  {213,187,16,15,4},
  {214,205,16,5,0},
  {215,164,16,0,0},
  {308,165,13,-85,0},
  {309,206,13,-90,0},
  {310,187,13,-92.5,4},
  {311,205,13,-97.5,0},
  {312,164,13,-100,0},
  {313,165,13,-105,0},
  {314,206,13,-110,0},
  {315,187,13,-112.5,4},
  {316,205,13,-117.5,0},
  {317,164,13,-120,0},
  {325,165,13,-45,0},
  {326,206,13,-50,0},
  {327,187,13,-52.5,4},
  {328,205,13,-57.5,0},
  {329,164,13,-60,0},
  {330,165,13,-65,0},
  {331,206,13,-70,0},
  {332,187,13,-72.5,4},
  {333,205,13,-77.5,0},
  {334,164,13,-80,0},
  {338,165,16,-10,0},
  {339,206,16,-20,0},
  {340,187,16,-25,4},
  {341,205,16,-35,0},
  {342,164,16,-40,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<17,false,50,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(17),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1035,173,4,-85.71428573,-20},
  {1036,173,4,-91.42857144,-20},
  {1037,173,4,-97.14285715,-20},
  {1038,173,4,-102.8571429,-20},
  {1039,173,4,-108.5714286,-20},
  {1040,173,4,-114.2857143,-20},
  {1041,173,4,-120,-20},
  {1052,173,4,-45.71428573,-20},
  {1053,173,4,-51.42857144,-20},
  {1054,173,4,-57.14285715,-20},
  {1055,173,4,-62.85714286,-20},
  {1056,173,4,-68.57142858,-20},
  {1057,173,4,-74.28571429,-20},
  {1058,173,4,-80,-20},
  {1064,191,5,-10.00000001,-20},
  {1065,195,5,-20.00000001,-20},
  {1066,194,5,-31.42857143,-20},
  {1067,190,5,-40,-20},
  {1125,186,6,99.99999999,-20},
  {1126,185,6,80,-20},
  {1129,186,6,59.99999999,-20},
  {1130,185,6,40,-20},
  {1133,160,5,25.7142857,-20},
  {1134,181,5,14.28571428,-20},
  {1135,156,5,4.440892099e-15,-20},
  {1228,183,6,80,0},
  {1229,184,6,99.99999999,0},
  {1233,183,6,40,0},
  {1234,184,6,59.99999999,0},
  {1240,192,5,-7.105427358e-15,-5},
  {1241,188,5,8.571428568,-5},
  {1242,189,5,19.99999999,-5},
  {1243,193,5,29.99999999,-5},
  {1325,169,4,-120,0},
  {1326,169,4,-114.2857143,0},
  {1327,169,4,-108.5714286,0},
  {1328,169,4,-102.8571429,0},
  {1329,169,4,-97.14285715,0},
  {1330,169,4,-91.42857144,0},
  {1331,169,4,-85.71428573,0},
  {1342,169,4,-80,0},
  {1343,169,4,-74.28571429,0},
  {1344,169,4,-68.57142858,0},
  {1345,169,4,-62.85714286,0},
  {1346,169,4,-57.14285715,0},
  {1347,169,4,-51.42857144,0},
  {1348,169,4,-45.71428573,0},
  {1359,162,5,-40,0},
  {1360,182,5,-25.71428572,0},
  {1361,163,5,-14.2857143,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<18,true,45,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(18),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,166,16,-120,-20},
  {2,207,16,-115,-20},
  {3,170,16,-105,-20},
  {4,208,16,-100,-20},
  {5,167,16,-90,-20},
  {10,166,16,-80,-20},
  {11,207,16,-75,-20},
  {12,170,16,-65,-20},
  {13,208,16,-60,-20},
  {14,167,16,-50,-20},
  {19,166,16,-40,-20},
  {20,207,16,-35,-20},
  {21,170,16,-25,-20},
  {22,208,16,-20,-20},
  {23,167,16,-10,-20},
  {103,172,17,80,-20},
  {104,172,17,100,-20},
  {107,172,17,40,-20},
  {108,172,17,60,-20},
  {111,172,17,0,-20},
  {112,172,17,20,-20},
  {201,157,17,100,-4},
  {202,171,17,90,4},
  {203,168,17,80,-4},
  {206,157,17,60,-4},
  {207,171,17,50,4},
  {208,168,17,40,-4},
  {211,157,17,20,-4},
  {212,171,17,10,4},
  {213,168,17,0,-4},
  {304,165,16,-90,0},
  {305,206,16,-100,0},
  {306,187,16,-105,4},
  {307,205,16,-115,0},
  {308,164,16,-120,0},
  {312,165,16,-50,0},
  {313,206,16,-60,0},
  {314,187,16,-65,4},
  {315,205,16,-75,0},
  {316,164,16,-80,0},
  {320,165,16,-10,0},
  {321,206,16,-20,0},
  {322,187,16,-25,4},
  {323,205,16,-35,0},
  {324,164,16,-40,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<18,false,33,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(18),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1030,191,5,-90.00000001,-20},
  {1031,195,5,-100,-20},
  {1032,194,5,-111.4285714,-20},
  {1033,190,5,-120,-20},
  {1039,191,5,-50.00000001,-20},
  {1040,195,5,-60.00000001,-20},
  {1041,194,5,-71.42857143,-20},
  {1042,190,5,-80,-20},
  {1048,191,5,-10.00000001,-20},
  {1049,195,5,-20.00000001,-20},
  {1050,194,5,-31.42857143,-20},
  {1051,190,5,-40,-20},
  {1125,186,6,99.99999999,-20},
  {1126,185,6,80,-20},
  {1129,186,6,59.99999999,-20},
  {1130,185,6,40,-20},
  {1133,186,6,19.99999999,-20},
  {1134,185,6,-1.421085472e-14,-20},
  {1228,183,6,80,0},
  {1229,184,6,99.99999999,0},
  {1233,183,6,40,0},
  {1234,184,6,59.99999999,0},
  {1238,183,6,-1.421085472e-14,0},
  {1239,184,6,19.99999999,0},
  {1325,162,5,-120,0},
  {1326,182,5,-105.7142857,0},
  {1327,163,5,-94.2857143,0},
  {1333,162,5,-80,0},
  {1334,182,5,-65.71428572,0},
  {1335,163,5,-54.2857143,0},
  {1341,162,5,-40,0},
  {1342,182,5,-25.71428572,0},
  {1343,163,5,-14.2857143,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<19,true,35,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(19),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,166,16,-100,-20},
  {2,207,16,-95,-20},
  {3,170,16,-85,-20},
  {4,208,16,-80,-20},
  {5,167,16,-70,-20},
  {10,166,16,-60,-20},
  {11,207,16,-55,-20},
  {12,170,16,-45,-20},
  {13,208,16,-40,-20},
  {14,167,16,-30,-20},
  {103,172,17,60,-20},
  {104,172,17,80,-20},
  {107,172,17,20,-20},
  {108,172,17,40,-20},
  {111,172,17,-20,-20},
  {112,172,17,0,-20},
  {201,157,17,80,-4},
  {202,171,17,70,4},
  {203,168,17,60,-4},
  {206,157,17,40,-4},
  {207,171,17,30,4},
  {208,168,17,20,-4},
  {211,157,17,0,-4},
  {212,171,17,-10,4},
  {213,168,17,-20,-4},
  {304,165,16,-70,0},
  {305,206,16,-80,0},
  {306,187,16,-85,4},
  {307,205,16,-95,0},
  {308,164,16,-100,0},
  {312,165,16,-30,0},
  {313,206,16,-40,0},
  {314,187,16,-45,4},
  {315,205,16,-55,0},
  {316,164,16,-60,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<19,false,26,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(19),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1030,191,5,-70.00000001,-20},
  {1031,195,5,-80.00000001,-20},
  {1032,194,5,-91.42857143,-20},
  {1033,190,5,-100,-20},
  {1039,191,5,-30.00000001,-20},
  {1040,195,5,-40.00000001,-20},
  {1041,194,5,-51.42857143,-20},
  {1042,190,5,-60,-20},
  {1125,186,6,79.99999999,-20},
  {1126,185,6,60,-20},
  {1129,186,6,39.99999999,-20},
  {1130,185,6,20,-20},
  {1133,186,6,-8.000000662e-09,-20},
  {1134,185,6,-20,-20},
  {1228,183,6,60,0},
  {1229,184,6,79.99999999,0},
  {1233,183,6,20,0},
  {1234,184,6,39.99999999,0},
  {1238,183,6,-20,0},
  {1239,184,6,-8.000000662e-09,0},
  {1325,162,5,-100,0},
  {1326,182,5,-85.71428572,0},
  {1327,163,5,-74.2857143,0},
  {1333,162,5,-60,0},
  {1334,182,5,-45.71428572,0},
  {1335,163,5,-34.2857143,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<20,true,20,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(20),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,159,17,-80,-20},
  {2,172,17,-70,-20},
  {3,161,17,-60,-20},
  {103,172,17,40,-20},
  {104,172,17,60,-20},
  {107,172,17,0,-20},
  {108,172,17,20,-20},
  {111,172,17,-40,-20},
  {112,172,17,-20,-20},
  {201,157,17,60,-4},
  {202,171,17,50,4},
  {203,168,17,40,-4},
  {206,157,17,20,-4},
  {207,171,17,10,4},
  {208,168,17,0,-4},
  {211,157,17,-20,-4},
  {212,171,17,-30,4},
  {213,168,17,-40,-4},
  {303,171,17,-60,4},
  {304,171,17,-80,4}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<20,false,16,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(20),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1028,186,6,-60.00000001,-20},
  {1029,185,6,-80,-20},
  {1125,186,6,59.99999999,-20},
  {1126,185,6,40,-20},
  {1129,186,6,19.99999999,-20},
  {1130,185,6,0,-20},
  {1133,186,6,-20.00000001,-20},
  {1134,185,6,-40,-20},
  {1228,183,6,40,0},
  {1229,184,6,59.99999999,0},
  {1233,183,6,0,0},
  {1234,184,6,19.99999999,0},
  {1238,183,6,-40,0},
  {1239,184,6,-20.00000001,0},
  {1325,183,6,-80,0},
  {1326,184,6,-60.00000001,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}

} // namespace mapping
} // namespace mch
} // namespace o2

#endif // O2_MCH_MAPPING_GENSEGMENTATIONIMPL0_H