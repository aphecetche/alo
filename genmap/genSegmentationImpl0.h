#ifndef O2_MCH_MAPPING_GENSEGMENTATIONIMPL0_H
#define O2_MCH_MAPPING_GENSEGMENTATIONIMPL0_H


#include <array>
#include "genMotifType.h"
#include <tuple>
#include "genSegmentationInterface.h"
#include <sstream>
#include <algorithm>
#include <stdexcept>
#include <ostream>
#include "contourCreator.h"
#include "motifPosition.h"
#include "motifPositionTwoPadSizes.h"
#include "pad.h"

namespace o2
{
namespace mch
{
namespace mapping
{

template<int SEGID, bool BENDINGPLANE, int NFEC, int (*berg2channel)(int), typename MOTIFPOSITION>
class SegmentationImpl0 : public SegmentationInterface
{
  public:
    SegmentationImpl0(const MotifTypeArray& motifTypes)
    { throw std::out_of_range("Invalid segmentation initialization. Only specific specializations are allowed."); }

    int getId() const override
    { return mId; }

    bool isBendingPlane() const override
    { return mIsBendingPlane; }

    int nofDualSampas() const override
    { return NFEC; }

    int nofPads() const override
    {
      return mNofPads;
    }

    bool hasPadByFEE(int dualSampaId, int dualSampaChannel) const override
    {
      if (dualSampaChannel < 0 || dualSampaChannel > 63) {
        throw std::out_of_range("dualSampaChannel should be between 0 and 63");
      }
      auto it = std::find_if(begin(mMotifPositions), end(mMotifPositions), [&](const MOTIFPOSITION& mp) { return mp.FECId()==dualSampaId; });
      if (it == mMotifPositions.end()) {
        throw std::out_of_range("dualSampaId is not there");
      }
      int index = std::distance(mMotifPositions.begin(), it);
      int padIndex = index * 64 + dualSampaChannel;
      return mPads[padIndex].isValid();
    }

    bool hasPadByPosition(double x, double y) const override {
      for ( auto i = 0; i < mFEContours.size(); ++i ){
        if (mFEContours[i].contains(x,y)) {
          return true;
        }
      }
       return false;
    }

    o2::mch::contour::Contour<double> getEnvelop() const override
    {
      std::vector<o2::mch::contour::Polygon<double>> polygons;
      for (auto i = 0; i < mFEContours.size(); ++i) {
        auto c = mFEContours[i];
        for (auto j = 0; j < c.size(); ++j) {
          polygons.push_back(c[j]);
        }
      }
      return o2::mch::contour::createContour(polygons);
    }

    std::vector<o2::mch::contour::Contour<double>> getSampaContours() const override {
      std::vector<o2::mch::contour::Contour<double>> contours;
      contours.insert(contours.end(),mFEContours.begin(),mFEContours.end());
      return contours;
    }

  private:

    std::vector<Pad> getPads(const MOTIFPOSITION& mp, const MotifTypeArray& motifTypes) {
      std::vector<Pad> motifPads{mp.getPads(motifTypes[mp.motifTypeId()])};
      std::vector<Pad> pads;
      for (auto p: motifPads) {
        pads.push_back(p.translate(mp.positionX(),mp.positionY()));
      }
      return pads;
    }

    void populatePadsForOneMotifPosition(int index, const MOTIFPOSITION& mp, const MotifTypeArray& motifTypes) {
      const MotifType& mt = motifTypes[mp.motifTypeId()];
      auto pads = getPads(mp,motifTypes);
      for (auto i = 0; i < pads.size(); ++i) {
         int fecChannel = berg2channel(mt.getBerg(i));
         int padIndex = index*64 + fecChannel;
         mPads[padIndex] = pads[i];
      }
    }

    void populatePads(const MotifTypeArray& motifTypes) {
      for ( int index = 0; index < mMotifPositions.size(); ++index ) {
        const MOTIFPOSITION& mp = mMotifPositions[index];
        const MotifType& mt = motifTypes[mp.motifTypeId()];
        populatePadsForOneMotifPosition(index,mp,motifTypes);
        mNofPads += mt.getNofPads();
      }
    }

    std::vector<o2::mch::contour::Polygon<double>> padAsPolygons(const std::vector<Pad>& pads)
    {
      std::vector<o2::mch::contour::Polygon<double>> cpads;
      for (auto&& p: pads) {
        cpads.push_back({
                         { p.xBottomLeft, p.yBottomLeft},
                         { p.xTopRight, p.yBottomLeft},
                         { p.xTopRight, p.yTopRight},
                         { p.xBottomLeft, p.yTopRight},
                         { p.xBottomLeft, p.yBottomLeft}
                       });
      }
      return cpads;
    }

    void createContours(const MotifTypeArray& motifTypes)
    {
      for (int index = 0; index < mMotifPositions.size(); ++index) {
        mFEContours[index] = o2::mch::contour::createContour(padAsPolygons(getPads(mMotifPositions[index], motifTypes)));
      }
    }

    int mId;
    bool mIsBendingPlane;
    int mNofPads;
    std::array<Pad,NFEC*64> mPads;
    std::array<MOTIFPOSITION,NFEC> mMotifPositions;
    std::array<o2::mch::contour::Contour<double>,NFEC> mFEContours;
};

int berg80ToManu(int berg) {
  if (berg==2) return 15;
  if (berg==3) return 14;
  if (berg==4) return 13;
  if (berg==5) return 12;
  if (berg==6) return 11;
  if (berg==7) return 10;
  if (berg==8) return 9;
  if (berg==9) return 8;
  if (berg==10) return 7;
  if (berg==11) return 6;
  if (berg==12) return 5;
  if (berg==13) return 4;
  if (berg==14) return 3;
  if (berg==15) return 2;
  if (berg==16) return 1;
  if (berg==17) return 0;
  if (berg==21) return 31;
  if (berg==22) return 30;
  if (berg==23) return 29;
  if (berg==24) return 28;
  if (berg==25) return 27;
  if (berg==26) return 26;
  if (berg==27) return 25;
  if (berg==28) return 24;
  if (berg==29) return 23;
  if (berg==30) return 22;
  if (berg==31) return 21;
  if (berg==32) return 20;
  if (berg==33) return 19;
  if (berg==34) return 18;
  if (berg==35) return 17;
  if (berg==36) return 16;
  if (berg==42) return 32;
  if (berg==43) return 33;
  if (berg==44) return 34;
  if (berg==45) return 35;
  if (berg==46) return 36;
  if (berg==47) return 37;
  if (berg==48) return 38;
  if (berg==49) return 39;
  if (berg==50) return 40;
  if (berg==51) return 41;
  if (berg==52) return 42;
  if (berg==53) return 43;
  if (berg==54) return 44;
  if (berg==55) return 45;
  if (berg==56) return 46;
  if (berg==57) return 47;
  if (berg==61) return 48;
  if (berg==62) return 49;
  if (berg==63) return 50;
  if (berg==64) return 51;
  if (berg==65) return 52;
  if (berg==66) return 53;
  if (berg==67) return 54;
  if (berg==68) return 55;
  if (berg==69) return 56;
  if (berg==70) return 57;
  if (berg==71) return 58;
  if (berg==72) return 59;
  if (berg==73) return 60;
  if (berg==74) return 61;
  if (berg==75) return 62;
  if (berg==76) return 63;

  std::ostringstream msg;
  msg << "berg number " << berg << " is invalid";
  throw std::out_of_range(msg.str());
}
  int berg100ToManu(int berg) {
  if (berg==2) return 31;
  if (berg==3) return 30;
  if (berg==4) return 29;
  if (berg==5) return 28;
  if (berg==6) return 27;
  if (berg==7) return 26;
  if (berg==8) return 25;
  if (berg==9) return 24;
  if (berg==10) return 23;
  if (berg==11) return 22;
  if (berg==12) return 21;
  if (berg==13) return 20;
  if (berg==14) return 19;
  if (berg==15) return 18;
  if (berg==16) return 17;
  if (berg==17) return 16;
  if (berg==18) return 15;
  if (berg==19) return 14;
  if (berg==20) return 13;
  if (berg==21) return 12;
  if (berg==22) return 11;
  if (berg==23) return 10;
  if (berg==24) return 9;
  if (berg==25) return 8;
  if (berg==26) return 7;
  if (berg==27) return 6;
  if (berg==28) return 5;
  if (berg==29) return 4;
  if (berg==30) return 3;
  if (berg==31) return 2;
  if (berg==32) return 1;
  if (berg==33) return 0;
  if (berg==52) return 48;
  if (berg==53) return 49;
  if (berg==54) return 50;
  if (berg==55) return 51;
  if (berg==56) return 52;
  if (berg==57) return 53;
  if (berg==58) return 54;
  if (berg==59) return 55;
  if (berg==60) return 56;
  if (berg==61) return 57;
  if (berg==62) return 58;
  if (berg==63) return 59;
  if (berg==64) return 60;
  if (berg==65) return 61;
  if (berg==66) return 62;
  if (berg==67) return 63;
  if (berg==68) return 32;
  if (berg==69) return 33;
  if (berg==70) return 34;
  if (berg==71) return 35;
  if (berg==72) return 36;
  if (berg==73) return 37;
  if (berg==74) return 38;
  if (berg==75) return 39;
  if (berg==76) return 40;
  if (berg==77) return 41;
  if (berg==78) return 42;
  if (berg==79) return 43;
  if (berg==80) return 44;
  if (berg==81) return 45;
  if (berg==82) return 46;
  if (berg==83) return 47;

  std::ostringstream msg;
  msg << "berg number " << berg << " is invalid";
  throw std::out_of_range(msg.str());
}
  
template<>
SegmentationImpl0<0,true,226,berg80ToManu,MotifPositionTwoPadSizes>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(0),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,6,2.52,0.42,80.64,0,0.84,0.42, {32,71,29,68,26,64,24,62,56,15,53,12,11,47,6,3}},
  {2,3,2.52,0.42,70.56,0},
  {3,3,1.26,0.42,65.52,0},
  {4,3,1.26,0.42,60.48,0},
  {5,3,1.26,0.42,55.44,0},
  {6,3,0.63,0.42,52.92,0},
  {7,3,0.63,0.42,50.4,0},
  {8,3,0.63,0.42,47.88,0},
  {9,3,0.63,0.42,45.36,0},
  {10,3,0.63,0.42,42.84,0},
  {11,3,0.63,0.42,40.32,0},
  {12,3,0.63,0.42,37.8,0},
  {13,3,0.63,0.42,35.28,0},
  {14,3,0.63,0.42,32.76,0},
  {15,3,0.63,0.42,30.24,0},
  {16,3,0.63,0.42,27.72,0},
  {17,3,0.63,0.42,25.2,0},
  {18,3,0.63,0.42,22.68,0},
  {19,3,0.63,0.42,20.16,0},
  {20,3,0.63,0.42,17.64,0},
  {27,6,2.52,0.42,80.64,6.72,0.84,0.42, {32,71,29,68,26,64,24,62,56,15,53,12,11,47,6,3}},
  {28,3,2.52,0.42,70.56,6.72},
  {29,3,1.26,0.42,65.52,6.72},
  {30,3,1.26,0.42,60.48,6.72},
  {31,3,1.26,0.42,55.44,6.72},
  {32,3,0.63,0.42,52.92,6.72},
  {33,3,0.63,0.42,50.4,6.72},
  {34,3,0.63,0.42,47.88,6.72},
  {35,3,0.63,0.42,45.36,6.72},
  {36,3,0.63,0.42,42.84,6.72},
  {37,3,0.63,0.42,40.32,6.72},
  {38,3,0.63,0.42,37.8,6.72},
  {39,3,0.63,0.42,35.28,6.72},
  {40,3,0.63,0.42,32.76,6.72},
  {41,3,0.63,0.42,30.24,6.72},
  {42,3,0.63,0.42,27.72,6.72},
  {43,3,0.63,0.42,25.2,6.72},
  {44,3,0.63,0.42,22.68,6.72},
  {45,3,0.63,0.42,20.16,6.72},
  {46,3,0.63,0.42,17.64,6.72},
  {47,2,0.63,0.42,13.86,6.72},
  {53,6,2.52,0.42,80.64,13.44,0.84,0.42, {32,71,29,68,26,64,24,62,56,15,53,12,11,47,6,3}},
  {54,3,2.52,0.42,70.56,13.44},
  {55,3,1.26,0.42,65.52,13.44},
  {56,3,1.26,0.42,60.48,13.44},
  {57,3,1.26,0.42,55.44,13.44},
  {58,3,0.63,0.42,52.92,13.44},
  {59,3,0.63,0.42,50.4,13.44},
  {60,3,0.63,0.42,47.88,13.44},
  {61,3,0.63,0.42,45.36,13.44},
  {62,3,0.63,0.42,42.84,13.44},
  {63,3,0.63,0.42,40.32,13.44},
  {64,3,0.63,0.42,37.8,13.44},
  {65,3,0.63,0.42,35.28,13.44},
  {66,3,0.63,0.42,32.76,13.44},
  {67,3,0.63,0.42,30.24,13.44},
  {68,3,0.63,0.42,27.72,13.44},
  {69,3,0.63,0.42,25.2,13.44},
  {70,3,0.63,0.42,22.68,13.44},
  {71,3,0.63,0.42,20.16,13.44},
  {72,3,0.63,0.42,17.64,13.44},
  {73,3,0.63,0.42,15.12,13.44},
  {74,3,0.63,0.42,12.6,13.44},
  {75,1,0.63,0.42,9.45,13.44},
  {76,0,0.63,0.42,0,17.22},
  {79,6,2.52,0.42,80.64,20.16,0.84,0.42, {32,71,29,68,26,64,24,62,56,15,53,12,11,47,6,3}},
  {80,3,2.52,0.42,70.56,20.16},
  {81,3,1.26,0.42,65.52,20.16},
  {82,3,1.26,0.42,60.48,20.16},
  {83,3,1.26,0.42,55.44,20.16},
  {84,3,1.26,0.42,50.4,20.16},
  {85,3,0.63,0.42,47.88,20.16},
  {86,3,0.63,0.42,45.36,20.16},
  {87,3,0.63,0.42,42.84,20.16},
  {88,3,0.63,0.42,40.32,20.16},
  {89,3,0.63,0.42,37.8,20.16},
  {90,3,0.63,0.42,35.28,20.16},
  {91,3,0.63,0.42,32.76,20.16},
  {92,3,0.63,0.42,30.24,20.16},
  {93,3,0.63,0.42,27.72,20.16},
  {94,3,0.63,0.42,25.2,20.16},
  {95,3,0.63,0.42,22.68,20.16},
  {96,3,0.63,0.42,20.16,20.16},
  {97,3,0.63,0.42,17.64,20.16},
  {98,3,0.63,0.42,15.12,20.16},
  {99,3,0.63,0.42,12.6,20.16},
  {100,3,0.63,0.42,10.08,20.16},
  {101,3,0.63,0.42,7.56,20.16},
  {102,3,0.63,0.42,5.04,20.16},
  {103,3,0.63,0.42,2.52,20.16},
  {104,3,0.63,0.42,0,20.16},
  {105,6,2.52,0.42,80.64,26.88,0.84,0.42, {32,71,29,68,26,64,24,62,56,15,53,12,11,47,6,3}},
  {106,3,2.52,0.42,70.56,26.88},
  {107,3,1.26,0.42,65.52,26.88},
  {108,3,1.26,0.42,60.48,26.88},
  {109,3,1.26,0.42,55.44,26.88},
  {110,3,1.26,0.42,50.4,26.88},
  {111,3,0.63,0.42,47.88,26.88},
  {112,3,0.63,0.42,45.36,26.88},
  {113,3,0.63,0.42,42.84,26.88},
  {114,3,0.63,0.42,40.32,26.88},
  {115,3,0.63,0.42,37.8,26.88},
  {116,3,0.63,0.42,35.28,26.88},
  {117,3,0.63,0.42,32.76,26.88},
  {118,3,0.63,0.42,30.24,26.88},
  {119,3,0.63,0.42,27.72,26.88},
  {120,3,0.63,0.42,25.2,26.88},
  {121,3,0.63,0.42,22.68,26.88},
  {122,3,0.63,0.42,20.16,26.88},
  {123,3,0.63,0.42,17.64,26.88},
  {124,3,0.63,0.42,15.12,26.88},
  {125,3,0.63,0.42,12.6,26.88},
  {126,3,0.63,0.42,10.08,26.88},
  {127,3,0.63,0.42,7.56,26.88},
  {128,3,0.63,0.42,5.04,26.88},
  {129,3,0.63,0.42,2.52,26.88},
  {130,3,0.63,0.42,0,26.88},
  {131,6,2.52,0.42,80.64,33.6,0.84,0.42, {32,71,29,68,26,64,24,62,56,15,53,12,11,47,6,3}},
  {132,3,2.52,0.42,70.56,33.6},
  {133,3,2.52,0.42,60.48,33.6},
  {134,3,1.26,0.42,55.44,33.6},
  {135,3,1.26,0.42,50.4,33.6},
  {136,3,1.26,0.42,45.36,33.6},
  {137,3,0.63,0.42,42.84,33.6},
  {138,3,0.63,0.42,40.32,33.6},
  {139,3,0.63,0.42,37.8,33.6},
  {140,3,0.63,0.42,35.28,33.6},
  {141,3,0.63,0.42,32.76,33.6},
  {142,3,0.63,0.42,30.24,33.6},
  {143,3,0.63,0.42,27.72,33.6},
  {144,3,0.63,0.42,25.2,33.6},
  {145,3,0.63,0.42,22.68,33.6},
  {146,3,0.63,0.42,20.16,33.6},
  {147,3,0.63,0.42,17.64,33.6},
  {148,3,0.63,0.42,15.12,33.6},
  {149,3,0.63,0.42,12.6,33.6},
  {150,3,0.63,0.42,10.08,33.6},
  {151,3,0.63,0.42,7.56,33.6},
  {152,3,0.63,0.42,5.04,33.6},
  {153,3,0.63,0.42,2.52,33.6},
  {154,3,0.63,0.42,0,33.6},
  {157,6,2.52,0.42,80.64,40.32,0.84,0.42, {32,71,29,68,26,64,24,62,56,15,53,12,11,47,6,3}},
  {158,3,2.52,0.42,70.56,40.32},
  {159,3,2.52,0.42,60.48,40.32},
  {160,3,1.26,0.42,55.44,40.32},
  {161,3,1.26,0.42,50.4,40.32},
  {162,3,1.26,0.42,45.36,40.32},
  {163,3,0.63,0.42,42.84,40.32},
  {164,3,0.63,0.42,40.32,40.32},
  {165,3,0.63,0.42,37.8,40.32},
  {166,3,0.63,0.42,35.28,40.32},
  {167,3,0.63,0.42,32.76,40.32},
  {168,3,0.63,0.42,30.24,40.32},
  {169,3,0.63,0.42,27.72,40.32},
  {170,3,0.63,0.42,25.2,40.32},
  {171,3,0.63,0.42,22.68,40.32},
  {172,3,0.63,0.42,20.16,40.32},
  {173,3,0.63,0.42,17.64,40.32},
  {174,3,0.63,0.42,15.12,40.32},
  {175,3,0.63,0.42,12.6,40.32},
  {176,3,0.63,0.42,10.08,40.32},
  {177,3,0.63,0.42,7.56,40.32},
  {178,3,0.63,0.42,5.04,40.32},
  {179,3,0.63,0.42,2.52,40.32},
  {180,3,0.63,0.42,0,40.32},
  {183,3,2.52,0.42,70.56,47.04},
  {184,3,2.52,0.42,60.48,47.04},
  {185,3,2.52,0.42,50.4,47.04},
  {186,3,1.26,0.42,45.36,47.04},
  {187,3,1.26,0.42,40.32,47.04},
  {188,3,1.26,0.42,35.28,47.04},
  {189,3,1.26,0.42,30.24,47.04},
  {190,3,1.26,0.42,25.2,47.04},
  {191,3,0.63,0.42,22.68,47.04},
  {192,3,0.63,0.42,20.16,47.04},
  {193,3,0.63,0.42,17.64,47.04},
  {194,3,0.63,0.42,15.12,47.04},
  {195,3,0.63,0.42,12.6,47.04},
  {196,3,0.63,0.42,10.08,47.04},
  {197,3,0.63,0.42,7.56,47.04},
  {198,3,0.63,0.42,5.04,47.04},
  {199,3,0.63,0.42,2.52,47.04},
  {200,3,0.63,0.42,0,47.04},
  {201,8,2.52,0.42,70.56,53.76},
  {202,3,2.52,0.42,60.48,53.76},
  {203,3,2.52,0.42,50.4,53.76},
  {204,3,1.26,0.42,45.36,53.76},
  {205,3,1.26,0.42,40.32,53.76},
  {206,3,1.26,0.42,35.28,53.76},
  {207,3,1.26,0.42,30.24,53.76},
  {208,3,1.26,0.42,25.2,53.76},
  {209,3,1.26,0.42,20.16,53.76},
  {210,3,1.26,0.42,15.12,53.76},
  {211,3,1.26,0.42,10.08,53.76},
  {212,3,1.26,0.42,5.04,53.76},
  {213,3,1.26,0.42,0,53.76},
  {214,4,2.52,0.42,60.48,60.48},
  {215,3,2.52,0.42,50.4,60.48},
  {216,3,2.52,0.42,40.32,60.48},
  {217,3,2.52,0.42,30.24,60.48},
  {218,3,1.26,0.42,25.2,60.48},
  {219,3,1.26,0.42,20.16,60.48},
  {220,3,1.26,0.42,15.12,60.48},
  {221,3,1.26,0.42,10.08,60.48},
  {222,3,1.26,0.42,5.04,60.48},
  {223,3,1.26,0.42,0,60.48},
  {224,3,2.52,0.42,50.4,67.2},
  {225,3,2.52,0.42,40.32,67.2},
  {226,3,2.52,0.42,30.24,67.2},
  {227,3,2.52,0.42,20.16,67.2},
  {228,3,1.26,0.42,15.12,67.2},
  {229,3,1.26,0.42,10.08,67.2},
  {230,3,1.26,0.42,5.04,67.2},
  {231,3,1.26,0.42,0,67.2},
  {232,7,2.52,0.42,50.4,73.92},
  {233,3,2.52,0.42,40.32,73.92},
  {234,3,2.52,0.42,30.24,73.92},
  {235,3,2.52,0.42,20.16,73.92},
  {236,3,2.52,0.42,10.08,73.92},
  {237,3,2.52,0.42,0,73.92},
  {238,5,2.52,0.42,37.8,80.64},
  {239,5,2.52,0.42,30.24,80.64},
  {240,5,2.52,0.42,22.68,80.64},
  {241,5,2.52,0.42,15.12,80.64},
  {242,5,2.52,0.42,7.56,80.64},
  {243,5,2.52,0.42,0,80.64}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<0,false,225,berg80ToManu,MotifPositionTwoPadSizes>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(0),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1025,17,0.63,1.68,80.325,0.21},
  {1026,14,0.63,1.68,70.245,0.21},
  {1027,13,0.63,0.84,65.205,0.21},
  {1028,13,0.63,0.84,60.165,0.21},
  {1029,13,0.63,0.84,55.125,0.21},
  {1030,9,0.63,0.42,52.605,0.21},
  {1031,9,0.63,0.42,50.085,0.21},
  {1032,9,0.63,0.42,47.565,0.21},
  {1033,9,0.63,0.42,45.045,0.21},
  {1034,9,0.63,0.42,42.525,0.21},
  {1035,9,0.63,0.42,40.005,0.21},
  {1036,9,0.63,0.42,37.485,0.21},
  {1037,9,0.63,0.42,34.965,0.21},
  {1038,9,0.63,0.42,32.445,0.21},
  {1039,9,0.63,0.42,29.925,0.21},
  {1040,9,0.63,0.42,27.405,0.21},
  {1041,9,0.63,0.42,24.885,0.21},
  {1042,9,0.63,0.42,22.365,0.21},
  {1043,9,0.63,0.42,19.845,0.21},
  {1044,20,0.63,0.42,16.695,0.21},
  {1051,17,0.63,1.68,80.325,6.93},
  {1052,14,0.63,1.68,70.245,6.93},
  {1053,13,0.63,0.84,65.205,6.93},
  {1054,13,0.63,0.84,60.165,6.93},
  {1055,13,0.63,0.84,55.125,6.93},
  {1056,9,0.63,0.42,52.605,6.93},
  {1057,9,0.63,0.42,50.085,6.93},
  {1058,9,0.63,0.42,47.565,6.93},
  {1059,9,0.63,0.42,45.045,6.93},
  {1060,9,0.63,0.42,42.525,6.93},
  {1061,9,0.63,0.42,40.005,6.93},
  {1062,9,0.63,0.42,37.485,6.93},
  {1063,9,0.63,0.42,34.965,6.93},
  {1064,9,0.63,0.42,32.445,6.93},
  {1065,9,0.63,0.42,29.925,6.93},
  {1066,9,0.63,0.42,27.405,6.93},
  {1067,9,0.63,0.42,24.885,6.93},
  {1068,9,0.63,0.42,22.365,6.93},
  {1069,9,0.63,0.42,19.845,6.93},
  {1070,21,0.63,0.42,16.695,7.35},
  {1071,12,0.63,0.42,11.655,7.35},
  {1077,17,0.63,1.68,80.325,13.65},
  {1078,14,0.63,1.68,70.245,13.65},
  {1079,13,0.63,0.84,65.205,13.65},
  {1080,13,0.63,0.84,60.165,13.65},
  {1081,13,0.63,0.84,55.125,13.65},
  {1082,9,0.63,0.42,52.605,13.65},
  {1083,9,0.63,0.42,50.085,13.65},
  {1084,9,0.63,0.42,47.565,13.65},
  {1085,9,0.63,0.42,45.045,13.65},
  {1086,9,0.63,0.42,42.525,13.65},
  {1087,9,0.63,0.42,40.005,13.65},
  {1088,9,0.63,0.42,37.485,13.65},
  {1089,9,0.63,0.42,34.965,13.65},
  {1090,9,0.63,0.42,32.445,13.65},
  {1091,9,0.63,0.42,29.925,13.65},
  {1092,9,0.63,0.42,27.405,13.65},
  {1093,9,0.63,0.42,24.885,13.65},
  {1094,9,0.63,0.42,22.365,13.65},
  {1095,9,0.63,0.42,19.845,13.65},
  {1096,9,0.63,0.42,17.325,13.65},
  {1097,9,0.63,0.42,14.805,13.65},
  {1098,22,0.63,0.42,11.655,14.49},
  {1099,11,0.63,0.42,5.985,14.49},
  {1100,10,0.63,0.42,1.575,17.85},
  {1103,17,0.63,1.68,80.325,20.37},
  {1104,14,0.63,1.68,70.245,20.37},
  {1105,13,0.63,0.84,65.205,20.37},
  {1106,13,0.63,0.84,60.165,20.37},
  {1107,13,0.63,0.84,55.125,20.37},
  {1108,13,0.63,0.84,50.085,20.37},
  {1109,9,0.63,0.42,47.565,20.37},
  {1110,9,0.63,0.42,45.045,20.37},
  {1111,9,0.63,0.42,42.525,20.37},
  {1112,9,0.63,0.42,40.005,20.37},
  {1113,9,0.63,0.42,37.485,20.37},
  {1114,9,0.63,0.42,34.965,20.37},
  {1115,9,0.63,0.42,32.445,20.37},
  {1116,9,0.63,0.42,29.925,20.37},
  {1117,9,0.63,0.42,27.405,20.37},
  {1118,9,0.63,0.42,24.885,20.37},
  {1119,9,0.63,0.42,22.365,20.37},
  {1120,9,0.63,0.42,19.845,20.37},
  {1121,9,0.63,0.42,17.325,20.37},
  {1122,9,0.63,0.42,14.805,20.37},
  {1123,9,0.63,0.42,12.285,20.37},
  {1124,9,0.63,0.42,9.765,20.37},
  {1125,9,0.63,0.42,7.245,20.37},
  {1126,9,0.63,0.42,4.725,20.37},
  {1127,9,0.63,0.42,2.205,20.37},
  {1128,9,0.63,0.42,-0.315,20.37},
  {1129,17,0.63,1.68,80.325,27.09},
  {1130,14,0.63,1.68,70.245,27.09},
  {1131,13,0.63,0.84,65.205,27.09},
  {1132,13,0.63,0.84,60.165,27.09},
  {1133,13,0.63,0.84,55.125,27.09},
  {1134,13,0.63,0.84,50.085,27.09},
  {1135,13,0.63,0.84,45.045,27.09},
  {1136,9,0.63,0.42,42.525,27.09},
  {1137,9,0.63,0.42,40.005,27.09},
  {1138,9,0.63,0.42,37.485,27.09},
  {1139,9,0.63,0.42,34.965,27.09},
  {1140,9,0.63,0.42,32.445,27.09},
  {1141,9,0.63,0.42,29.925,27.09},
  {1142,9,0.63,0.42,27.405,27.09},
  {1143,9,0.63,0.42,24.885,27.09},
  {1144,9,0.63,0.42,22.365,27.09},
  {1145,9,0.63,0.42,19.845,27.09},
  {1146,9,0.63,0.42,17.325,27.09},
  {1147,9,0.63,0.42,14.805,27.09},
  {1148,9,0.63,0.42,12.285,27.09},
  {1149,9,0.63,0.42,9.765,27.09},
  {1150,9,0.63,0.42,7.245,27.09},
  {1151,9,0.63,0.42,4.725,27.09},
  {1152,9,0.63,0.42,2.205,27.09},
  {1153,9,0.63,0.42,-0.315,27.09},
  {1155,17,0.63,1.68,80.325,33.81},
  {1156,14,0.63,1.68,70.245,33.81},
  {1157,14,0.63,1.68,60.165,33.81},
  {1158,13,0.63,0.84,55.125,33.81},
  {1159,13,0.63,0.84,50.085,33.81},
  {1160,13,0.63,0.84,45.045,33.81},
  {1161,9,0.63,0.42,42.525,33.81},
  {1162,9,0.63,0.42,40.005,33.81},
  {1163,9,0.63,0.42,37.485,33.81},
  {1164,9,0.63,0.42,34.965,33.81},
  {1165,9,0.63,0.42,32.445,33.81},
  {1166,9,0.63,0.42,29.925,33.81},
  {1167,9,0.63,0.42,27.405,33.81},
  {1168,9,0.63,0.42,24.885,33.81},
  {1169,9,0.63,0.42,22.365,33.81},
  {1170,9,0.63,0.42,19.845,33.81},
  {1171,9,0.63,0.42,17.325,33.81},
  {1172,9,0.63,0.42,14.805,33.81},
  {1173,9,0.63,0.42,12.285,33.81},
  {1174,9,0.63,0.42,9.765,33.81},
  {1175,9,0.63,0.42,7.245,33.81},
  {1176,9,0.63,0.42,4.725,33.81},
  {1177,9,0.63,0.42,2.205,33.81},
  {1178,9,0.63,0.42,-0.315,33.81},
  {1181,17,0.63,1.68,80.325,40.53},
  {1182,14,0.63,1.68,70.245,40.53},
  {1183,14,0.63,1.68,60.165,40.53},
  {1184,13,0.63,0.84,55.125,40.53},
  {1185,13,0.63,0.84,50.085,40.53},
  {1186,13,0.63,0.84,45.045,40.53},
  {1187,9,0.63,0.42,42.525,40.53},
  {1188,9,0.63,0.42,40.005,40.53},
  {1189,9,0.63,0.42,37.485,40.53},
  {1190,9,0.63,0.42,34.965,40.53},
  {1191,9,0.63,0.42,32.445,40.53},
  {1192,9,0.63,0.42,29.925,40.53},
  {1193,9,0.63,0.42,27.405,40.53},
  {1194,9,0.63,0.42,24.885,40.53},
  {1195,9,0.63,0.42,22.365,40.53},
  {1196,9,0.63,0.42,19.845,40.53},
  {1197,9,0.63,0.42,17.325,40.53},
  {1198,9,0.63,0.42,14.805,40.53},
  {1199,9,0.63,0.42,12.285,40.53},
  {1200,9,0.63,0.42,9.765,40.53},
  {1201,9,0.63,0.42,7.245,40.53},
  {1202,9,0.63,0.42,4.725,40.53},
  {1203,9,0.63,0.42,2.205,40.53},
  {1204,9,0.63,0.42,-0.315,40.53},
  {1207,14,0.63,1.68,70.245,47.25},
  {1208,14,0.63,1.68,60.165,47.25},
  {1209,14,0.63,1.68,50.085,47.25},
  {1210,13,0.63,0.84,45.045,47.25},
  {1211,13,0.63,0.84,40.005,47.25},
  {1212,13,0.63,0.84,34.965,47.25},
  {1213,13,0.63,0.84,29.925,47.25},
  {1214,13,0.63,0.84,24.885,47.25},
  {1215,9,0.63,0.42,22.365,47.25},
  {1216,9,0.63,0.42,19.845,47.25},
  {1217,9,0.63,0.42,17.325,47.25},
  {1218,9,0.63,0.42,14.805,47.25},
  {1219,9,0.63,0.42,12.285,47.25},
  {1220,9,0.63,0.42,9.765,47.25},
  {1221,9,0.63,0.42,7.245,47.25},
  {1222,9,0.63,0.42,4.725,47.25},
  {1223,9,0.63,0.42,2.205,47.25},
  {1224,9,0.63,0.42,-0.315,47.25},
  {1225,19,0.63,1.68,70.245,53.97},
  {1226,14,0.63,1.68,60.165,53.97},
  {1227,14,0.63,1.68,50.085,53.97},
  {1228,13,0.63,0.84,45.045,53.97},
  {1229,13,0.63,0.84,40.005,53.97},
  {1230,13,0.63,0.84,34.965,53.97},
  {1231,13,0.63,0.84,29.925,53.97},
  {1232,13,0.63,0.84,24.885,53.97},
  {1233,13,0.63,0.84,19.845,53.97},
  {1234,13,0.63,0.84,14.805,53.97},
  {1235,13,0.63,0.84,9.765,53.97},
  {1236,13,0.63,0.84,4.725,53.97},
  {1237,13,0.63,0.84,-0.315,53.97},
  {1238,14,0.63,1.68,60.165,60.69},
  {1239,14,0.63,1.68,50.085,60.69},
  {1240,14,0.63,1.68,40.005,60.69},
  {1241,13,0.63,0.84,34.965,60.69},
  {1242,13,0.63,0.84,29.925,60.69},
  {1243,13,0.63,0.84,24.885,60.69},
  {1244,13,0.63,0.84,19.845,60.69},
  {1245,13,0.63,0.84,14.805,60.69},
  {1246,13,0.63,0.84,9.765,60.69},
  {1247,13,0.63,0.84,4.725,60.69},
  {1248,13,0.63,0.84,-0.315,60.69},
  {1249,14,0.63,1.68,50.085,67.41},
  {1250,14,0.63,1.68,40.005,67.41},
  {1251,14,0.63,1.68,29.925,67.41},
  {1252,14,0.63,1.68,19.845,67.41},
  {1253,13,0.63,0.84,14.805,67.41},
  {1254,13,0.63,0.84,9.765,67.41},
  {1255,13,0.63,0.84,4.725,67.41},
  {1256,13,0.63,0.84,-0.315,67.41},
  {1257,18,0.63,1.68,50.085,74.13},
  {1258,14,0.63,1.68,40.005,74.13},
  {1259,14,0.63,1.68,29.925,74.13},
  {1260,14,0.63,1.68,19.845,74.13},
  {1261,14,0.63,1.68,9.765,74.13},
  {1262,14,0.63,1.68,-0.315,74.13},
  {1263,16,0.63,1.68,40.005,80.85,0.63,3.36, {4,6,11,47,9,8,44,43,5,46,10,45}},
  {1264,15,0.63,1.68,29.925,80.85,0.63,3.36, {4,6,11,47,9,8,44,43,5,46,10,45,7,42,3,2}},
  {1265,15,0.63,1.68,19.845,80.85,0.63,3.36, {4,6,11,47,9,8,44,43,5,46,10,45,7,42,3,2}},
  {1266,15,0.63,1.68,9.765,80.85,0.63,3.36, {4,6,11,47,9,8,44,43,5,46,10,45,7,42,3,2}},
  {1267,15,0.63,1.68,-0.315,80.85,0.63,3.36, {4,6,11,47,9,8,44,43,5,46,10,45,7,42,3,2}}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<1,true,221,berg80ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(1),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,31,3,0.5,107,-0.75},
  {2,29,3,0.5,95,-0.75},
  {3,27,1.5,0.5,89,-0.75},
  {4,27,1.5,0.5,83,-0.75},
  {5,27,1.5,0.5,77,-0.75},
  {6,27,1.5,0.5,71,-0.75},
  {7,27,1.5,0.5,65,-0.75},
  {8,27,1.5,0.5,59,-0.75},
  {9,27,1.5,0.5,53,-0.75},
  {10,23,0.75,0.5,50,-0.75},
  {11,23,0.75,0.5,47,-0.75},
  {12,23,0.75,0.5,44,-0.75},
  {13,23,0.75,0.5,41,-0.75},
  {14,23,0.75,0.5,38,-0.75},
  {15,23,0.75,0.5,35,-0.75},
  {16,23,0.75,0.5,32,-0.75},
  {17,23,0.75,0.5,29,-0.75},
  {18,23,0.75,0.5,26,-0.75},
  {19,59,0.75,0.5,22.25,-0.75},
  {27,32,3,0.5,107,7.25},
  {28,30,3,0.5,95,7.25},
  {29,28,1.5,0.5,89,7.25},
  {30,28,1.5,0.5,83,7.25},
  {31,28,1.5,0.5,77,7.25},
  {32,28,1.5,0.5,71,7.25},
  {33,28,1.5,0.5,65,7.25},
  {34,28,1.5,0.5,59,7.25},
  {35,28,1.5,0.5,53,7.25},
  {36,24,0.75,0.5,50,7.25},
  {37,24,0.75,0.5,47,7.25},
  {38,24,0.75,0.5,44,7.25},
  {39,24,0.75,0.5,41,7.25},
  {40,24,0.75,0.5,38,7.25},
  {41,24,0.75,0.5,35,7.25},
  {42,24,0.75,0.5,32,7.25},
  {43,24,0.75,0.5,29,7.25},
  {44,24,0.75,0.5,26,7.25},
  {45,24,0.75,0.5,23,7.25},
  {46,57,0.75,0.5,17.75,7.25},
  {53,32,3,0.5,107,15.25},
  {54,30,3,0.5,95,15.25},
  {55,28,1.5,0.5,89,15.25},
  {56,28,1.5,0.5,83,15.25},
  {57,28,1.5,0.5,77,15.25},
  {58,28,1.5,0.5,71,15.25},
  {59,28,1.5,0.5,65,15.25},
  {60,28,1.5,0.5,59,15.25},
  {61,28,1.5,0.5,53,15.25},
  {62,24,0.75,0.5,50,15.25},
  {63,24,0.75,0.5,47,15.25},
  {64,24,0.75,0.5,44,15.25},
  {65,24,0.75,0.5,41,15.25},
  {66,24,0.75,0.5,38,15.25},
  {67,24,0.75,0.5,35,15.25},
  {68,24,0.75,0.5,32,15.25},
  {69,24,0.75,0.5,29,15.25},
  {70,24,0.75,0.5,26,15.25},
  {71,24,0.75,0.5,23,15.25},
  {72,24,0.75,0.5,20,15.25},
  {73,24,0.75,0.5,17,15.25},
  {74,58,0.75,0.5,13.25,15.25},
  {75,60,0.75,0.5,1.25,19.25},
  {79,48,3,0.5,107,23.25},
  {80,30,3,0.5,95,23.25},
  {81,26,3,0.5,83,23.25},
  {82,28,1.5,0.5,77,23.25},
  {83,28,1.5,0.5,71,23.25},
  {84,28,1.5,0.5,65,23.25},
  {85,28,1.5,0.5,59,23.25},
  {86,28,1.5,0.5,53,23.25},
  {87,28,1.5,0.5,47,23.25},
  {88,24,0.75,0.5,44,23.25},
  {89,24,0.75,0.5,41,23.25},
  {90,24,0.75,0.5,38,23.25},
  {91,24,0.75,0.5,35,23.25},
  {92,24,0.75,0.5,32,23.25},
  {93,24,0.75,0.5,29,23.25},
  {94,24,0.75,0.5,26,23.25},
  {95,24,0.75,0.5,23,23.25},
  {96,24,0.75,0.5,20,23.25},
  {97,24,0.75,0.5,17,23.25},
  {98,61,0.75,0.5,14,23.75},
  {99,62,0.75,0.5,11,23.25},
  {100,63,0.75,0.5,8,23.25},
  {101,64,0.75,0.5,5,23.25},
  {102,65,0.75,0.5,2,23.25},
  {103,66,0.75,0.5,-1,23.25},
  {105,30,3,0.5,95,31.25},
  {106,26,3,0.5,83,31.25},
  {107,28,1.5,0.5,77,31.25},
  {108,28,1.5,0.5,71,31.25},
  {109,28,1.5,0.5,65,31.25},
  {110,28,1.5,0.5,59,31.25},
  {111,28,1.5,0.5,53,31.25},
  {112,28,1.5,0.5,47,31.25},
  {113,28,1.5,0.5,41,31.25},
  {114,24,0.75,0.5,38,31.25},
  {115,24,0.75,0.5,35,31.25},
  {116,24,0.75,0.5,32,31.25},
  {117,24,0.75,0.5,29,31.25},
  {118,24,0.75,0.5,26,31.25},
  {119,24,0.75,0.5,23,31.25},
  {120,24,0.75,0.5,20,31.25},
  {121,24,0.75,0.5,17,31.25},
  {122,24,0.75,0.5,14,31.25},
  {123,24,0.75,0.5,11,31.25},
  {124,24,0.75,0.5,8,31.25},
  {125,24,0.75,0.5,5,31.25},
  {126,24,0.75,0.5,2,31.25},
  {127,24,0.75,0.5,-1,31.25},
  {131,30,3,0.5,95,39.25},
  {132,26,3,0.5,83,39.25},
  {133,28,1.5,0.5,77,39.25},
  {134,28,1.5,0.5,71,39.25},
  {135,28,1.5,0.5,65,39.25},
  {136,28,1.5,0.5,59,39.25},
  {137,28,1.5,0.5,53,39.25},
  {138,28,1.5,0.5,47,39.25},
  {139,28,1.5,0.5,41,39.25},
  {140,28,1.5,0.5,35,39.25},
  {141,24,0.75,0.5,32,39.25},
  {142,24,0.75,0.5,29,39.25},
  {143,24,0.75,0.5,26,39.25},
  {144,24,0.75,0.5,23,39.25},
  {145,24,0.75,0.5,20,39.25},
  {146,24,0.75,0.5,17,39.25},
  {147,24,0.75,0.5,14,39.25},
  {148,24,0.75,0.5,11,39.25},
  {149,24,0.75,0.5,8,39.25},
  {150,24,0.75,0.5,5,39.25},
  {151,24,0.75,0.5,2,39.25},
  {152,24,0.75,0.5,-1,39.25},
  {157,49,3,0.5,95,47.25},
  {158,26,3,0.5,83,47.25},
  {159,28,1.5,0.5,77,47.25},
  {160,28,1.5,0.5,71,47.25},
  {161,28,1.5,0.5,65,47.25},
  {162,28,1.5,0.5,59,47.25},
  {163,28,1.5,0.5,53,47.25},
  {164,28,1.5,0.5,47,47.25},
  {165,28,1.5,0.5,41,47.25},
  {166,28,1.5,0.5,35,47.25},
  {167,28,1.5,0.5,29,47.25},
  {168,28,1.5,0.5,23,47.25},
  {169,24,0.75,0.5,20,47.25},
  {170,24,0.75,0.5,17,47.25},
  {171,24,0.75,0.5,14,47.25},
  {172,24,0.75,0.5,11,47.25},
  {173,24,0.75,0.5,8,47.25},
  {174,24,0.75,0.5,5,47.25},
  {175,24,0.75,0.5,2,47.25},
  {176,24,0.75,0.5,-1,47.25},
  {183,50,3,0.5,95,55.25},
  {184,33,3,0.5,83,55.25},
  {185,26,3,0.5,71,55.25},
  {186,28,1.5,0.5,65,55.25},
  {187,28,1.5,0.5,59,55.25},
  {188,28,1.5,0.5,53,55.25},
  {189,28,1.5,0.5,47,55.25},
  {190,28,1.5,0.5,41,55.25},
  {191,28,1.5,0.5,35,55.25},
  {192,28,1.5,0.5,29,55.25},
  {193,28,1.5,0.5,23,55.25},
  {194,28,1.5,0.5,17,55.25},
  {195,28,1.5,0.5,11,55.25},
  {196,28,1.5,0.5,5,55.25},
  {197,35,1.5,0.5,-1,55.25},
  {201,33,3,0.5,83,63.25},
  {202,26,3,0.5,71,63.25},
  {203,26,3,0.5,59,63.25},
  {204,28,1.5,0.5,53,63.25},
  {205,28,1.5,0.5,47,63.25},
  {206,28,1.5,0.5,41,63.25},
  {207,28,1.5,0.5,35,63.25},
  {208,28,1.5,0.5,29,63.25},
  {209,28,1.5,0.5,23,63.25},
  {210,28,1.5,0.5,17,63.25},
  {211,28,1.5,0.5,11,63.25},
  {212,28,1.5,0.5,5,63.25},
  {213,35,1.5,0.5,-1,63.25},
  {214,51,3,0.5,83,71.25},
  {215,26,3,0.5,71,71.25},
  {216,26,3,0.5,59,71.25},
  {217,26,3,0.5,47,71.25},
  {218,28,1.5,0.5,41,71.25},
  {219,28,1.5,0.5,35,71.25},
  {220,28,1.5,0.5,29,71.25},
  {221,28,1.5,0.5,23,71.25},
  {222,28,1.5,0.5,17,71.25},
  {223,28,1.5,0.5,11,71.25},
  {224,28,1.5,0.5,5,71.25},
  {225,35,1.5,0.5,-1,71.25},
  {226,53,3,0.5,71,79.25},
  {227,47,3,0.5,65,79.25},
  {228,46,3,0.5,59,79.25},
  {229,56,3,0.5,50,95.25},
  {230,45,3,0.5,53,79.25},
  {231,44,3,0.5,47,79.25},
  {232,55,3,0.5,41,95.25},
  {233,43,3,0.5,41,79.25},
  {234,34,3,0.5,35,79.25},
  {235,34,3,0.5,29,79.25},
  {236,25,1.5,0.5,26,79.25},
  {237,25,1.5,0.5,23,79.25},
  {238,25,1.5,0.5,20,79.25},
  {239,25,1.5,0.5,17,79.25},
  {240,25,1.5,0.5,14,79.25},
  {241,25,1.5,0.5,11,79.25},
  {242,25,1.5,0.5,8,79.25},
  {243,25,1.5,0.5,5,79.25},
  {244,25,1.5,0.5,2,79.25},
  {245,25,1.5,0.5,-1,79.25},
  {246,54,3,0.5,35,95.25},
  {247,41,3,0.5,29,95.25},
  {248,40,3,0.5,23,95.25},
  {249,39,3,0.5,17,95.25},
  {250,52,3,0.5,11,111.25},
  {251,38,3,0.5,11,95.25},
  {252,37,3,0.5,5,95.25},
  {253,42,3,0.5,-1,111.25},
  {254,36,3,0.5,-1,95.25}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<1,false,222,berg80ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(1),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1025,77,0.75,2,105.125,-0.5},
  {1026,76,0.75,2,95.375,-0.5},
  {1027,70,0.75,1,89.375,-0.5},
  {1028,70,0.75,1,83.375,-0.5},
  {1029,70,0.75,1,77.375,-0.5},
  {1030,70,0.75,1,71.375,-0.5},
  {1031,70,0.75,1,65.375,-0.5},
  {1032,70,0.75,1,59.375,-0.5},
  {1033,70,0.75,1,53.375,-0.5},
  {1034,67,0.75,0.5,50.375,-0.5},
  {1035,67,0.75,0.5,47.375,-0.5},
  {1036,67,0.75,0.5,44.375,-0.5},
  {1037,67,0.75,0.5,41.375,-0.5},
  {1038,67,0.75,0.5,38.375,-0.5},
  {1039,67,0.75,0.5,35.375,-0.5},
  {1040,67,0.75,0.5,32.375,-0.5},
  {1041,67,0.75,0.5,29.375,-0.5},
  {1042,67,0.75,0.5,26.375,-0.5},
  {1043,94,0.75,0.5,22.625,-0.5},
  {1051,77,0.75,2,105.125,7.5},
  {1052,76,0.75,2,95.375,7.5},
  {1053,71,0.75,1,89.375,7.5},
  {1054,71,0.75,1,83.375,7.5},
  {1055,71,0.75,1,77.375,7.5},
  {1056,71,0.75,1,71.375,7.5},
  {1057,71,0.75,1,65.375,7.5},
  {1058,71,0.75,1,59.375,7.5},
  {1059,71,0.75,1,53.375,7.5},
  {1060,68,0.75,0.5,50.375,7.5},
  {1061,68,0.75,0.5,47.375,7.5},
  {1062,68,0.75,0.5,44.375,7.5},
  {1063,68,0.75,0.5,41.375,7.5},
  {1064,68,0.75,0.5,38.375,7.5},
  {1065,68,0.75,0.5,35.375,7.5},
  {1066,68,0.75,0.5,32.375,7.5},
  {1067,68,0.75,0.5,29.375,7.5},
  {1068,68,0.75,0.5,26.375,7.5},
  {1069,68,0.75,0.5,23.375,7.5},
  {1070,91,0.75,0.5,18.125,7.5},
  {1077,77,0.75,2,105.125,15.5},
  {1078,76,0.75,2,95.375,15.5},
  {1079,71,0.75,1,89.375,15.5},
  {1080,71,0.75,1,83.375,15.5},
  {1081,71,0.75,1,77.375,15.5},
  {1082,71,0.75,1,71.375,15.5},
  {1083,71,0.75,1,65.375,15.5},
  {1084,71,0.75,1,59.375,15.5},
  {1085,71,0.75,1,53.375,15.5},
  {1086,68,0.75,0.5,50.375,15.5},
  {1087,68,0.75,0.5,47.375,15.5},
  {1088,68,0.75,0.5,44.375,15.5},
  {1089,68,0.75,0.5,41.375,15.5},
  {1090,68,0.75,0.5,38.375,15.5},
  {1091,68,0.75,0.5,35.375,15.5},
  {1092,68,0.75,0.5,32.375,15.5},
  {1093,68,0.75,0.5,29.375,15.5},
  {1094,68,0.75,0.5,26.375,15.5},
  {1095,68,0.75,0.5,23.375,15.5},
  {1096,68,0.75,0.5,20.375,15.5},
  {1097,68,0.75,0.5,17.375,15.5},
  {1098,92,0.75,0.5,13.625,15.5},
  {1099,98,0.75,0.5,1.625,19.5},
  {1103,80,0.75,2,107.375,23.5},
  {1104,75,0.75,2,95.375,23.5},
  {1105,73,0.75,2,83.375,23.5},
  {1106,71,0.75,1,77.375,23.5},
  {1107,71,0.75,1,71.375,23.5},
  {1108,71,0.75,1,65.375,23.5},
  {1109,71,0.75,1,59.375,23.5},
  {1110,71,0.75,1,53.375,23.5},
  {1111,71,0.75,1,47.375,23.5},
  {1112,68,0.75,0.5,44.375,23.5},
  {1113,68,0.75,0.5,41.375,23.5},
  {1114,68,0.75,0.5,38.375,23.5},
  {1115,68,0.75,0.5,35.375,23.5},
  {1116,68,0.75,0.5,32.375,23.5},
  {1117,68,0.75,0.5,29.375,23.5},
  {1118,68,0.75,0.5,26.375,23.5},
  {1119,68,0.75,0.5,23.375,23.5},
  {1120,68,0.75,0.5,20.375,23.5},
  {1121,68,0.75,0.5,17.375,23.5},
  {1122,99,0.75,0.5,14.375,24},
  {1123,100,0.75,0.5,11.375,23.5},
  {1124,101,0.75,0.5,8.375,23.5},
  {1125,102,0.75,0.5,5.375,23.5},
  {1126,103,0.75,0.5,2.375,23.5},
  {1127,104,0.75,0.5,-0.625,23.5},
  {1129,75,0.75,2,95.375,31.5},
  {1130,73,0.75,2,83.375,31.5},
  {1131,71,0.75,1,77.375,31.5},
  {1132,71,0.75,1,71.375,31.5},
  {1133,71,0.75,1,65.375,31.5},
  {1134,71,0.75,1,59.375,31.5},
  {1135,71,0.75,1,53.375,31.5},
  {1136,71,0.75,1,47.375,31.5},
  {1137,71,0.75,1,41.375,31.5},
  {1138,68,0.75,0.5,38.375,31.5},
  {1139,68,0.75,0.5,35.375,31.5},
  {1140,68,0.75,0.5,32.375,31.5},
  {1141,68,0.75,0.5,29.375,31.5},
  {1142,68,0.75,0.5,26.375,31.5},
  {1143,68,0.75,0.5,23.375,31.5},
  {1144,68,0.75,0.5,20.375,31.5},
  {1145,68,0.75,0.5,17.375,31.5},
  {1146,68,0.75,0.5,14.375,31.5},
  {1147,68,0.75,0.5,11.375,31.5},
  {1148,68,0.75,0.5,8.375,31.5},
  {1149,68,0.75,0.5,5.375,31.5},
  {1150,68,0.75,0.5,2.375,31.5},
  {1151,68,0.75,0.5,-0.625,31.5},
  {1155,81,0.75,2,95.375,39.5},
  {1156,73,0.75,2,83.375,39.5},
  {1157,71,0.75,1,77.375,39.5},
  {1158,71,0.75,1,71.375,39.5},
  {1159,71,0.75,1,65.375,39.5},
  {1160,71,0.75,1,59.375,39.5},
  {1161,71,0.75,1,53.375,39.5},
  {1162,71,0.75,1,47.375,39.5},
  {1163,71,0.75,1,41.375,39.5},
  {1164,71,0.75,1,35.375,39.5},
  {1165,68,0.75,0.5,32.375,39.5},
  {1166,68,0.75,0.5,29.375,39.5},
  {1167,68,0.75,0.5,26.375,39.5},
  {1168,68,0.75,0.5,23.375,39.5},
  {1169,68,0.75,0.5,20.375,39.5},
  {1170,68,0.75,0.5,17.375,39.5},
  {1171,68,0.75,0.5,14.375,39.5},
  {1172,68,0.75,0.5,11.375,39.5},
  {1173,68,0.75,0.5,8.375,39.5},
  {1174,68,0.75,0.5,5.375,39.5},
  {1175,68,0.75,0.5,2.375,39.5},
  {1176,68,0.75,0.5,-0.625,39.5},
  {1181,82,0.75,2,95.375,43.5},
  {1182,73,0.75,2,83.375,47.5},
  {1183,71,0.75,1,77.375,47.5},
  {1184,71,0.75,1,71.375,47.5},
  {1185,71,0.75,1,65.375,47.5},
  {1186,71,0.75,1,59.375,47.5},
  {1187,71,0.75,1,53.375,47.5},
  {1188,71,0.75,1,47.375,47.5},
  {1189,71,0.75,1,41.375,47.5},
  {1190,71,0.75,1,35.375,47.5},
  {1191,71,0.75,1,29.375,47.5},
  {1192,71,0.75,1,23.375,47.5},
  {1193,68,0.75,0.5,20.375,47.5},
  {1194,68,0.75,0.5,17.375,47.5},
  {1195,68,0.75,0.5,14.375,47.5},
  {1196,68,0.75,0.5,11.375,47.5},
  {1197,68,0.75,0.5,8.375,47.5},
  {1198,68,0.75,0.5,5.375,47.5},
  {1199,68,0.75,0.5,2.375,47.5},
  {1200,68,0.75,0.5,-0.625,47.5},
  {1207,83,0.75,2,94.625,55.5},
  {1208,79,0.75,2,83.375,55.5},
  {1209,74,0.75,2,71.375,55.5},
  {1210,71,0.75,1,65.375,55.5},
  {1211,71,0.75,1,59.375,55.5},
  {1212,71,0.75,1,53.375,55.5},
  {1213,71,0.75,1,47.375,55.5},
  {1214,71,0.75,1,41.375,55.5},
  {1215,71,0.75,1,35.375,55.5},
  {1216,71,0.75,1,29.375,55.5},
  {1217,71,0.75,1,23.375,55.5},
  {1218,71,0.75,1,17.375,55.5},
  {1219,71,0.75,1,11.375,55.5},
  {1220,71,0.75,1,5.375,55.5},
  {1221,71,0.75,1,-0.625,55.5},
  {1225,84,0.75,2,83.375,63.5},
  {1226,74,0.75,2,71.375,63.5},
  {1227,74,0.75,2,59.375,63.5},
  {1228,71,0.75,1,53.375,63.5},
  {1229,71,0.75,1,47.375,63.5},
  {1230,71,0.75,1,41.375,63.5},
  {1231,71,0.75,1,35.375,63.5},
  {1232,71,0.75,1,29.375,63.5},
  {1233,71,0.75,1,23.375,63.5},
  {1234,71,0.75,1,17.375,63.5},
  {1235,71,0.75,1,11.375,63.5},
  {1236,71,0.75,1,5.375,63.5},
  {1237,71,0.75,1,-0.625,63.5},
  {1238,85,0.75,2,83.375,71.5},
  {1239,74,0.75,2,71.375,71.5},
  {1240,74,0.75,2,59.375,71.5},
  {1241,71,0.75,1,53.375,71.5},
  {1242,71,0.75,1,47.375,71.5},
  {1243,71,0.75,1,41.375,71.5},
  {1244,71,0.75,1,35.375,71.5},
  {1245,71,0.75,1,29.375,71.5},
  {1246,71,0.75,1,23.375,71.5},
  {1247,71,0.75,1,17.375,71.5},
  {1248,71,0.75,1,11.375,71.5},
  {1249,71,0.75,1,5.375,71.5},
  {1250,71,0.75,1,-0.625,71.5},
  {1251,86,0.75,2,71.375,79.5},
  {1252,105,0.75,2,65.375,79.5},
  {1253,72,0.75,2,59.375,79.5},
  {1254,72,0.75,2,53.375,79.5},
  {1255,72,0.75,2,47.375,79.5},
  {1256,72,0.75,2,41.375,79.5},
  {1257,72,0.75,2,35.375,79.5},
  {1258,72,0.75,2,29.375,79.5},
  {1259,69,0.75,1,26.375,79.5},
  {1260,69,0.75,1,23.375,79.5},
  {1261,69,0.75,1,20.375,79.5},
  {1262,69,0.75,1,17.375,79.5},
  {1263,69,0.75,1,14.375,79.5},
  {1264,69,0.75,1,11.375,79.5},
  {1265,69,0.75,1,8.375,79.5},
  {1266,69,0.75,1,5.375,79.5},
  {1267,69,0.75,1,2.375,79.5},
  {1268,69,0.75,1,-0.625,79.5},
  {1269,87,0.75,2,47.375,95.5},
  {1270,88,0.75,2,35.375,95.5},
  {1271,93,0.75,2,32.375,95.5},
  {1272,95,0.75,2,27.875,95.5},
  {1273,96,0.75,2,23.375,95.5},
  {1274,97,0.75,2,18.875,95.5},
  {1275,78,0.75,2,15.125,95.5},
  {1276,78,0.75,2,11.375,95.5},
  {1277,78,0.75,2,7.625,95.5},
  {1278,89,0.75,2,3.125,95.5},
  {1279,90,0.75,2,-0.625,95.5}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<2,true,46,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(2),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,127,2.5,0.5,50,2},
  {2,178,2.5,0.5,45,4},
  {3,178,2.5,0.5,40,4},
  {6,165,2.5,0.5,35,0},
  {7,206,2.5,0.5,30,0},
  {8,187,2.5,0.5,27.5,4},
  {9,205,2.5,0.5,22.5,0},
  {10,164,2.5,0.5,20,0},
  {11,165,2.5,0.5,15,0},
  {12,206,2.5,0.5,10,0},
  {13,187,2.5,0.5,7.5,4},
  {14,205,2.5,0.5,2.5,0},
  {15,164,2.5,0.5,0,0},
  {104,165,5,0.5,-50,0},
  {105,206,5,0.5,-60,0},
  {106,187,5,0.5,-65,4},
  {107,209,5,0.5,-75,0},
  {111,165,5,0.5,-10,0},
  {112,206,5,0.5,-20,0},
  {113,187,5,0.5,-25,4},
  {114,205,5,0.5,-35,0},
  {115,164,5,0.5,-40,0},
  {201,155,5,0.5,-75,-20},
  {202,158,5,0.5,-70,-20},
  {203,170,5,0.5,-65,-20},
  {204,208,5,0.5,-60,-20},
  {205,167,5,0.5,-50,-20},
  {209,166,5,0.5,-40,-20},
  {210,207,5,0.5,-35,-20},
  {211,170,5,0.5,-25,-20},
  {212,208,5,0.5,-20,-20},
  {213,167,5,0.5,-10,-20},
  {304,132,2.5,0.5,40,-20},
  {305,133,2.5,0.5,42.5,-20},
  {306,134,2.5,0.5,45,-20},
  {307,135,2.5,0.5,50,-20},
  {315,166,2.5,0.5,0,-20},
  {316,207,2.5,0.5,2.5,-20},
  {317,170,2.5,0.5,7.5,-20},
  {318,208,2.5,0.5,10,-20},
  {319,167,2.5,0.5,15,-20},
  {320,166,2.5,0.5,20,-20},
  {321,207,2.5,0.5,22.5,-20},
  {322,170,2.5,0.5,27.5,-20},
  {323,208,2.5,0.5,30,-20},
  {324,167,2.5,0.5,35,-20}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<2,false,32,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(2),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1028,131,0.714286,2.5,40,2.5},
  {1029,130,0.714286,2.5,47.1429,5},
  {1040,169,0.714286,2.5,-3.9968e-15,0},
  {1041,169,0.714286,2.5,5.71429,0},
  {1042,169,0.714286,2.5,11.4286,0},
  {1043,169,0.714286,2.5,17.1429,0},
  {1044,169,0.714286,2.5,22.8571,0},
  {1045,169,0.714286,2.5,28.5714,0},
  {1046,169,0.714286,2.5,34.2857,0},
  {1125,182,0.714286,5,-74.2857,0},
  {1126,182,0.714286,5,-62.8571,0},
  {1127,182,0.714286,5,-51.4286,0},
  {1132,162,0.714286,5,-40,0},
  {1133,182,0.714286,5,-25.7143,0},
  {1134,163,0.714286,5,-14.2857,0},
  {1230,181,0.714286,5,-51.4286,-20},
  {1231,181,0.714286,5,-62.8571,-20},
  {1232,181,0.714286,5,-74.2857,-20},
  {1238,191,0.714286,5,-10,-20},
  {1239,195,0.714286,5,-20,-20},
  {1240,194,0.714286,5,-31.4286,-20},
  {1241,190,0.714286,5,-40,-20},
  {1325,129,0.714286,2.5,49.2857,-20},
  {1326,128,0.714286,2.5,44.2857,-20},
  {1327,126,0.714286,2.5,40,-20},
  {1332,173,0.714286,2.5,34.2857,-20},
  {1333,173,0.714286,2.5,28.5714,-20},
  {1334,173,0.714286,2.5,22.8571,-20},
  {1335,173,0.714286,2.5,17.1429,-20},
  {1336,173,0.714286,2.5,11.4286,-20},
  {1337,173,0.714286,2.5,5.71429,-20},
  {1338,173,0.714286,2.5,-3.9968e-15,-20}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<3,true,56,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(3),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {4,176,2.5,0.5,40,-20},
  {5,177,2.5,0.5,45,-20},
  {6,177,2.5,0.5,50,-20},
  {7,124,2.5,0.5,55,-17.5},
  {101,155,5,0.5,-75,-20},
  {102,158,5,0.5,-70,-20},
  {103,170,5,0.5,-65,-20},
  {104,208,5,0.5,-60,-20},
  {105,167,5,0.5,-50,-20},
  {109,166,5,0.5,-40,-20},
  {110,207,5,0.5,-35,-20},
  {111,170,5,0.5,-25,-20},
  {112,208,5,0.5,-20,-20},
  {113,167,5,0.5,-10,-20},
  {118,166,2.5,0.5,0,-20},
  {119,207,2.5,0.5,2.5,-20},
  {120,170,2.5,0.5,7.5,-20},
  {121,208,2.5,0.5,10,-20},
  {122,167,2.5,0.5,15,-20},
  {123,166,2.5,0.5,20,-20},
  {124,207,2.5,0.5,22.5,-20},
  {125,170,2.5,0.5,27.5,-20},
  {126,208,2.5,0.5,30,-20},
  {127,167,2.5,0.5,35,-20},
  {204,165,5,0.5,-50,0},
  {205,206,5,0.5,-60,0},
  {206,187,5,0.5,-65,4},
  {207,209,5,0.5,-75,0},
  {211,165,5,0.5,-10,0},
  {212,206,5,0.5,-20,0},
  {213,187,5,0.5,-25,4},
  {214,205,5,0.5,-35,0},
  {215,164,5,0.5,-40,0},
  {223,165,2.5,0.5,35,0},
  {224,206,2.5,0.5,30,0},
  {225,187,2.5,0.5,27.5,4},
  {226,205,2.5,0.5,22.5,0},
  {227,164,2.5,0.5,20,0},
  {228,165,2.5,0.5,15,0},
  {229,206,2.5,0.5,10,0},
  {230,187,2.5,0.5,7.5,4},
  {231,205,2.5,0.5,2.5,0},
  {232,164,2.5,0.5,0,0},
  {401,125,2.5,0.5,75,-7},
  {402,107,2.5,0.5,72.5,-7.5},
  {403,108,2.5,0.5,70,-8},
  {404,109,2.5,0.5,67.5,1},
  {405,110,2.5,0.5,65,-8.5},
  {406,111,2.5,0.5,62.5,-10},
  {407,112,2.5,0.5,60,-11},
  {408,113,2.5,0.5,55,-4},
  {409,114,2.5,0.5,52.5,-4},
  {410,115,2.5,0.5,50,-4},
  {411,118,2.5,0.5,45,-4},
  {412,114,2.5,0.5,42.5,-4},
  {413,116,2.5,0.5,40,-4}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<3,false,39,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(3),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1025,106,0.714286,2.5,51.4286,-20},
  {1026,174,0.714286,2.5,45.7143,-20},
  {1027,174,0.714286,2.5,40,-20},
  {1130,181,0.714286,5,-51.4286,-20},
  {1131,181,0.714286,5,-62.8571,-20},
  {1132,181,0.714286,5,-74.2857,-20},
  {1138,191,0.714286,5,-10,-20},
  {1139,195,0.714286,5,-20,-20},
  {1140,194,0.714286,5,-31.4286,-20},
  {1141,190,0.714286,5,-40,-20},
  {1152,173,0.714286,2.5,34.2857,-20},
  {1153,173,0.714286,2.5,28.5714,-20},
  {1154,173,0.714286,2.5,22.8571,-20},
  {1155,173,0.714286,2.5,17.1429,-20},
  {1156,173,0.714286,2.5,11.4286,-20},
  {1157,173,0.714286,2.5,5.71429,-20},
  {1158,173,0.714286,2.5,-3.9968e-15,-20},
  {1225,182,0.714286,5,-74.2857,0},
  {1226,182,0.714286,5,-62.8571,0},
  {1227,182,0.714286,5,-51.4286,0},
  {1232,162,0.714286,5,-40,0},
  {1233,182,0.714286,5,-25.7143,0},
  {1234,163,0.714286,5,-14.2857,0},
  {1240,169,0.714286,2.5,-3.9968e-15,0},
  {1241,169,0.714286,2.5,5.71429,0},
  {1242,169,0.714286,2.5,11.4286,0},
  {1243,169,0.714286,2.5,17.1429,0},
  {1244,169,0.714286,2.5,22.8571,0},
  {1245,169,0.714286,2.5,28.5714,0},
  {1246,169,0.714286,2.5,34.2857,0},
  {1325,175,0.714286,2.5,40,0},
  {1326,175,0.714286,2.5,45.7143,0},
  {1327,175,0.714286,2.5,51.4286,0},
  {1328,117,0.714286,2.5,57.1429,-15},
  {1329,119,0.714286,2.5,60,-12.5},
  {1330,120,0.714286,2.5,63.5714,-10},
  {1331,121,0.714286,2.5,67.1429,-10},
  {1332,122,0.714286,2.5,71.4286,-7.5},
  {1333,123,0.714286,2.5,75.7143,-7.5}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<4,true,49,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(4),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,166,2.5,0.5,-80,-20},
  {2,207,2.5,0.5,-77.5,-20},
  {3,170,2.5,0.5,-72.5,-20},
  {4,208,2.5,0.5,-70,-20},
  {5,167,2.5,0.5,-65,-20},
  {6,166,2.5,0.5,-60,-20},
  {7,207,2.5,0.5,-57.5,-20},
  {8,170,2.5,0.5,-52.5,-20},
  {9,208,2.5,0.5,-50,-20},
  {10,167,2.5,0.5,-45,-20},
  {104,196,5,0.5,40,-20},
  {105,197,5,0.5,45,-20},
  {106,198,5,0.5,55,-20},
  {107,199,5,0.5,60,-20},
  {111,166,5,0.5,0,-20},
  {112,207,5,0.5,5,-20},
  {113,170,5,0.5,15,-20},
  {114,208,5,0.5,20,-20},
  {115,167,5,0.5,30,-20},
  {119,166,5,0.5,-40,-20},
  {120,207,5,0.5,-35,-20},
  {121,170,5,0.5,-25,-20},
  {122,208,5,0.5,-20,-20},
  {123,167,5,0.5,-10,-20},
  {201,200,5,0.5,70,-12},
  {202,201,5,0.5,60,0},
  {203,202,5,0.5,55,4},
  {204,203,5,0.5,45,0},
  {205,204,5,0.5,40,0},
  {209,165,5,0.5,30,0},
  {210,206,5,0.5,20,0},
  {211,187,5,0.5,15,4},
  {212,205,5,0.5,5,0},
  {213,164,5,0.5,0,0},
  {218,165,5,0.5,-10,0},
  {219,206,5,0.5,-20,0},
  {220,187,5,0.5,-25,4},
  {221,205,5,0.5,-35,0},
  {222,164,5,0.5,-40,0},
  {308,165,2.5,0.5,-45,0},
  {309,206,2.5,0.5,-50,0},
  {310,187,2.5,0.5,-52.5,4},
  {311,205,2.5,0.5,-57.5,0},
  {312,164,2.5,0.5,-60,0},
  {313,165,2.5,0.5,-65,0},
  {314,206,2.5,0.5,-70,0},
  {315,187,2.5,0.5,-72.5,4},
  {316,205,2.5,0.5,-77.5,0},
  {317,164,2.5,0.5,-80,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<4,false,34,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(4),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1035,173,0.714286,2.5,-45.7143,-20},
  {1036,173,0.714286,2.5,-51.4286,-20},
  {1037,173,0.714286,2.5,-57.1429,-20},
  {1038,173,0.714286,2.5,-62.8571,-20},
  {1039,173,0.714286,2.5,-68.5714,-20},
  {1040,173,0.714286,2.5,-74.2857,-20},
  {1041,173,0.714286,2.5,-80,-20},
  {1125,181,0.714286,5,62.8571,-20},
  {1126,181,0.714286,5,51.4286,-20},
  {1127,181,0.714286,5,40,-20},
  {1132,160,0.714286,5,25.7143,-20},
  {1133,181,0.714286,5,14.2857,-20},
  {1134,156,0.714286,5,4.44089e-15,-20},
  {1140,160,0.714286,5,-14.2857,-20},
  {1141,181,0.714286,5,-25.7143,-20},
  {1142,156,0.714286,5,-40,-20},
  {1230,182,0.714286,5,40,0},
  {1231,182,0.714286,5,51.4286,0},
  {1232,182,0.714286,5,62.8571,0},
  {1238,192,0.714286,5,-7.10543e-15,-5},
  {1239,188,0.714286,5,8.57143,-5},
  {1240,189,0.714286,5,20,-5},
  {1241,193,0.714286,5,30,-5},
  {1247,192,0.714286,5,-40,-5},
  {1248,188,0.714286,5,-31.4286,-5},
  {1249,189,0.714286,5,-20,-5},
  {1250,193,0.714286,5,-10,-5},
  {1325,169,0.714286,2.5,-80,0},
  {1326,169,0.714286,2.5,-74.2857,0},
  {1327,169,0.714286,2.5,-68.5714,0},
  {1328,169,0.714286,2.5,-62.8571,0},
  {1329,169,0.714286,2.5,-57.1429,0},
  {1330,169,0.714286,2.5,-51.4286,0},
  {1331,169,0.714286,2.5,-45.7143,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<5,true,30,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(5),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {4,166,5,0.5,20,-20},
  {5,207,5,0.5,25,-20},
  {6,170,5,0.5,35,-20},
  {7,208,5,0.5,40,-20},
  {8,167,5,0.5,50,-20},
  {12,166,5,0.5,-20,-20},
  {13,207,5,0.5,-15,-20},
  {14,170,5,0.5,-5,-20},
  {15,208,5,0.5,0,-20},
  {16,167,5,0.5,10,-20},
  {20,166,5,0.5,-60,-20},
  {21,207,5,0.5,-55,-20},
  {22,170,5,0.5,-45,-20},
  {23,208,5,0.5,-40,-20},
  {24,167,5,0.5,-30,-20},
  {101,165,5,0.5,50,0},
  {102,206,5,0.5,40,0},
  {103,187,5,0.5,35,4},
  {104,205,5,0.5,25,0},
  {105,164,5,0.5,20,0},
  {110,165,5,0.5,10,0},
  {111,206,5,0.5,0,0},
  {112,187,5,0.5,-5,4},
  {113,205,5,0.5,-15,0},
  {114,164,5,0.5,-20,0},
  {119,165,5,0.5,-30,0},
  {120,206,5,0.5,-40,0},
  {121,187,5,0.5,-45,4},
  {122,205,5,0.5,-55,0},
  {123,164,5,0.5,-60,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<5,false,21,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(5),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1025,160,0.714286,5,45.7143,-20},
  {1026,181,0.714286,5,34.2857,-20},
  {1027,156,0.714286,5,20,-20},
  {1033,160,0.714286,5,5.71429,-20},
  {1034,181,0.714286,5,-5.71429,-20},
  {1035,156,0.714286,5,-20,-20},
  {1041,160,0.714286,5,-34.2857,-20},
  {1042,181,0.714286,5,-45.7143,-20},
  {1043,156,0.714286,5,-60,-20},
  {1130,192,0.714286,5,20,-5},
  {1131,188,0.714286,5,28.5714,-5},
  {1132,189,0.714286,5,40,-5},
  {1133,193,0.714286,5,50,-5},
  {1139,192,0.714286,5,-20,-5},
  {1140,188,0.714286,5,-11.4286,-5},
  {1141,189,0.714286,5,-8.00001e-09,-5},
  {1142,193,0.714286,5,10,-5},
  {1148,192,0.714286,5,-60,-5},
  {1149,188,0.714286,5,-51.4286,-5},
  {1150,189,0.714286,5,-40,-5},
  {1151,193,0.714286,5,-30,-5}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<6,true,20,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(6),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {4,166,5,0.5,0,-20},
  {5,207,5,0.5,5,-20},
  {6,170,5,0.5,15,-20},
  {7,208,5,0.5,20,-20},
  {8,167,5,0.5,30,-20},
  {12,166,5,0.5,-40,-20},
  {13,207,5,0.5,-35,-20},
  {14,170,5,0.5,-25,-20},
  {15,208,5,0.5,-20,-20},
  {16,167,5,0.5,-10,-20},
  {101,165,5,0.5,30,0},
  {102,206,5,0.5,20,0},
  {103,187,5,0.5,15,4},
  {104,205,5,0.5,5,0},
  {105,164,5,0.5,0,0},
  {110,165,5,0.5,-10,0},
  {111,206,5,0.5,-20,0},
  {112,187,5,0.5,-25,4},
  {113,205,5,0.5,-35,0},
  {114,164,5,0.5,-40,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<6,false,14,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(6),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1025,160,0.714286,5,25.7143,-20},
  {1026,181,0.714286,5,14.2857,-20},
  {1027,156,0.714286,5,-2.66454e-15,-20},
  {1033,160,0.714286,5,-14.2857,-20},
  {1034,181,0.714286,5,-25.7143,-20},
  {1035,156,0.714286,5,-40,-20},
  {1130,192,0.714286,5,0,-5},
  {1131,188,0.714286,5,8.57143,-5},
  {1132,189,0.714286,5,20,-5},
  {1133,193,0.714286,5,30,-5},
  {1139,192,0.714286,5,-40,-5},
  {1140,188,0.714286,5,-31.4286,-5},
  {1141,189,0.714286,5,-20,-5},
  {1142,193,0.714286,5,-10,-5}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<7,true,47,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(7),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,127,2.5,0.5,50,2},
  {2,178,2.5,0.5,45,4},
  {3,178,2.5,0.5,40,4},
  {6,165,2.5,0.5,35,0},
  {7,206,2.5,0.5,30,0},
  {8,187,2.5,0.5,27.5,4},
  {9,205,2.5,0.5,22.5,0},
  {10,164,2.5,0.5,20,0},
  {11,165,2.5,0.5,15,0},
  {12,206,2.5,0.5,10,0},
  {13,187,2.5,0.5,7.5,4},
  {14,205,2.5,0.5,2.5,0},
  {15,164,2.5,0.5,0,0},
  {104,165,5,0.5,-50,0},
  {105,206,5,0.5,-60,0},
  {106,187,5,0.5,-65,4},
  {107,205,5,0.5,-75,0},
  {108,164,5,0.5,-80,0},
  {112,165,5,0.5,-10,0},
  {113,206,5,0.5,-20,0},
  {114,187,5,0.5,-25,4},
  {115,205,5,0.5,-35,0},
  {116,164,5,0.5,-40,0},
  {201,166,5,0.5,-80,-20},
  {202,207,5,0.5,-75,-20},
  {203,170,5,0.5,-65,-20},
  {204,208,5,0.5,-60,-20},
  {205,167,5,0.5,-50,-20},
  {210,166,5,0.5,-40,-20},
  {211,207,5,0.5,-35,-20},
  {212,170,5,0.5,-25,-20},
  {213,208,5,0.5,-20,-20},
  {214,167,5,0.5,-10,-20},
  {304,132,2.5,0.5,40,-20},
  {305,133,2.5,0.5,42.5,-20},
  {306,134,2.5,0.5,45,-20},
  {307,135,2.5,0.5,50,-20},
  {315,166,2.5,0.5,0,-20},
  {316,207,2.5,0.5,2.5,-20},
  {317,170,2.5,0.5,7.5,-20},
  {318,208,2.5,0.5,10,-20},
  {319,167,2.5,0.5,15,-20},
  {320,166,2.5,0.5,20,-20},
  {321,207,2.5,0.5,22.5,-20},
  {322,170,2.5,0.5,27.5,-20},
  {323,208,2.5,0.5,30,-20},
  {324,167,2.5,0.5,35,-20}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<7,false,33,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(7),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1028,131,0.714286,2.5,40,2.5},
  {1029,130,0.714286,2.5,47.1429,5},
  {1040,169,0.714286,2.5,-3.9968e-15,0},
  {1041,169,0.714286,2.5,5.71429,0},
  {1042,169,0.714286,2.5,11.4286,0},
  {1043,169,0.714286,2.5,17.1429,0},
  {1044,169,0.714286,2.5,22.8571,0},
  {1045,169,0.714286,2.5,28.5714,0},
  {1046,169,0.714286,2.5,34.2857,0},
  {1125,162,0.714286,5,-80,0},
  {1126,182,0.714286,5,-65.7143,0},
  {1127,163,0.714286,5,-54.2857,0},
  {1133,162,0.714286,5,-40,0},
  {1134,182,0.714286,5,-25.7143,0},
  {1135,163,0.714286,5,-14.2857,0},
  {1230,191,0.714286,5,-50,-20},
  {1231,195,0.714286,5,-60,-20},
  {1232,194,0.714286,5,-71.4286,-20},
  {1233,190,0.714286,5,-80,-20},
  {1239,191,0.714286,5,-10,-20},
  {1240,195,0.714286,5,-20,-20},
  {1241,194,0.714286,5,-31.4286,-20},
  {1242,190,0.714286,5,-40,-20},
  {1325,129,0.714286,2.5,49.2857,-20},
  {1326,128,0.714286,2.5,44.2857,-20},
  {1327,126,0.714286,2.5,40,-20},
  {1332,173,0.714286,2.5,34.2857,-20},
  {1333,173,0.714286,2.5,28.5714,-20},
  {1334,173,0.714286,2.5,22.8571,-20},
  {1335,173,0.714286,2.5,17.1429,-20},
  {1336,173,0.714286,2.5,11.4286,-20},
  {1337,173,0.714286,2.5,5.71429,-20},
  {1338,173,0.714286,2.5,-3.9968e-15,-20}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<8,true,57,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(8),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {4,176,2.5,0.5,40,-20},
  {5,177,2.5,0.5,45,-20},
  {6,177,2.5,0.5,50,-20},
  {7,124,2.5,0.5,55,-17.5},
  {101,166,5,0.5,-80,-20},
  {102,207,5,0.5,-75,-20},
  {103,170,5,0.5,-65,-20},
  {104,208,5,0.5,-60,-20},
  {105,167,5,0.5,-50,-20},
  {110,166,5,0.5,-40,-20},
  {111,207,5,0.5,-35,-20},
  {112,170,5,0.5,-25,-20},
  {113,208,5,0.5,-20,-20},
  {114,167,5,0.5,-10,-20},
  {119,166,2.5,0.5,0,-20},
  {120,207,2.5,0.5,2.5,-20},
  {121,170,2.5,0.5,7.5,-20},
  {122,208,2.5,0.5,10,-20},
  {123,167,2.5,0.5,15,-20},
  {124,166,2.5,0.5,20,-20},
  {125,207,2.5,0.5,22.5,-20},
  {126,170,2.5,0.5,27.5,-20},
  {127,208,2.5,0.5,30,-20},
  {128,167,2.5,0.5,35,-20},
  {204,165,5,0.5,-50,0},
  {205,206,5,0.5,-60,0},
  {206,187,5,0.5,-65,4},
  {207,205,5,0.5,-75,0},
  {208,164,5,0.5,-80,0},
  {212,165,5,0.5,-10,0},
  {213,206,5,0.5,-20,0},
  {214,187,5,0.5,-25,4},
  {215,205,5,0.5,-35,0},
  {216,164,5,0.5,-40,0},
  {224,165,2.5,0.5,35,0},
  {225,206,2.5,0.5,30,0},
  {226,187,2.5,0.5,27.5,4},
  {227,205,2.5,0.5,22.5,0},
  {228,164,2.5,0.5,20,0},
  {229,165,2.5,0.5,15,0},
  {230,206,2.5,0.5,10,0},
  {231,187,2.5,0.5,7.5,4},
  {232,205,2.5,0.5,2.5,0},
  {233,164,2.5,0.5,0,0},
  {401,125,2.5,0.5,75,-7},
  {402,107,2.5,0.5,72.5,-7.5},
  {403,108,2.5,0.5,70,-8},
  {404,109,2.5,0.5,67.5,1},
  {405,110,2.5,0.5,65,-8.5},
  {406,111,2.5,0.5,62.5,-10},
  {407,112,2.5,0.5,60,-11},
  {408,113,2.5,0.5,55,-4},
  {409,114,2.5,0.5,52.5,-4},
  {410,115,2.5,0.5,50,-4},
  {411,118,2.5,0.5,45,-4},
  {412,114,2.5,0.5,42.5,-4},
  {413,116,2.5,0.5,40,-4}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<8,false,40,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(8),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1025,106,0.714286,2.5,51.4286,-20},
  {1026,174,0.714286,2.5,45.7143,-20},
  {1027,174,0.714286,2.5,40,-20},
  {1130,191,0.714286,5,-50,-20},
  {1131,195,0.714286,5,-60,-20},
  {1132,194,0.714286,5,-71.4286,-20},
  {1133,190,0.714286,5,-80,-20},
  {1139,191,0.714286,5,-10,-20},
  {1140,195,0.714286,5,-20,-20},
  {1141,194,0.714286,5,-31.4286,-20},
  {1142,190,0.714286,5,-40,-20},
  {1153,173,0.714286,2.5,34.2857,-20},
  {1154,173,0.714286,2.5,28.5714,-20},
  {1155,173,0.714286,2.5,22.8571,-20},
  {1156,173,0.714286,2.5,17.1429,-20},
  {1157,173,0.714286,2.5,11.4286,-20},
  {1158,173,0.714286,2.5,5.71429,-20},
  {1159,173,0.714286,2.5,-3.9968e-15,-20},
  {1225,162,0.714286,5,-80,0},
  {1226,182,0.714286,5,-65.7143,0},
  {1227,163,0.714286,5,-54.2857,0},
  {1233,162,0.714286,5,-40,0},
  {1234,182,0.714286,5,-25.7143,0},
  {1235,163,0.714286,5,-14.2857,0},
  {1241,169,0.714286,2.5,-3.9968e-15,0},
  {1242,169,0.714286,2.5,5.71429,0},
  {1243,169,0.714286,2.5,11.4286,0},
  {1244,169,0.714286,2.5,17.1429,0},
  {1245,169,0.714286,2.5,22.8571,0},
  {1246,169,0.714286,2.5,28.5714,0},
  {1247,169,0.714286,2.5,34.2857,0},
  {1325,175,0.714286,2.5,40,0},
  {1326,175,0.714286,2.5,45.7143,0},
  {1327,175,0.714286,2.5,51.4286,0},
  {1328,117,0.714286,2.5,57.1429,-15},
  {1329,119,0.714286,2.5,60,-12.5},
  {1330,120,0.714286,2.5,63.5714,-10},
  {1331,121,0.714286,2.5,67.1429,-10},
  {1332,122,0.714286,2.5,71.4286,-7.5},
  {1333,123,0.714286,2.5,75.7143,-7.5}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<9,true,50,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(9),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,166,2.5,0.5,-80,-20},
  {2,207,2.5,0.5,-77.5,-20},
  {3,170,2.5,0.5,-72.5,-20},
  {4,208,2.5,0.5,-70,-20},
  {5,167,2.5,0.5,-65,-20},
  {6,166,2.5,0.5,-60,-20},
  {7,207,2.5,0.5,-57.5,-20},
  {8,170,2.5,0.5,-52.5,-20},
  {9,208,2.5,0.5,-50,-20},
  {10,167,2.5,0.5,-45,-20},
  {104,166,5,0.5,40,-20},
  {105,207,5,0.5,45,-20},
  {106,170,5,0.5,55,-20},
  {107,208,5,0.5,60,-20},
  {108,167,5,0.5,70,-20},
  {112,166,5,0.5,0,-20},
  {113,207,5,0.5,5,-20},
  {114,170,5,0.5,15,-20},
  {115,208,5,0.5,20,-20},
  {116,167,5,0.5,30,-20},
  {120,166,5,0.5,-40,-20},
  {121,207,5,0.5,-35,-20},
  {122,170,5,0.5,-25,-20},
  {123,208,5,0.5,-20,-20},
  {124,167,5,0.5,-10,-20},
  {201,165,5,0.5,70,0},
  {202,206,5,0.5,60,0},
  {203,187,5,0.5,55,4},
  {204,205,5,0.5,45,0},
  {205,164,5,0.5,40,0},
  {210,165,5,0.5,30,0},
  {211,206,5,0.5,20,0},
  {212,187,5,0.5,15,4},
  {213,205,5,0.5,5,0},
  {214,164,5,0.5,0,0},
  {219,165,5,0.5,-10,0},
  {220,206,5,0.5,-20,0},
  {221,187,5,0.5,-25,4},
  {222,205,5,0.5,-35,0},
  {223,164,5,0.5,-40,0},
  {308,165,2.5,0.5,-45,0},
  {309,206,2.5,0.5,-50,0},
  {310,187,2.5,0.5,-52.5,4},
  {311,205,2.5,0.5,-57.5,0},
  {312,164,2.5,0.5,-60,0},
  {313,165,2.5,0.5,-65,0},
  {314,206,2.5,0.5,-70,0},
  {315,187,2.5,0.5,-72.5,4},
  {316,205,2.5,0.5,-77.5,0},
  {317,164,2.5,0.5,-80,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<9,false,35,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(9),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1035,173,0.714286,2.5,-45.7143,-20},
  {1036,173,0.714286,2.5,-51.4286,-20},
  {1037,173,0.714286,2.5,-57.1429,-20},
  {1038,173,0.714286,2.5,-62.8571,-20},
  {1039,173,0.714286,2.5,-68.5714,-20},
  {1040,173,0.714286,2.5,-74.2857,-20},
  {1041,173,0.714286,2.5,-80,-20},
  {1125,160,0.714286,5,65.7143,-20},
  {1126,181,0.714286,5,54.2857,-20},
  {1127,156,0.714286,5,40,-20},
  {1133,160,0.714286,5,25.7143,-20},
  {1134,181,0.714286,5,14.2857,-20},
  {1135,156,0.714286,5,4.44089e-15,-20},
  {1141,160,0.714286,5,-14.2857,-20},
  {1142,181,0.714286,5,-25.7143,-20},
  {1143,156,0.714286,5,-40,-20},
  {1230,192,0.714286,5,40,-5},
  {1231,188,0.714286,5,48.5714,-5},
  {1232,189,0.714286,5,60,-5},
  {1233,193,0.714286,5,70,-5},
  {1239,192,0.714286,5,-7.10543e-15,-5},
  {1240,188,0.714286,5,8.57143,-5},
  {1241,189,0.714286,5,20,-5},
  {1242,193,0.714286,5,30,-5},
  {1248,192,0.714286,5,-40,-5},
  {1249,188,0.714286,5,-31.4286,-5},
  {1250,189,0.714286,5,-20,-5},
  {1251,193,0.714286,5,-10,-5},
  {1325,169,0.714286,2.5,-80,0},
  {1326,169,0.714286,2.5,-74.2857,0},
  {1327,169,0.714286,2.5,-68.5714,0},
  {1328,169,0.714286,2.5,-62.8571,0},
  {1329,169,0.714286,2.5,-57.1429,0},
  {1330,169,0.714286,2.5,-51.4286,0},
  {1331,169,0.714286,2.5,-45.7143,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<10,true,50,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(10),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,166,2.5,0.5,-100,-20},
  {2,207,2.5,0.5,-97.5,-20},
  {3,170,2.5,0.5,-92.5,-20},
  {4,208,2.5,0.5,-90,-20},
  {5,167,2.5,0.5,-85,-20},
  {6,166,2.5,0.5,-80,-20},
  {7,207,2.5,0.5,-77.5,-20},
  {8,170,2.5,0.5,-72.5,-20},
  {9,208,2.5,0.5,-70,-20},
  {10,167,2.5,0.5,-65,-20},
  {18,166,5,0.5,-60,-20},
  {19,207,5,0.5,-55,-20},
  {20,170,5,0.5,-45,-20},
  {21,208,5,0.5,-40,-20},
  {22,167,5,0.5,-30,-20},
  {103,172,10,0.5,60,-20},
  {104,172,10,0.5,80,-20},
  {107,172,10,0.5,20,-20},
  {108,172,10,0.5,40,-20},
  {112,166,5,0.5,-20,-20},
  {113,207,5,0.5,-15,-20},
  {114,170,5,0.5,-5,-20},
  {115,208,5,0.5,0,-20},
  {116,167,5,0.5,10,-20},
  {201,157,10,0.5,80,-4},
  {202,171,10,0.5,70,4},
  {203,168,10,0.5,60,-4},
  {206,157,10,0.5,40,-4},
  {207,171,10,0.5,30,4},
  {208,168,10,0.5,20,-4},
  {211,165,5,0.5,10,0},
  {212,206,5,0.5,0,0},
  {213,187,5,0.5,-5,4},
  {214,205,5,0.5,-15,0},
  {215,164,5,0.5,-20,0},
  {308,165,2.5,0.5,-65,0},
  {309,206,2.5,0.5,-70,0},
  {310,187,2.5,0.5,-72.5,4},
  {311,205,2.5,0.5,-77.5,0},
  {312,164,2.5,0.5,-80,0},
  {313,165,2.5,0.5,-85,0},
  {314,206,2.5,0.5,-90,0},
  {315,187,2.5,0.5,-92.5,4},
  {316,205,2.5,0.5,-97.5,0},
  {317,164,2.5,0.5,-100,0},
  {321,165,5,0.5,-30,0},
  {322,206,5,0.5,-40,0},
  {323,187,5,0.5,-45,4},
  {324,205,5,0.5,-55,0},
  {325,164,5,0.5,-60,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<10,false,36,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(10),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1035,173,0.714286,2.5,-65.7143,-20},
  {1036,173,0.714286,2.5,-71.4286,-20},
  {1037,173,0.714286,2.5,-77.1429,-20},
  {1038,173,0.714286,2.5,-82.8571,-20},
  {1039,173,0.714286,2.5,-88.5714,-20},
  {1040,173,0.714286,2.5,-94.2857,-20},
  {1041,173,0.714286,2.5,-100,-20},
  {1047,191,0.714286,5,-30,-20},
  {1048,195,0.714286,5,-40,-20},
  {1049,194,0.714286,5,-51.4286,-20},
  {1050,190,0.714286,5,-60,-20},
  {1125,186,0.714286,10,80,-20},
  {1126,185,0.714286,10,60,-20},
  {1129,186,0.714286,10,40,-20},
  {1130,185,0.714286,10,20,-20},
  {1133,160,0.714286,5,5.71429,-20},
  {1134,181,0.714286,5,-5.71429,-20},
  {1135,156,0.714286,5,-20,-20},
  {1228,183,0.714286,10,60,0},
  {1229,184,0.714286,10,80,0},
  {1233,183,0.714286,10,20,0},
  {1234,184,0.714286,10,40,0},
  {1240,192,0.714286,5,-20,-5},
  {1241,188,0.714286,5,-11.4286,-5},
  {1242,189,0.714286,5,-8.00001e-09,-5},
  {1243,193,0.714286,5,10,-5},
  {1325,169,0.714286,2.5,-100,0},
  {1326,169,0.714286,2.5,-94.2857,0},
  {1327,169,0.714286,2.5,-88.5714,0},
  {1328,169,0.714286,2.5,-82.8571,0},
  {1329,169,0.714286,2.5,-77.1429,0},
  {1330,169,0.714286,2.5,-71.4286,0},
  {1331,169,0.714286,2.5,-65.7143,0},
  {1342,162,0.714286,5,-60,0},
  {1343,182,0.714286,5,-45.7143,0},
  {1344,163,0.714286,5,-34.2857,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<11,true,64,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(11),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,152,2.5,0.5,80,-20},
  {9,166,2.5,0.5,40,-20},
  {10,207,2.5,0.5,42.5,-20},
  {11,170,2.5,0.5,47.5,-20},
  {12,208,2.5,0.5,50,-20},
  {13,167,2.5,0.5,55,-20},
  {14,166,2.5,0.5,60,-20},
  {15,207,2.5,0.5,62.5,-20},
  {16,170,2.5,0.5,67.5,-20},
  {17,208,2.5,0.5,70,-20},
  {18,167,2.5,0.5,75,-20},
  {22,166,5,0.5,0,-20},
  {23,207,5,0.5,5,-20},
  {24,170,5,0.5,15,-20},
  {25,208,5,0.5,20,-20},
  {26,167,5,0.5,30,-20},
  {101,159,10,0.5,-120,-20},
  {102,172,10,0.5,-110,-20},
  {103,161,10,0.5,-100,-20},
  {106,159,10,0.5,-80,-20},
  {107,172,10,0.5,-70,-20},
  {108,161,10,0.5,-60,-20},
  {111,166,5,0.5,-40,-20},
  {112,207,5,0.5,-35,-20},
  {113,170,5,0.5,-25,-20},
  {114,208,5,0.5,-20,-20},
  {115,167,5,0.5,-10,-20},
  {203,171,10,0.5,-100,4},
  {204,171,10,0.5,-120,4},
  {207,171,10,0.5,-60,4},
  {208,171,10,0.5,-80,4},
  {212,165,5,0.5,-10,0},
  {213,206,5,0.5,-20,0},
  {214,187,5,0.5,-25,4},
  {215,205,5,0.5,-35,0},
  {216,164,5,0.5,-40,0},
  {311,165,2.5,0.5,75,0},
  {312,206,2.5,0.5,70,0},
  {313,187,2.5,0.5,67.5,4},
  {314,205,2.5,0.5,62.5,0},
  {315,164,2.5,0.5,60,0},
  {316,165,2.5,0.5,55,0},
  {317,206,2.5,0.5,50,0},
  {318,187,2.5,0.5,47.5,4},
  {319,205,2.5,0.5,42.5,0},
  {320,164,2.5,0.5,40,0},
  {328,165,5,0.5,30,0},
  {329,206,5,0.5,20,0},
  {330,187,5,0.5,15,4},
  {331,205,5,0.5,5,0},
  {332,164,5,0.5,0,0},
  {401,153,2.5,0.5,112.5,0.5},
  {402,154,2.5,0.5,110,0},
  {403,137,2.5,0.5,105,-1.5},
  {404,138,2.5,0.5,102.5,-2.5},
  {405,139,2.5,0.5,100,-3.5},
  {406,140,2.5,0.5,95,-6.5},
  {407,141,2.5,0.5,92.5,-9.5},
  {408,142,2.5,0.5,90,-11},
  {409,143,2.5,0.5,90,-10},
  {410,144,2.5,0.5,87.5,-12},
  {411,144,2.5,0.5,85,-12},
  {412,145,2.5,0.5,82.5,-11.5},
  {413,146,2.5,0.5,80,-11.5}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<11,false,46,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(11),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1026,173,0.714286,2.5,74.2857,-20},
  {1027,173,0.714286,2.5,68.5714,-20},
  {1028,173,0.714286,2.5,62.8571,-20},
  {1029,173,0.714286,2.5,57.1429,-20},
  {1030,173,0.714286,2.5,51.4286,-20},
  {1031,173,0.714286,2.5,45.7143,-20},
  {1032,173,0.714286,2.5,40,-20},
  {1043,160,0.714286,5,25.7143,-20},
  {1044,181,0.714286,5,14.2857,-20},
  {1045,156,0.714286,5,4.44089e-15,-20},
  {1128,186,0.714286,10,-100,-20},
  {1129,185,0.714286,10,-120,-20},
  {1133,186,0.714286,10,-60,-20},
  {1134,185,0.714286,10,-80,-20},
  {1140,191,0.714286,5,-10,-20},
  {1141,195,0.714286,5,-20,-20},
  {1142,194,0.714286,5,-31.4286,-20},
  {1143,190,0.714286,5,-40,-20},
  {1225,183,0.714286,10,-120,0},
  {1226,184,0.714286,10,-100,0},
  {1229,183,0.714286,10,-80,0},
  {1230,184,0.714286,10,-60,0},
  {1233,162,0.714286,5,-40,0},
  {1234,182,0.714286,5,-25.7143,0},
  {1235,163,0.714286,5,-14.2857,0},
  {1325,179,0.714286,2.5,80,-20},
  {1326,179,0.714286,2.5,82.8571,-20},
  {1327,179,0.714286,2.5,85.7143,-20},
  {1328,136,0.714286,2.5,88.5714,-17.5},
  {1329,147,0.714286,2.5,91.4286,-15},
  {1330,148,0.714286,2.5,95,-10},
  {1331,149,0.714286,2.5,98.5714,-7.5},
  {1332,150,0.714286,2.5,103.571,-5},
  {1333,151,0.714286,2.5,108.571,-2.5},
  {1334,180,0.714286,2.5,114.286,0},
  {1345,169,0.714286,2.5,40,0},
  {1346,169,0.714286,2.5,45.7143,0},
  {1347,169,0.714286,2.5,51.4286,0},
  {1348,169,0.714286,2.5,57.1429,0},
  {1349,169,0.714286,2.5,62.8571,0},
  {1350,169,0.714286,2.5,68.5714,0},
  {1351,169,0.714286,2.5,74.2857,0},
  {1357,192,0.714286,5,-7.10543e-15,-5},
  {1358,188,0.714286,5,8.57143,-5},
  {1359,189,0.714286,5,20,-5},
  {1360,193,0.714286,5,30,-5}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<12,true,65,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(12),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,166,2.5,0.5,-100,-20},
  {2,207,2.5,0.5,-97.5,-20},
  {3,170,2.5,0.5,-92.5,-20},
  {4,208,2.5,0.5,-90,-20},
  {5,167,2.5,0.5,-85,-20},
  {6,166,2.5,0.5,-80,-20},
  {7,207,2.5,0.5,-77.5,-20},
  {8,170,2.5,0.5,-72.5,-20},
  {9,208,2.5,0.5,-70,-20},
  {10,167,2.5,0.5,-65,-20},
  {18,166,2.5,0.5,-60,-20},
  {19,207,2.5,0.5,-57.5,-20},
  {20,170,2.5,0.5,-52.5,-20},
  {21,208,2.5,0.5,-50,-20},
  {22,167,2.5,0.5,-45,-20},
  {23,166,2.5,0.5,-40,-20},
  {24,207,2.5,0.5,-37.5,-20},
  {25,170,2.5,0.5,-32.5,-20},
  {26,208,2.5,0.5,-30,-20},
  {27,167,2.5,0.5,-25,-20},
  {103,172,10,0.5,60,-20},
  {104,172,10,0.5,80,-20},
  {108,166,5,0.5,20,-20},
  {109,207,5,0.5,25,-20},
  {110,170,5,0.5,35,-20},
  {111,208,5,0.5,40,-20},
  {112,167,5,0.5,50,-20},
  {116,166,5,0.5,-20,-20},
  {117,207,5,0.5,-15,-20},
  {118,170,5,0.5,-5,-20},
  {119,208,5,0.5,0,-20},
  {120,167,5,0.5,10,-20},
  {201,157,10,0.5,80,-4},
  {202,171,10,0.5,70,4},
  {203,168,10,0.5,60,-4},
  {206,165,5,0.5,50,0},
  {207,206,5,0.5,40,0},
  {208,187,5,0.5,35,4},
  {209,205,5,0.5,25,0},
  {210,164,5,0.5,20,0},
  {215,165,5,0.5,10,0},
  {216,206,5,0.5,0,0},
  {217,187,5,0.5,-5,4},
  {218,205,5,0.5,-15,0},
  {219,164,5,0.5,-20,0},
  {308,165,2.5,0.5,-65,0},
  {309,206,2.5,0.5,-70,0},
  {310,187,2.5,0.5,-72.5,4},
  {311,205,2.5,0.5,-77.5,0},
  {312,164,2.5,0.5,-80,0},
  {313,165,2.5,0.5,-85,0},
  {314,206,2.5,0.5,-90,0},
  {315,187,2.5,0.5,-92.5,4},
  {316,205,2.5,0.5,-97.5,0},
  {317,164,2.5,0.5,-100,0},
  {325,165,2.5,0.5,-25,0},
  {326,206,2.5,0.5,-30,0},
  {327,187,2.5,0.5,-32.5,4},
  {328,205,2.5,0.5,-37.5,0},
  {329,164,2.5,0.5,-40,0},
  {330,165,2.5,0.5,-45,0},
  {331,206,2.5,0.5,-50,0},
  {332,187,2.5,0.5,-52.5,4},
  {333,205,2.5,0.5,-57.5,0},
  {334,164,2.5,0.5,-60,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<12,false,46,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(12),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1035,173,0.714286,2.5,-65.7143,-20},
  {1036,173,0.714286,2.5,-71.4286,-20},
  {1037,173,0.714286,2.5,-77.1429,-20},
  {1038,173,0.714286,2.5,-82.8571,-20},
  {1039,173,0.714286,2.5,-88.5714,-20},
  {1040,173,0.714286,2.5,-94.2857,-20},
  {1041,173,0.714286,2.5,-100,-20},
  {1052,173,0.714286,2.5,-25.7143,-20},
  {1053,173,0.714286,2.5,-31.4286,-20},
  {1054,173,0.714286,2.5,-37.1429,-20},
  {1055,173,0.714286,2.5,-42.8571,-20},
  {1056,173,0.714286,2.5,-48.5714,-20},
  {1057,173,0.714286,2.5,-54.2857,-20},
  {1058,173,0.714286,2.5,-60,-20},
  {1125,186,0.714286,10,80,-20},
  {1126,185,0.714286,10,60,-20},
  {1129,160,0.714286,5,45.7143,-20},
  {1130,181,0.714286,5,34.2857,-20},
  {1131,156,0.714286,5,20,-20},
  {1137,160,0.714286,5,5.71429,-20},
  {1138,181,0.714286,5,-5.71429,-20},
  {1139,156,0.714286,5,-20,-20},
  {1228,183,0.714286,10,60,0},
  {1229,184,0.714286,10,80,0},
  {1235,192,0.714286,5,20,-5},
  {1236,188,0.714286,5,28.5714,-5},
  {1237,189,0.714286,5,40,-5},
  {1238,193,0.714286,5,50,-5},
  {1244,192,0.714286,5,-20,-5},
  {1245,188,0.714286,5,-11.4286,-5},
  {1246,189,0.714286,5,-8.00001e-09,-5},
  {1247,193,0.714286,5,10,-5},
  {1325,169,0.714286,2.5,-100,0},
  {1326,169,0.714286,2.5,-94.2857,0},
  {1327,169,0.714286,2.5,-88.5714,0},
  {1328,169,0.714286,2.5,-82.8571,0},
  {1329,169,0.714286,2.5,-77.1429,0},
  {1330,169,0.714286,2.5,-71.4286,0},
  {1331,169,0.714286,2.5,-65.7143,0},
  {1342,169,0.714286,2.5,-60,0},
  {1343,169,0.714286,2.5,-54.2857,0},
  {1344,169,0.714286,2.5,-48.5714,0},
  {1345,169,0.714286,2.5,-42.8571,0},
  {1346,169,0.714286,2.5,-37.1429,0},
  {1347,169,0.714286,2.5,-31.4286,0},
  {1348,169,0.714286,2.5,-25.7143,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<13,true,40,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(13),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,166,5,0.5,-100,-20},
  {2,207,5,0.5,-95,-20},
  {3,170,5,0.5,-85,-20},
  {4,208,5,0.5,-80,-20},
  {5,167,5,0.5,-70,-20},
  {10,166,5,0.5,-60,-20},
  {11,207,5,0.5,-55,-20},
  {12,170,5,0.5,-45,-20},
  {13,208,5,0.5,-40,-20},
  {14,167,5,0.5,-30,-20},
  {103,172,10,0.5,60,-20},
  {104,172,10,0.5,80,-20},
  {107,172,10,0.5,20,-20},
  {108,172,10,0.5,40,-20},
  {112,166,5,0.5,-20,-20},
  {113,207,5,0.5,-15,-20},
  {114,170,5,0.5,-5,-20},
  {115,208,5,0.5,0,-20},
  {116,167,5,0.5,10,-20},
  {201,157,10,0.5,80,-4},
  {202,171,10,0.5,70,4},
  {203,168,10,0.5,60,-4},
  {206,157,10,0.5,40,-4},
  {207,171,10,0.5,30,4},
  {208,168,10,0.5,20,-4},
  {211,165,5,0.5,10,0},
  {212,206,5,0.5,0,0},
  {213,187,5,0.5,-5,4},
  {214,205,5,0.5,-15,0},
  {215,164,5,0.5,-20,0},
  {304,165,5,0.5,-70,0},
  {305,206,5,0.5,-80,0},
  {306,187,5,0.5,-85,4},
  {307,205,5,0.5,-95,0},
  {308,164,5,0.5,-100,0},
  {312,165,5,0.5,-30,0},
  {313,206,5,0.5,-40,0},
  {314,187,5,0.5,-45,4},
  {315,205,5,0.5,-55,0},
  {316,164,5,0.5,-60,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<13,false,29,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(13),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1030,191,0.714286,5,-70,-20},
  {1031,195,0.714286,5,-80,-20},
  {1032,194,0.714286,5,-91.4286,-20},
  {1033,190,0.714286,5,-100,-20},
  {1039,191,0.714286,5,-30,-20},
  {1040,195,0.714286,5,-40,-20},
  {1041,194,0.714286,5,-51.4286,-20},
  {1042,190,0.714286,5,-60,-20},
  {1125,186,0.714286,10,80,-20},
  {1126,185,0.714286,10,60,-20},
  {1129,186,0.714286,10,40,-20},
  {1130,185,0.714286,10,20,-20},
  {1133,160,0.714286,5,5.71429,-20},
  {1134,181,0.714286,5,-5.71429,-20},
  {1135,156,0.714286,5,-20,-20},
  {1228,183,0.714286,10,60,0},
  {1229,184,0.714286,10,80,0},
  {1233,183,0.714286,10,20,0},
  {1234,184,0.714286,10,40,0},
  {1240,192,0.714286,5,-20,-5},
  {1241,188,0.714286,5,-11.4286,-5},
  {1242,189,0.714286,5,-8.00001e-09,-5},
  {1243,193,0.714286,5,10,-5},
  {1325,162,0.714286,5,-100,0},
  {1326,182,0.714286,5,-85.7143,0},
  {1327,163,0.714286,5,-74.2857,0},
  {1333,162,0.714286,5,-60,0},
  {1334,182,0.714286,5,-45.7143,0},
  {1335,163,0.714286,5,-34.2857,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<14,true,30,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(14),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,166,5,0.5,-80,-20},
  {2,207,5,0.5,-75,-20},
  {3,170,5,0.5,-65,-20},
  {4,208,5,0.5,-60,-20},
  {5,167,5,0.5,-50,-20},
  {103,172,10,0.5,40,-20},
  {104,172,10,0.5,60,-20},
  {107,172,10,0.5,0,-20},
  {108,172,10,0.5,20,-20},
  {112,166,5,0.5,-40,-20},
  {113,207,5,0.5,-35,-20},
  {114,170,5,0.5,-25,-20},
  {115,208,5,0.5,-20,-20},
  {116,167,5,0.5,-10,-20},
  {201,157,10,0.5,60,-4},
  {202,171,10,0.5,50,4},
  {203,168,10,0.5,40,-4},
  {206,157,10,0.5,20,-4},
  {207,171,10,0.5,10,4},
  {208,168,10,0.5,0,-4},
  {211,165,5,0.5,-10,0},
  {212,206,5,0.5,-20,0},
  {213,187,5,0.5,-25,4},
  {214,205,5,0.5,-35,0},
  {215,164,5,0.5,-40,0},
  {304,165,5,0.5,-50,0},
  {305,206,5,0.5,-60,0},
  {306,187,5,0.5,-65,4},
  {307,205,5,0.5,-75,0},
  {308,164,5,0.5,-80,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<14,false,22,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(14),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1030,191,0.714286,5,-50,-20},
  {1031,195,0.714286,5,-60,-20},
  {1032,194,0.714286,5,-71.4286,-20},
  {1033,190,0.714286,5,-80,-20},
  {1125,186,0.714286,10,60,-20},
  {1126,185,0.714286,10,40,-20},
  {1129,186,0.714286,10,20,-20},
  {1130,185,0.714286,10,0,-20},
  {1133,160,0.714286,5,-14.2857,-20},
  {1134,181,0.714286,5,-25.7143,-20},
  {1135,156,0.714286,5,-40,-20},
  {1228,183,0.714286,10,40,0},
  {1229,184,0.714286,10,60,0},
  {1233,183,0.714286,10,0,0},
  {1234,184,0.714286,10,20,0},
  {1240,192,0.714286,5,-40,-5},
  {1241,188,0.714286,5,-31.4286,-5},
  {1242,189,0.714286,5,-20,-5},
  {1243,193,0.714286,5,-10,-5},
  {1325,162,0.714286,5,-80,0},
  {1326,182,0.714286,5,-65.7143,0},
  {1327,163,0.714286,5,-54.2857,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<15,true,15,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(15),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {3,172,10,0.5,20,-20},
  {4,172,10,0.5,40,-20},
  {7,172,10,0.5,-20,-20},
  {8,172,10,0.5,0,-20},
  {11,172,10,0.5,-60,-20},
  {12,172,10,0.5,-40,-20},
  {101,157,10,0.5,40,-4},
  {102,171,10,0.5,30,4},
  {103,168,10,0.5,20,-4},
  {106,157,10,0.5,0,-4},
  {107,171,10,0.5,-10,4},
  {108,168,10,0.5,-20,-4},
  {111,157,10,0.5,-40,-4},
  {112,171,10,0.5,-50,4},
  {113,168,10,0.5,-60,-4}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<15,false,12,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(15),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1025,186,0.714286,10,40,-20},
  {1026,185,0.714286,10,20,-20},
  {1029,186,0.714286,10,-8e-09,-20},
  {1030,185,0.714286,10,-20,-20},
  {1033,186,0.714286,10,-40,-20},
  {1034,185,0.714286,10,-60,-20},
  {1128,183,0.714286,10,20,0},
  {1129,184,0.714286,10,40,0},
  {1133,183,0.714286,10,-20,0},
  {1134,184,0.714286,10,-8e-09,0},
  {1138,183,0.714286,10,-60,0},
  {1139,184,0.714286,10,-40,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<16,true,10,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(16),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {3,172,10,0.5,0,-20},
  {4,172,10,0.5,20,-20},
  {7,172,10,0.5,-40,-20},
  {8,172,10,0.5,-20,-20},
  {101,157,10,0.5,20,-4},
  {102,171,10,0.5,10,4},
  {103,168,10,0.5,0,-4},
  {106,157,10,0.5,-20,-4},
  {107,171,10,0.5,-30,4},
  {108,168,10,0.5,-40,-4}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<16,false,8,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(16),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1025,186,0.714286,10,20,-20},
  {1026,185,0.714286,10,0,-20},
  {1029,186,0.714286,10,-20,-20},
  {1030,185,0.714286,10,-40,-20},
  {1128,183,0.714286,10,0,0},
  {1129,184,0.714286,10,20,0},
  {1133,183,0.714286,10,-40,0},
  {1134,184,0.714286,10,-20,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<17,true,70,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(17),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,166,2.5,0.5,-120,-20},
  {2,207,2.5,0.5,-117.5,-20},
  {3,170,2.5,0.5,-112.5,-20},
  {4,208,2.5,0.5,-110,-20},
  {5,167,2.5,0.5,-105,-20},
  {6,166,2.5,0.5,-100,-20},
  {7,207,2.5,0.5,-97.5,-20},
  {8,170,2.5,0.5,-92.5,-20},
  {9,208,2.5,0.5,-90,-20},
  {10,167,2.5,0.5,-85,-20},
  {18,166,2.5,0.5,-80,-20},
  {19,207,2.5,0.5,-77.5,-20},
  {20,170,2.5,0.5,-72.5,-20},
  {21,208,2.5,0.5,-70,-20},
  {22,167,2.5,0.5,-65,-20},
  {23,166,2.5,0.5,-60,-20},
  {24,207,2.5,0.5,-57.5,-20},
  {25,170,2.5,0.5,-52.5,-20},
  {26,208,2.5,0.5,-50,-20},
  {27,167,2.5,0.5,-45,-20},
  {35,166,5,0.5,-40,-20},
  {36,207,5,0.5,-35,-20},
  {37,170,5,0.5,-25,-20},
  {38,208,5,0.5,-20,-20},
  {39,167,5,0.5,-10,-20},
  {103,172,10,0.5,80,-20},
  {104,172,10,0.5,100,-20},
  {107,172,10,0.5,40,-20},
  {108,172,10,0.5,60,-20},
  {112,166,5,0.5,0,-20},
  {113,207,5,0.5,5,-20},
  {114,170,5,0.5,15,-20},
  {115,208,5,0.5,20,-20},
  {116,167,5,0.5,30,-20},
  {201,157,10,0.5,100,-4},
  {202,171,10,0.5,90,4},
  {203,168,10,0.5,80,-4},
  {206,157,10,0.5,60,-4},
  {207,171,10,0.5,50,4},
  {208,168,10,0.5,40,-4},
  {211,165,5,0.5,30,0},
  {212,206,5,0.5,20,0},
  {213,187,5,0.5,15,4},
  {214,205,5,0.5,5,0},
  {215,164,5,0.5,0,0},
  {308,165,2.5,0.5,-85,0},
  {309,206,2.5,0.5,-90,0},
  {310,187,2.5,0.5,-92.5,4},
  {311,205,2.5,0.5,-97.5,0},
  {312,164,2.5,0.5,-100,0},
  {313,165,2.5,0.5,-105,0},
  {314,206,2.5,0.5,-110,0},
  {315,187,2.5,0.5,-112.5,4},
  {316,205,2.5,0.5,-117.5,0},
  {317,164,2.5,0.5,-120,0},
  {325,165,2.5,0.5,-45,0},
  {326,206,2.5,0.5,-50,0},
  {327,187,2.5,0.5,-52.5,4},
  {328,205,2.5,0.5,-57.5,0},
  {329,164,2.5,0.5,-60,0},
  {330,165,2.5,0.5,-65,0},
  {331,206,2.5,0.5,-70,0},
  {332,187,2.5,0.5,-72.5,4},
  {333,205,2.5,0.5,-77.5,0},
  {334,164,2.5,0.5,-80,0},
  {338,165,5,0.5,-10,0},
  {339,206,5,0.5,-20,0},
  {340,187,5,0.5,-25,4},
  {341,205,5,0.5,-35,0},
  {342,164,5,0.5,-40,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<17,false,50,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(17),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1035,173,0.714286,2.5,-85.7143,-20},
  {1036,173,0.714286,2.5,-91.4286,-20},
  {1037,173,0.714286,2.5,-97.1429,-20},
  {1038,173,0.714286,2.5,-102.857,-20},
  {1039,173,0.714286,2.5,-108.571,-20},
  {1040,173,0.714286,2.5,-114.286,-20},
  {1041,173,0.714286,2.5,-120,-20},
  {1052,173,0.714286,2.5,-45.7143,-20},
  {1053,173,0.714286,2.5,-51.4286,-20},
  {1054,173,0.714286,2.5,-57.1429,-20},
  {1055,173,0.714286,2.5,-62.8571,-20},
  {1056,173,0.714286,2.5,-68.5714,-20},
  {1057,173,0.714286,2.5,-74.2857,-20},
  {1058,173,0.714286,2.5,-80,-20},
  {1064,191,0.714286,5,-10,-20},
  {1065,195,0.714286,5,-20,-20},
  {1066,194,0.714286,5,-31.4286,-20},
  {1067,190,0.714286,5,-40,-20},
  {1125,186,0.714286,10,100,-20},
  {1126,185,0.714286,10,80,-20},
  {1129,186,0.714286,10,60,-20},
  {1130,185,0.714286,10,40,-20},
  {1133,160,0.714286,5,25.7143,-20},
  {1134,181,0.714286,5,14.2857,-20},
  {1135,156,0.714286,5,4.44089e-15,-20},
  {1228,183,0.714286,10,80,0},
  {1229,184,0.714286,10,100,0},
  {1233,183,0.714286,10,40,0},
  {1234,184,0.714286,10,60,0},
  {1240,192,0.714286,5,-7.10543e-15,-5},
  {1241,188,0.714286,5,8.57143,-5},
  {1242,189,0.714286,5,20,-5},
  {1243,193,0.714286,5,30,-5},
  {1325,169,0.714286,2.5,-120,0},
  {1326,169,0.714286,2.5,-114.286,0},
  {1327,169,0.714286,2.5,-108.571,0},
  {1328,169,0.714286,2.5,-102.857,0},
  {1329,169,0.714286,2.5,-97.1429,0},
  {1330,169,0.714286,2.5,-91.4286,0},
  {1331,169,0.714286,2.5,-85.7143,0},
  {1342,169,0.714286,2.5,-80,0},
  {1343,169,0.714286,2.5,-74.2857,0},
  {1344,169,0.714286,2.5,-68.5714,0},
  {1345,169,0.714286,2.5,-62.8571,0},
  {1346,169,0.714286,2.5,-57.1429,0},
  {1347,169,0.714286,2.5,-51.4286,0},
  {1348,169,0.714286,2.5,-45.7143,0},
  {1359,162,0.714286,5,-40,0},
  {1360,182,0.714286,5,-25.7143,0},
  {1361,163,0.714286,5,-14.2857,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<18,true,45,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(18),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,166,5,0.5,-120,-20},
  {2,207,5,0.5,-115,-20},
  {3,170,5,0.5,-105,-20},
  {4,208,5,0.5,-100,-20},
  {5,167,5,0.5,-90,-20},
  {10,166,5,0.5,-80,-20},
  {11,207,5,0.5,-75,-20},
  {12,170,5,0.5,-65,-20},
  {13,208,5,0.5,-60,-20},
  {14,167,5,0.5,-50,-20},
  {19,166,5,0.5,-40,-20},
  {20,207,5,0.5,-35,-20},
  {21,170,5,0.5,-25,-20},
  {22,208,5,0.5,-20,-20},
  {23,167,5,0.5,-10,-20},
  {103,172,10,0.5,80,-20},
  {104,172,10,0.5,100,-20},
  {107,172,10,0.5,40,-20},
  {108,172,10,0.5,60,-20},
  {111,172,10,0.5,0,-20},
  {112,172,10,0.5,20,-20},
  {201,157,10,0.5,100,-4},
  {202,171,10,0.5,90,4},
  {203,168,10,0.5,80,-4},
  {206,157,10,0.5,60,-4},
  {207,171,10,0.5,50,4},
  {208,168,10,0.5,40,-4},
  {211,157,10,0.5,20,-4},
  {212,171,10,0.5,10,4},
  {213,168,10,0.5,0,-4},
  {304,165,5,0.5,-90,0},
  {305,206,5,0.5,-100,0},
  {306,187,5,0.5,-105,4},
  {307,205,5,0.5,-115,0},
  {308,164,5,0.5,-120,0},
  {312,165,5,0.5,-50,0},
  {313,206,5,0.5,-60,0},
  {314,187,5,0.5,-65,4},
  {315,205,5,0.5,-75,0},
  {316,164,5,0.5,-80,0},
  {320,165,5,0.5,-10,0},
  {321,206,5,0.5,-20,0},
  {322,187,5,0.5,-25,4},
  {323,205,5,0.5,-35,0},
  {324,164,5,0.5,-40,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<18,false,33,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(18),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1030,191,0.714286,5,-90,-20},
  {1031,195,0.714286,5,-100,-20},
  {1032,194,0.714286,5,-111.429,-20},
  {1033,190,0.714286,5,-120,-20},
  {1039,191,0.714286,5,-50,-20},
  {1040,195,0.714286,5,-60,-20},
  {1041,194,0.714286,5,-71.4286,-20},
  {1042,190,0.714286,5,-80,-20},
  {1048,191,0.714286,5,-10,-20},
  {1049,195,0.714286,5,-20,-20},
  {1050,194,0.714286,5,-31.4286,-20},
  {1051,190,0.714286,5,-40,-20},
  {1125,186,0.714286,10,100,-20},
  {1126,185,0.714286,10,80,-20},
  {1129,186,0.714286,10,60,-20},
  {1130,185,0.714286,10,40,-20},
  {1133,186,0.714286,10,20,-20},
  {1134,185,0.714286,10,-1.42109e-14,-20},
  {1228,183,0.714286,10,80,0},
  {1229,184,0.714286,10,100,0},
  {1233,183,0.714286,10,40,0},
  {1234,184,0.714286,10,60,0},
  {1238,183,0.714286,10,-1.42109e-14,0},
  {1239,184,0.714286,10,20,0},
  {1325,162,0.714286,5,-120,0},
  {1326,182,0.714286,5,-105.714,0},
  {1327,163,0.714286,5,-94.2857,0},
  {1333,162,0.714286,5,-80,0},
  {1334,182,0.714286,5,-65.7143,0},
  {1335,163,0.714286,5,-54.2857,0},
  {1341,162,0.714286,5,-40,0},
  {1342,182,0.714286,5,-25.7143,0},
  {1343,163,0.714286,5,-14.2857,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<19,true,35,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(19),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,166,5,0.5,-100,-20},
  {2,207,5,0.5,-95,-20},
  {3,170,5,0.5,-85,-20},
  {4,208,5,0.5,-80,-20},
  {5,167,5,0.5,-70,-20},
  {10,166,5,0.5,-60,-20},
  {11,207,5,0.5,-55,-20},
  {12,170,5,0.5,-45,-20},
  {13,208,5,0.5,-40,-20},
  {14,167,5,0.5,-30,-20},
  {103,172,10,0.5,60,-20},
  {104,172,10,0.5,80,-20},
  {107,172,10,0.5,20,-20},
  {108,172,10,0.5,40,-20},
  {111,172,10,0.5,-20,-20},
  {112,172,10,0.5,0,-20},
  {201,157,10,0.5,80,-4},
  {202,171,10,0.5,70,4},
  {203,168,10,0.5,60,-4},
  {206,157,10,0.5,40,-4},
  {207,171,10,0.5,30,4},
  {208,168,10,0.5,20,-4},
  {211,157,10,0.5,0,-4},
  {212,171,10,0.5,-10,4},
  {213,168,10,0.5,-20,-4},
  {304,165,5,0.5,-70,0},
  {305,206,5,0.5,-80,0},
  {306,187,5,0.5,-85,4},
  {307,205,5,0.5,-95,0},
  {308,164,5,0.5,-100,0},
  {312,165,5,0.5,-30,0},
  {313,206,5,0.5,-40,0},
  {314,187,5,0.5,-45,4},
  {315,205,5,0.5,-55,0},
  {316,164,5,0.5,-60,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<19,false,26,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(19),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1030,191,0.714286,5,-70,-20},
  {1031,195,0.714286,5,-80,-20},
  {1032,194,0.714286,5,-91.4286,-20},
  {1033,190,0.714286,5,-100,-20},
  {1039,191,0.714286,5,-30,-20},
  {1040,195,0.714286,5,-40,-20},
  {1041,194,0.714286,5,-51.4286,-20},
  {1042,190,0.714286,5,-60,-20},
  {1125,186,0.714286,10,80,-20},
  {1126,185,0.714286,10,60,-20},
  {1129,186,0.714286,10,40,-20},
  {1130,185,0.714286,10,20,-20},
  {1133,186,0.714286,10,-8e-09,-20},
  {1134,185,0.714286,10,-20,-20},
  {1228,183,0.714286,10,60,0},
  {1229,184,0.714286,10,80,0},
  {1233,183,0.714286,10,20,0},
  {1234,184,0.714286,10,40,0},
  {1238,183,0.714286,10,-20,0},
  {1239,184,0.714286,10,-8e-09,0},
  {1325,162,0.714286,5,-100,0},
  {1326,182,0.714286,5,-85.7143,0},
  {1327,163,0.714286,5,-74.2857,0},
  {1333,162,0.714286,5,-60,0},
  {1334,182,0.714286,5,-45.7143,0},
  {1335,163,0.714286,5,-34.2857,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<20,true,20,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(20),mIsBendingPlane(true), mNofPads{0},mMotifPositions{ {
  {1,159,10,0.5,-80,-20},
  {2,172,10,0.5,-70,-20},
  {3,161,10,0.5,-60,-20},
  {103,172,10,0.5,40,-20},
  {104,172,10,0.5,60,-20},
  {107,172,10,0.5,0,-20},
  {108,172,10,0.5,20,-20},
  {111,172,10,0.5,-40,-20},
  {112,172,10,0.5,-20,-20},
  {201,157,10,0.5,60,-4},
  {202,171,10,0.5,50,4},
  {203,168,10,0.5,40,-4},
  {206,157,10,0.5,20,-4},
  {207,171,10,0.5,10,4},
  {208,168,10,0.5,0,-4},
  {211,157,10,0.5,-20,-4},
  {212,171,10,0.5,-30,4},
  {213,168,10,0.5,-40,-4},
  {303,171,10,0.5,-60,4},
  {304,171,10,0.5,-80,4}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}
template<>
SegmentationImpl0<20,false,16,berg100ToManu,MotifPosition>::SegmentationImpl0(const MotifTypeArray& motifTypes) : mId(20),mIsBendingPlane(false), mNofPads{0},mMotifPositions{ {
  {1028,186,0.714286,10,-60,-20},
  {1029,185,0.714286,10,-80,-20},
  {1125,186,0.714286,10,60,-20},
  {1126,185,0.714286,10,40,-20},
  {1129,186,0.714286,10,20,-20},
  {1130,185,0.714286,10,0,-20},
  {1133,186,0.714286,10,-20,-20},
  {1134,185,0.714286,10,-40,-20},
  {1228,183,0.714286,10,40,0},
  {1229,184,0.714286,10,60,0},
  {1233,183,0.714286,10,0,0},
  {1234,184,0.714286,10,20,0},
  {1238,183,0.714286,10,-40,0},
  {1239,184,0.714286,10,-20,0},
  {1325,183,0.714286,10,-80,0},
  {1326,184,0.714286,10,-60,0}}}
{  populatePads(motifTypes);
  createContours(motifTypes);
}

} // namespace mapping
} // namespace mch
} // namespace o2

#endif // O2_MCH_MAPPING_GENSEGMENTATIONIMPL0_H